内容は図などもあり練習問題＋解説もありわかりやすかった。前半は論理・物理設計や正規化の話で、後半はパフォーマンスやノウハウの内容となっている。タイトルに「初級者で終わりたくないあなたへ」とあるので、初級者以上を目指す人なら論理・物理設計や正規化の知識はあると思うので、前半はもっと薄くても良い気がした。
著者の主張が一貫していて読みやすいし、内容も理解しやすい。データベース設計を担当してなくても読んでおいて損はないと思う。
ここで一番えられた情報は論理設計の手順物理設計の手順パフォーマンスとテーブル最適化のトレードオフがとても分かりやすく、現在作成中のサービスの設計に大いに役に立った。星4の理由としては、グレートノウハウ、バットノウハウの例が少し想像していたものと違った。こんなことやらないでしょ...。みたいなやつが多い印象(もちろん役に立つのもありました)。あと、もう少しIdについてのノウハウが欲しいなぁという印象でした。あと、求めすぎなのかもしれないけどindexの説明が概要で終わってしまっていて、実践でどう使われているのかはよくわからなかったからほかの本をあたるしかない。一通りの流れ+αくらいのニーズには十分こたえているので結構満足ではあった。
基本的なDB知識を学べる名作
本書は、DB技術者向けに、DB論理設計および物理設計のグッドノウハウ・アンチパターンと、一方を達成させようとする際に起こり得るトレードオフの関係を解説する。初版は2012年だが、リレーショナルデータベースの考え方は大きく変わっていないし、基幹系システム等今でも登場する場面は多いので、ポイントがよくまとまった本書は今でも有用であると思う。内容は論理設計8：物理設計2くらい。噛み砕いていえば、あるべき論と現実的な制約の間でどうバランスをとっていくかが、DBエンジニアの難しいところでもあり、やりがいでもあるのだと思う。例えば、以下のような内容。■DOAとPOA：　データ→プログラムの順で考えるのがDOAで、こちらが主流。その逆がPOA。業務処理は変化しやすいがデータは変化しにくい。従って、データを先に決めると複数のプログラムが同じデータを共用でき、業務処理の変更にも柔軟に対応可能。■概念スキーマの役割：　変更に対する柔軟性の確保（データの独立性）■DB性能とサイジング：　DB性能問題の8割はディスクI/Oネックによって起きる。ゆえにサイジングでストレージの考慮も重要。また、データの整合性とパフォーマンスがトレードオフの関係にあることも意識。サイジングでは安全率をかけ、スケーラビリティの高い構成にする。■RAIDの効果：　本来の目的である信頼性の向上だけでなく、データ分散して保持することによる性能向上が期待できる。選択肢としては、少なくともRAID5で構成する。■データ復旧手順：①フルバックアップ戻し（リストア）②差分or増分バックアップ戻し（リカバリ）③トランザクションログ適用（ロールフォワード）■正規化の利点欠点：　利点①データの冗長性排除による更新時の不整合防止利点②テーブルの持つ意味が明確で理解しやすい。欠点①テーブルの数が増えるので、結合を多用することになりパフォーマンス悪化。しかし、原則正規化は可能な限り高次にすべき。■非正規化のリスク：　①検索のパフォーマンスは向上させるが、更新のパフォーマンスを低下させる。②データのリアルタイム性を低下させる。③設計変更時の手戻りが大きい。■インデックスの効力：　①アプリケーションのコードに影響を与えない。②テーブルのデータに影響を与えない。③それでいて性能改善の効果が大きい。頻繁に利用するのは、Btreeインデックス。データ量が増えても性能があまり劣化しない。
プログラマーやエンジニア向けの本ですが、文章はそれほど難解ではないので、日常的にエクセルを扱える人やPythonの基礎を学んだ人であれば7割ほどは理解できると思います。世の中の流れとして、中小企業であっても通販への対応や、自社製品の在庫管理などでデータベースを扱う場面が増えてくると思います。そんな時に、自分で設計ができなくとも、エンジニアと会話できる程度の知識が必要になるのではないでしょうか。その上で、・Excel方眼・空欄のある表・セル結合・1つの表に、種類の異なるデータをまとめる・日付、生年月日、氏名など重複する可能性がある値をキーにしてデータを扱うこれらの行為がExcelを使う上で、なぜ御法度とされるのか。なぜ批判されるのかが理解できます。SQLなど聞き慣れない単語が出てきて混乱するところまありますが、ぶっちゃけSQLのところは飛ばし読みして問題ない。表が描いてあるところと、その表に対するグッドノウハウとバッドノウハウの説明を読むだけでも十分に価値がある。またエンジニアの人がクライアントに対して「その方法でデータ入力をされると後で○○な問題が発生します」と説明する際にも使えると思います。
文章の表現が不正確または不適当な部分や誤植が多く、そのたびにつまづいたり理解に戸惑ったりしてしまう。
図と文章のバランスも良く、読みやすいDB設計　初心者の私でも分かり易い説明となっておりやって良いこと、悪いことの説明が丁寧で、とても参考になります。
物理層から論理層まで最低限必要な知識が書かれています。実務レベルの例もあり大変わかりやすかったです。
■ スペック基本、応用は持ってないけど、それくらいの知識はある■ 意図個人開発してみたいなぁ〜と思って、フロントとバックは普通に出来るけど、DBの知識が不足してるので、どうせならDBスペシャリストの勉強しちゃえば全体を網羅出来るからやろうと思ったが…教科書がわかりづらく挫折してこの本を読んだ■ 感想滅茶苦茶良い「スッキリわかるSQL入門」をやって、もう一皮剥けたい人におすすめスペシャリストの教科書では簡略されてる説明が一語一句丁寧に書かれていて、わかりやすい注意点として、この本はDB設計の話なので、データモデリングまでは解説していない開発する際に、どのようにエンティティを洗い出せば良いのか分からない人は、この本を読んだ後に、「実践的データモデリング入門」を読むことをおすすめする
買ってすぐに手放したとわかります。高額な実用書が手軽に手に入り嬉しいです。
初心者にすごく良い内容。重要な用語には英語も付いているので、将来的に働く人には役に立つだろう。本の中盤から関数についての記述になると初心者にには少し難しいかもしれない。関数あたりから難しく感じたら違う本を参考にした方がいい。
Very good book !!!
独自で提供されてるdokopyがまず動きません。初心者にはこういうトラブルは辛いです。素人ですが使うエディターはVisula Study Codeなどのほうが候補が表示されたりカッコは自動的に両方入力されたりして助かります。確かに設定や機能がありすぎと言えますが、動かないdokopy（説明も少ない）は酷い
よき
今流行りのDX…RPAを始める事も考えましたが、Pythonをかじってみます✨
プログラミング未経験者、学生、社会人1年目などの方へ向けての本だと思います。内容は対話形式でわかりやすく記載されている、優しく説明されているところは良いと思いました。ただし、他の言語の経験者からすると、内容が物足りないと思います。何か１つのソフトウェアを作ろうとすると、この書籍だけでは物足りない。しかし、本書は入門書という位置付けなので良いと思う。
Python入門ですが、どちらかというとプログラムの初心者がPythonを使ってプログラムの基本的なことを学ぶ為の本だと思います。他の言語を少しでも使った方には向いていません。入門書なのにあまりお勧めできない点は、公式のPythonをインストールさせるのではなく、Anaconda等をインストールさせて動作環境を作る事。初心者なら標準のライブラリで事足りるし基本を学ぶならば公式のものをインストールさせるべきだと思います。
開発環境はAnacondaのJupyterLabを使っています。わざと間違えたコードを書いてエラーを見たりするので写経には向いていません。初めてプログラミングを学ぶ人が独学で本を読みながら勉強するのにおすすめです。一通りやったらPython1年生に行くのががいいかも。
入門書として良い。
前のバージョンでは　窓（ウインドウ）関数についてのページがなかった。それは窓関数がSQLに追加されたばかりの新しい機能だったかららしい。今やSQLの用途は機械学習抜きには考えられないので、窓関数はSQLにおいてもっとも重要な機能ということになる。今回は窓関数の解説にかなりのページを割いている。したがって前の版を勝った人も今回の版を買って読む価値がある。
パフォーマンスや便利な記述に役立ちました。特にウインドウ関数の存在が大変役立ちました
データベースエンジニアの中級者向けの徹底指南書。SQLの読み書きはできるけど、イチからのテーブル設計にまで踏み込んだ内容です。インデックス、パーティションニングなど、テーブルの構成設計から具体的な例を交えて解説しています。とても読みやすいく、一気に読み進められます。ベンダー依存の記述は極力排除しているので、汎用性が高くレガシーな一冊です。
最初の章がcase式をselect句に書こうで始まるので、なんだか分不相応な本を手に取ってしまったかと思いきや、select文はいくらか書けるという程度でも悩んで立ち止まることなく読み進められた。データベースやSQLに対する著者の見識の高さと知識、経験によって裏打ちされているであろう「初心者にとっても深すぎない程度に抑えつつ、伝えるべき要点はしっかり示す」塩梅が絶妙で、技術本としても読み物としても完成度が高い。
本の内容はとても良いです。本に傷が入っています。読む分には問題ないのでまぁいいです。
長年のAccessユーザーで数年前からPythonを勉強しています。その関連からSQLiteを使うことになりました。SQLの知識を深めたくなり、マニュアル本を検索し購入者評価を読んでいたらこの本の評価が高かったので購入しました。内容が明瞭完結、SQLの歴史にも触れられており購入して大正解でした。ダウウンロードしたサンプルコードは、ほほSQLiteでも動きます。エラーが出たところは自分なりにコードをSQLiteで使えるように修正して、これがまた勉強になりました。非常に良い本だと思います。執筆者のミック氏に感謝したいと思います。
参考できる書き方・考え方がたくさんありますので、購入してよかったです。文字が多かったので図などが入っているとさらに分かりやすくなると思います。
状態がとてもよく、勉強できるのが楽しみです。
方言が多いと言われるSQLの中で、標準から特有の構文まで広くカバーしており、信頼できる一冊。SQLのアドレスを排除した話や行の順序の話など、著者の造詣の深さが伺える部分がちょくちょくあるのだが、なんというか独特の癖がある節がいくつかある。ただ「方言」については、すべてを網羅的にカバーしているわけではないし、掘り下げているという事もなく、あくまで標準に近い範囲に絞っている。方言が多すぎるというのもあるだろうけど。初心者には向かないかも知れない。
内容通りで品物もよかったです。
SQLに関して右も左もわからない時に読みました。自分でシェル操作を用いながらSQLの文法いろはを学ぶことが出来ました。実務面でも、この本で学んだことが基本となって、応用スキルなどにもトライする事が出来ています。
他の参考書も見ましたが、余計な事は載っているのに肝心な事はないというものが多い中、本書籍は知りたい事がすべて載っています。初心者が知りたい基本なSQL文から、中級者が知りたい副問合せ文や内部、外部結合、exists句など幅広い領域をカバーしている手引き本と感じました。応用編を期待しています。
分かりやすいと思います。
2016年出版とだいぶ古いが、それでも基礎となるDB/SQLの知識はそれほど大きな変化はないので、基礎固めに使えると思う。使用するRDBはPostgreSQLだが、標準SQLに準拠した記述がメインなので他RDBの学習でも(自力で構築してしまえば)問題ない。Oracle, MySQL, MS Serverの三強は2022年現在でも変わっていないが、PostgreSQLはMongoDBと並んで猛烈にシェアを伸ばしている言語だし、幸運なことに今流行りのBaaSの中でも勢いづきそうなSupabaseで採用されているRDBはPostgreDBなので、今後PostgreSQLは伸びそうな予感もする。ただし、本書はPostgreSQL 9.5.3、MySQL 5.7環境なので、PostgreSQL 14.2、MySQL 8.0.29の現環境では齟齬があるかもしれない。
現在私は新卒２年目SEで、DB/SQL等について基礎から学びなおしたいと思い本書を購入した。基礎知識があるのでスムーズに読むことができたが、基礎知識が無い方でもある程度時間をかければ理解可能であると思われる。この本を読んだからといっていきなりSQLをゴリゴリかけるようになるわけではないが、体系的にSQLで何ができるのか、について学びなおすことはできた。以下、個人的な感想である。良い点）異なる製品ごとにSQLが用意してあること。本文では「方言」といったニュアンスで製品ごとのSQLの書き方の違いを説明している。不満な点）もう少し踏み入った内容までこの本だけで網羅してあると良いと思った。ただ、対象者がそうではないことも承知しているためそこまで不満な点ではない。
なぜどの入門者用の書籍やウェブサイトもSELECT文の評価順序の話をしないのでしょうか。これを知らないでちゃんと理解するのは不可能だと思うのですが。
当方、マーケティング業務担当で、SQLは全くの初心者ですが、業務で必要になったので勉強のため購入しました。以下、感想です。●初学者にとって必要な知識が一通り広く浅く網羅されており、SQLの基本を体系立てて学習することができるので、最初の1冊としておすすめ。●ただし、本書を読んだだけだと、あくまで広く浅く一通りの道具を覚えただけ。実践でそれらの道具を組み合わせて使えるようになるためには、また別の書籍あるいは数多くの実践で鍛える必要があると思われる（大学受験の数学で、教科書を読んだだけではレベルの高い問題は解けず、そこからひたすら練習問題を解いたことを思い出した）。●本書には、実務でよく使うと思われるWITH句の説明がない。次の改訂版ではぜひ入れてほしい。●相関サブクエリとEXISTSの説明は、初心者にとっては本書だけでは理解できなかった。●9-3項のプログラムが、サンプルコードをそのままコピペしてもエラーになって通らなかった。
SQLを業務で使用することになり急遽購入しました。困ったことはこちらの本で解決でき、本当に助かります。
注文から手元に届くまで予定よりも遅れました。しかしちゃんと通知が来たのであまり不安にならずに済みました。肝心の中身については、現在読み進めている所ですが今までSQLにほっとんど触ったことのないほぼ初心者にもわかりやすい作りになっていると思います。基本的な記述や、なぜそうなるのかの説明、またやってはならない、やるべきではないことも理由と合わせて載っていて「何でだろう？」「こうするとどうなんだろう？」という疑問も、ちゃんと読めば書いてくれています。練習問題がついているのもありがたいですね。
ありがとうございました。
仕事用に購入
ウェブサイトでのアプリケーションを学んでいるのでこちらの本を購入してみました。あまり詳しくないので、色んな用語につまりはありますが、イラストも交えての説明もあるので、初心者でも勉強にはなります。脆弱性の原因、対策等を丁寧に解説してくれています。
この第2版はOWASP Top10 2017を反映することも目的だったようですが、この本のスタイルだと現行のOWASP Top10 2021を反映した改訂は事実上不可能な気もします。それはともかくとして、この本の中身に文句を垂れることができる程、読んで理解していないので不用意はことは書かないようにしますが、セキュリティを口にするならPHPなんか使わないでRustを使え、とだけは言いたい気がします。
HTTPヘッダ、文字エンコーディング、CORSなど前提知識も簡単に解説されるため、Webエンジニアではない当方でも内容についていくことができ、助かりました。また脆弱性への対策内容によっては基本設計フェイズから考慮しておくべきところがあるなど、開発の流れに対する言及もあり、実際の開発プロジェクトの参考になります。Web系エンジニアのみならずITに関わる人間は一読の価値があります。もちろん本書に書かれている内容がITセキュリティのすべてではありません。しかしこんにちのビジネスシーンでは、顧客に直接価値を直接届けるWebアプリの重要性はますます高まっており、本書の内容も役に立つものと思います。
助かりました
Webアプリケーションを作成するに当たって発生しうる脆弱性の手順とその対策について体系的に学べる本です。インターネット上などで不確かな、断片的な情報は収集しているがセキュリティ系を体系的に学べる場がなく困っていたという立場なので助かりました。自分の場合はある程度対象の脆弱性と対策について調査、下準備くらいの知識があったので不確かな箇所や考慮が及ばなかった箇所などを補うといった形で感心しながら読み進めています。読者のスキルレベルとしてはJavascriptで一通りHTML要素を操作できる、どの言語でもプログラムの実用的な読み書きが一通りできる、Webコンテンツや通信の大まかな仕組みを理解できているといったレベルでないとスクリプト例や内容を読んでの具体的なイメージには繋がりにくいかもしれないです。良くないところは他の方が言われている通り初版がかなり前なので参照が古すぎて参考にならない部分(ほとんどが補足のようなものですが)があるのと結構ボリュームがあるので全部を読もうとすると時間がかなりかかります…スクリプト部分は実装の際に見返すことにしてサッと流し見で通過しても良いかもしれません。読むのは大変ですが関連技術の知識の補強やこれってどういう仕組みで起きるんだろう？と原因や仕組みが気になるプログラム初学者の方にはお勧めです！
自らセキュリティ分野の書籍に手を伸ばすのはそれなりにITリテラシーの高い方々だと思うので、そうした人にとっては少し物足りなさを感じる内容だろうとは思いますが、ウェブ系を自称する技術者の大半が「セキュリティなんてフレームワーク任せ」「パラメータ改ざんって何ですか？」なんてのが国内のシステム開発現場のリアルな現状なのでそうした方々に一読いただきたい一冊です。近年はサイバーセキュリティの重要性も増し、情報処理安全確保支援士試験(登録セキスペ)合格を目指す人も増えていますのでそうした方の入門書としてもおススメです。
くどい。昔の単一のブラウザ限定などかなり低い確率の脆弱性であっても、脆弱性となり得るものを拾い集めてきて、コツコツと説明してる。ひとつひとつ丁寧に1から10まで。しかし結局の対策としては他の脆弱性と同じく、php.iniの設定や入力値チェックを行う対策となる。脆弱性についての論文って感じ。そして全体の印象として少し古い。約10年前に初版発行のようだから、その名残だろうか。ウォーターフォール型の開発モデルで、脆弱性診断が専門の人にとっては、良い本かもしれない。後半に報告書などのサンプルもあったから、ターゲットがその辺なんだろうか。開発者にとっては、とにかくくどい。ドコモのガラケー時代の話とか2020年の今では歴史書を読んでいるようだ。ベストプラクティスとその理由を簡潔に教えて欲しいって人には、合ってないと思う。最後まで読んだ結果、新たに得られた知識はあまり無い。もっと簡潔に、こういうコードを打ち込むとこうなります。対策はこれです。脆弱性の原因はこれです。で伝えられる内容だと思う。600ページ以上あるが、200ページほどにまとめられる内容だと思う。
内容は素晴らしく読み応えありますかなりスキルは身につくと思いますあえて不満を挙げるとすれば、デザインをハッカーらしくするとカッコいいと思います
著者がこの分野に精通していることもあり、PoCのようなコードも交えて、著名な脆弱性の原因、対策等を丁寧に解説しており、とても役に立った。
Pythonの勉強、当初は色んな情報を見てゆっくり行ってましたが、2023年3月に公式問題集が出たのを知り、すぐに購入。1カ月ほど反復学習し、「Python3エンジニア認定基礎試験」に合格しました。試験のための本なので、合格できさえすれば満足です。これまで公式問題集がなかったのが残念ですが、これからは最初からあるので、試験勉強しやすくなったと思います。ただし、本の前書きで、内容がすべてそのまま出る訳ではないと言っており、実際そうだなと思ったので、高得点のためには、これ以外にも幅広く勉強しておくに越したことはありません。
「マーケティングがしっかりしてれば営業も楽になる！」と考えて、マーケティングを勉強しています。マーケティングは奥が深く、とくに「なんのためにこの情報を集めて、次につなげるのか？」を設定しないと、ただただ顧客の情報を把握するだけの状態の沼に陥るなと日々感じています。この書籍は全体として、顧客のデータを集めて良いコンテンツを作り出し、顧客のLTVを上げるための方法を上流から書いています。とくに3章の「仮説を作る」ところは事例も多く、理解と納得の多い賞でした。フレームワークまでいかないですが、自分の会社でも使えそうです。マーケティングの本なので難しくまだ読み切れていないですが、参考書として今後もつかってきたいです
レビューでは本の内容を書くべきだとは思いますが、同じ状況に遭遇する方がいたらと思い書き残します。「利用可能な端末」にiPhone等の記載が無く、実際にiPhone、iPadだと本を開けません。幸いWindowsPCで読めそうなのでそれで読む予定ですが、AppleユーザーでKindle版の購入を考えている方はご注意ください。
コンテンツの作り方、顧客データから仮説をつくる方法の詳細手順が記載されており参考になる。漠然としたコンテンツ作りや無意味にパーソナライズされたペルソナ設定など主観的なイメージでマーケ施策を実施して、結果検証するも判断しにくく、惰性で継続してしまうという事態は良くあるケースかと思います。本書ではコンテンツ作り、KPI設定、データの見方、また他部署を動かす手法までより良いマーケティング施策に改善していくための詳細の進め方が書かれており、取り入れれる部分は多いと感じる。ページ数の割に情報量が多くまとまっているので必要な部分から読んで実践したいマーケティングに関わる方にはオススメの1冊
題名で興味を持ち購入したのですが、肝心のデータドリブン、定量データに基づく分析から戦略、戦術へのつなげ方の内容が薄いです。一般的な経営戦略用語の定義にも違和感があるところがありました。(KSFとか)データドリブンマーケティングの本というよりは、デジタルマーケティングのPDCAを網羅している本だと思って買ったほうがいいと思います。
顧客のLife Time Valueを最大限にするにはどうするのかを示した１冊。本書は10章構成で順序立てて、説明されてる。6章までは基本的な内容で7章以降は応用的な内容の印象を得た。内容面でもなかなか充実している。マーケティング部門の責任者として、部下にもまずは共通言語として読ませたい。個人的には「バウンダリーオブジェクト」の考え方部分が参考になった。応用編など本書の続編にも期待したい★4つ。
マーケティングの本ですが、書かれている内容は、仕事全般、それ以上に広く社会を見る際の思考の道筋として有益なのではないか、と思いました。目的・目標を立て、それをどのように実現・達成するか、またそのプロセスの確からしさを客観的に示せるか、を意識することを常態化することができれば、成果も出るし、世の中の事象の理解が進むだろと。思考の整理の仕方として身につけられるよう、この本をしっかり読み込もうと考えています。
営業組織をまとめる中で、メンバーにマーケティングを教えることも増えている。もう営業とマーケの境目もない状態である。常に自分もアップデートする必要があり、書店に寄って鮮やかなピンクの帯に手を取ってしまった。2章のコンテンツブリーフだけでも買ってよかったと思う。提案のときにもこのシートを参考に情報を整理したいと思った。ここで自分の仮説やファクト（らしい）情報と全体像を照らし合わせていける。特典の資料ダウンロードは助かる。あと図が多く、メンバーに伝えるときにも参考になります。現場のマーケティング関係者だけでなく営業をしている人や意思決定者との共通言語になるように書かれているのはすごくいいので★5で。
本書は、マクロ視点でのマーケティングの全体像から、ミクロ視点での一次データを使った分析と改善への活かし方まで、幅広く解説しています。特に、仮説の作り方について詳しく説明されており、定量データを使った仮説検証の解像度が上がりました。
TypeScript、React、Next.jsを実際に動かしながら学べたのがよかったです。コード例多いのが嬉しい。
TypeScriptやReactの機能の基本的な説明は全般的にわかりやすく、機能が存在する理由についても理解することができました。Next.jsの基本的な機能についても同様で、SSG/SSR/ISRの存在意義についてわかりやすかったです。ただし、実際の開発の章に入っていくと、著者の好みの実装について押し付けられる感が強い（実装の詳細を含めすぎ）と感じました。前半の章と同じように、もっとNext.jsの設計としてどんな点を重視しているかが目立つように書けなかったのかな〜と残念でした。
『モダンJavaScriptの基本から始める　React実践の教科書』はスマホで見る時文字が小さすぎてズームしないと読めないし、内容もこちらの方が私には分かりやすく分かった時の感動が多かったです。GitHubに用意されているサンプルコードを使いました。
この本を有効活用するなら、全体構成を押さえて、気になるキーワードを押さえて、あとはネットで。って感じでしょうか。何しろ、詰め込み過ぎだと思います。この本は、435ページもありますが、前半の178ページで TypeScript, React.js, Next.js、と、その生い立ち、Atomic Design,スタイルを詰め込んいるのです。※残りは画面とコード例が主体のアプリ開発です。前半の178ページに色々詰め込むから、内容の取捨選択にも無理が出ちゃった感があります。例えば、ルーティングについては、Next.jsのuseRouterについて、ミニコラム(コード例含めて1ページ以下。)で済ませています。うち1行は「詳細は公式ドキュメントを参照してください。」の文章です。(125ページ)Webアプリの中身をシンプルなものにして、余ったページで、もうちょっとNext.jsの各要素などについて丁寧に説明してほしかったです。「本書が想定している読者」として「Reactをこれから学習するWebフロントエンドエンジニア」が挙げられていますが、useRefとかuseImperativeHandleとかに詳しくページを割く必要なんてなかったかも。編集がうまくいっていない、構成がカチっと決まらなくて、執筆者がつらい思いをしたような技術本は、コラムのコーナーに執筆者の未練が見え隠れしてしまうのかもしれませんね。恐ろしい。
他の方も書いてる通り、前半の説明部分はreactやnext.jsについて初学者でもわかりやすい内容になってはいるものの、後半はギッハブのリポジトリから抜粋したソースコードのコピペ...本来であれば後半は写経して試しやすい軽度なサンプルアプリケーションを作成するのが筋なのかと。リポジトリのソースはおまけに留めるべきで本誌にページを割いてまでコピペを載せることはなかったように思った。普段技術書にレビューを書かないですが、この書籍は稀に見る危機感を感じたため、あえて書いた。
満足の内容でした。
この一冊でフルスタックの開発ができ、テストや開発のハンズオン、デプロイやセキュリティ等盛りだくさんで学べます。複数の技術を横断して学べるので自分に足りない物がわかる一方、紙面の都合からか説明が質素すぎるところもあるので、わからないところは各自で別の本やネットで調べる必要があると思います。贅沢を言うならKindle版で誤植を直してほしいです。正誤表を見るのが大変です
現役のエンジニアで、モダンフロントエンドに触れてみたい人には最適かと思います。業務である程度自走して何でもできる位のレベルであればreact未経験でもスラスラ読めます。辛口コメントは上記に当てはまらない人達がやるべき学習フェーズ飛び越えちゃってるのかと。読み物としてサーット読んでモダンフロントエンドの現状だったりnext開発の手法、概念を理解する目的で使用しました。その上で自身で実装していく途中に都度読み返すのに丁度良いですね。※nextの細かい部分はネットの日本語記事はまだまだ少ないので体系的に学ぶのに最適ですよ。
第１章のレガシーなフロント開発からモダン開発への歴史の章は情報が網羅され読みやすかったが、メインの第３章あたりから重要な機能の説明に入るが、肝心なところでおかしな日本語と細切れの文章が多々出てくる。そんなに難しくないであろう機能だが、この難解な日本語を読み解くにのに苦労する。出版前に誰か査読して指摘しなかったのか不思議なほどで、おそらくライティングやティーチングに慣れていない、エンジニアリングしかやってこなかったような方が執筆しているからだと思う。内容は薄いが「モダンJavaScriptの基本から始める　React実践の教科書」のわかりやすい書き方を見習った方が良いと思う。
本の端が折れていることがありますが、今回は今までで一番ひどいです。本の内容は良いのに残念です。
今まではGCPをメインで使っていて、転職を機にAWSに環境が変わるので、とっつきとして1冊目に購入。網羅定期に詳しく手順などを説明しているわけではないが、架空の会社のサービスを題材に、ユースケースに合ったAWSサービスの紹介で頭に入ってきやすかった。
業務でモノリシックな Ruby on Rails アプリケーションを構築し、その実行環境として AWS を利用しているが、インフラ部分は別チームが担当してくれることもあり、またサービスが多すぎてどれがどれやら分からないこともあり、AWS はなんとなく取っつき難い印象があった。本書を読むことで「モダンアプリケーションだと何ができるのか？」とそれを AWS のサービスであればどのような構成で実現可能かの概要を知ることができた。ところどころに出てくるサンプルコードが Ruby だったのも途中で挫折せずに読了できた要因。勿論、この書籍だけで所謂「モダンアプリケーション」が作れるわけではないが、インフラにクラウドサービス、特に AWS を採用するのであれば従来の考え方に固執しないようにチームで読むのもいいと思う。
開発系は触ったことがなく、知見を広めるために読み進めています。私のような初心者の入門編としては申し分ないと思います。より深掘りする場合にはちょっと物足りなくなりそうだと感じました。
エンジニアではないですが、アプリやクラウドなどの技術を理解したく勉強しております。今までAWSやクラウドの本を色々読んできて培った点の知識が、本書を読むことで線になった気がします。本書を読むことで、個々の内容のつながりの理解をすすめてくれました。
題名を見てAWSに特化している内容だと思っていたのですが、「モダンアプリケーションとは何か」から始まる壮大な内容となっていました。知識として薄く、弱点だと思っていた部分を補填する目的だったのですが、さらなる弱点が次々と露出してしまったので、一から学びなおすつもりで繰り返し参照しています。内容の中に不明点なども多く、それを補足するための調査なども必要になるため、なかなか進みません。有識者に聞くのが一番手っ取り早いのでしょうが、業務的な部分でも人的な部分でも、手薄になっているカテゴリなので、ちょっとした開拓者の感覚です。時間はかかりそうですが、少しでも多く吸収して、活用できたらと思います。
初心者用で、順序通りに学んでいけばAWSを少しずつ理解できそうです。モダンアプリケーションや、そのメリットについても書かれてます。AWSを知る為の本の印象があり、本格的に理解したいユーザーは、目的に合った本が別に必要だと感じました。漫画本より二回り大きいサイズで、軽くて携帯しやすい印象ですが、休憩時間に読むような本ではなさそうでうす。文字は一般的なサイズですが、行間が広めなので読破はし易そうです。
モダンアプリケーションと称したアプリ開発の概念について書かれた書です。より効率良くアプリケーションを開発する上での運用方法などについて書かれているようですが、残念ながら、私の知識では何とも付いて行けません。デジタルトランスフォーメーションとかDXとか盛んに叫ばれる昨今においてアプリケーション開発の現場においての手法管理が書かれているという風なところを理解する事は辛うじて私にもわかりました。イラストやイメージ図がふんだんに使われて専門用語の索引が巻末に用意されており191頁で構成されています。
青黒の二色刷りイラストやキャプチャ画面が意外と多く横書きの容易な解説文のおかげで難解な内容も、何度か読んでいると理解できます。文章が、しっかりと起承転結なので、読者の持った疑問を最初に問いかけしてくれて的を絞った解説が、わかりやすさに繋がってるんだと思います確かに、第一章から第三章くらいまでは読むのに時間がかかりましたがそれ以降は、なんとなく知識が出来上がってきて読みやすくなりました。売れてる理由が分かりますね索引もあるので、辞書的な使い方もできる点、気に入りました。
私自身、勉強不足でモダンアプリケーションという言葉自体を知りませんでした。モダンアプリケーションとは何か？から始まって、仮想の会社（電子ブックストア）を例として具体的なアプローチ等が説明されています。内容的にはある程度のITの知識があれば読める内容だと思います。なお、この本自体は、実際の実装やAWSの操作方法などは記載されてません。この本では、初心者がモダンアプリケーションの概念等を理解するのに役立つ本かと思います。現在、4章あたりまで読み終えました。あと半分くらい残ってますが、理解しながら読み進め、モダンアプリケーションについて理解を深めたいと思います。
ざっと流しながら大半を半日ほどで読み終わり、その後、改めて頭に残らなかったところを1週間かけて少しずつ読み解く感じで読みました。結論から言うとサーバーレス、コンテナ、マイクロサービスといった単語の概念はわかっているが、それぞれどういう効能があるのか、今までの EC2条の nginx, tomcat, Java で作ってきたアプリケーションと何が違うのか、クラウドを活かすというのはどういうことなのか、と言ったことが、まずこの1冊で読めるのはとても便利でした。実際にこれから開発する方にもいいのかもしれませんが、自分のようにある程度過去の技術を知っていて、現場のリーダーとして、あるいは管理者として、あるいは発注側のリーダーや管理者として、モダンアプリケーションに取り組むときの、最初の羅針盤には十分なりうると感じました。自分は、The Twelve-Factor App、Beyond the Twelve-Factor App というものも知らなかったので、まずこの定義がクラウドを活かした設計を行う際に、コンパクトで使いやすい定義になっていることが参考になりました。そしてこれに沿って、本書後半では、AWSの最新のサービスが紹介されていきますが、この定義に沿ったアプリケーションを作り上げるために準備されたフレームワークであることが理解できます。実際に自分のところの商用サービスでも活用しているものがあり、現在活用していないメリットなども発見できたので、とても短時間に読める割には、非常に学びが多かったです。
娘が英会話を勉強するにあたり、英単語のわかりやすいのを探していて、こちらを購入しました。良いと思うとのことです。
音声のバリエーションが素晴らしい、一語一訳（回転が早い）で英語4技能土台作りに最高です！英検準1級を利用できる大学が増える傾向に即した1冊といえる。（この本だけでは語彙レベル足りませんが）単語を覚えながらリスニング強化は初期からしたほうが時間の無駄にならない、再生スピードを単語⇒意味なら個人差はあると思いますが1.5～2.0で十分回せます、時短はもちろんリスニング力爆上がりします。
英語の基礎を固めるために購入。とりあえずここに載っている単語を覚えておけば、文法やリスニングを勉強するときにも役に立つはずです。まだ3週目ではありますが、今後何週もして確実に覚えていこうと思っています。他にも前置詞のイメージ化や基礎単語の使い方なども詳しく解説されているのでお勧めです。
本が軽い！持ち運び楽です。
基礎を身につけたいと思いこちらを購入基礎単語に加えso farなど基礎的な熟語が幾つも載っているので非常に為になります基本的に、1単語ずつ簡単な例文がついているのでそちらを音読しイメージで理解する練習をしていますが、英文を読むペースが明らかに早くなりました単純な英文なので、挫折もしにくいと思います今後はこちらの例文を使ってリスニング練習もしていこうと思います各ページにはQRコードがついておりそれを読み取ることで音声が聴けますまた、音声ダウンロードアプリもあり、本書QRコードよりダウンロードできます一回一回QRコードの読み取りをせずに済むのでこちらをダウンロードする方が良いと思います
プログラミングの実務未経験、文系の独学者ですが充分理解できました。ただし、独学の場合、他の言語を少しかじった後で本書に取り組まれるのをお勧めします。phpも本書の前に入門書を読むと理解が進みます。確かに入門者には難しい内容ですが、独習シリーズの推奨レベルである初中級者にとっては良書です。
PHP初心者です。結論からいうと、初心者にはあまりおすすめできないです。これについては、説明でも脱初心者を対象にしているので、私の選択ミスでした。中を見ると、ズラーと網羅している感じなので、内容には困らないと思います。一旦他の本で修行して、たまに調べる用にしようと思います。
htmlを知っていた、僕にとってこの教科書は、渡に船を得たと言っても過言ではない。ちょっと読んだだけで、ページからページの式の伝達から、フォームの使い方に至るまで、あっという間の出来事となった。
本の角は折れ曲がっていたり、破れていたりしてました。中古品が送られてきた感じです。
下記の点から、こちらの分厚い本を購入しました。・PHPの仕様を深堀し、体系的にしっかり理解したい・そのためには薄い本だと上辺の知識しか得られず、満足できないだろう一般的な入門書や学習サイトには載っていないような細かい情報まで網羅されており、まさに学びたかったことを学べました。サンプルコードも充分に用意されており、気になった部分はすぐにコードを動かして試せる点も素晴らしいです。
PHPはかなり枯れた言語というイメージでしたが、この本を呼んですっかり型対応や、オブジェクト指向など、今風の機能が加わっているのに驚きました。TypeScriptとそんなに変わらないかも。個人的にはデータベースのPDOの説明部分が詳しくされており、とても役に立ちました。多くの本ではこのへんの情報は、重要なわりに、かなり簡単に記述される傾向にあります。筆者の本は説明とサンプルのバランスがとても秀逸で、その都度自分でコードを書いて確認するのが簡単にできて学習効率が非常に高まります。PHPはレンタルサーバーやクラウド環境でも最初から入っている言語で、Webサービスなどを手軽に作れるところがとてもナイスです。一般教養的な言語であり、この本を熟読すれば間違いない。開発環境ですが、私はMacを使っておりMAMPを使ってます。XAMPにはXdebugが内包されておらず、M1MacではXdebugのインストールがとても面倒なので、MacユーザーではMampのほうが良いと思います。MAMPのほうがデバッグ環境を整えるのは簡単です。
過去にプログラミング学習して挫折経験がありながらも、再度学習しようと思い立ち購入しました。挫折しながらも過去にwebサービスを作ったことはあるので、その立場からの目線ですが、この本は初学者向きではない笑ですが、表紙には「初学者向き」というワードは一切ないので、恐らく元々初心者お断りの本なんだなと思います。しかしながら、無料で学習できるProgateというサイトなど今はプログラミング入門学習サービスが充実してるので、まずはそこを一通り網羅してからこの本に臨むことをお勧めします。レビューが高いからっていきなりこの本からは、挫折というか、病むと思います笑（冒頭の環境構築から無理かと）本書の根幹部分のレビューに入りますが、コード模写を脳死で結構行うことが結構あったのですが、模写しながらも（なんでここ、このコード使うんだろう…？）てことが多かったんですが、ひとつひとつ理論がしっかり記述されており、復習にはもってこいの本でした。分厚いですが、今度は挫折しないよう適度適度に頑張っていこうと思います…根幹部分と言っておきながら浅すぎるレビューで申し訳ないですが、主張したいのはレビューが高いからと言ってこの本を買うのは一度立ち止まって考えた方が良いということを伝えたかった次第です。無駄な出費にならないように本屋などで一度確認してから買いましょう。
変数の命名規則で$ゴキブリΩⅢは避けましょうとありました。ゴキブリである意味。。。センスを疑いました。
初心者のmacの人は最初で詰みますWindows向けで書かれているのでmacの方はおすすめできません
仕事でPHPを使う事となったため、評価の高いこちらの書籍を購入しました。PHPについての詳しい仕様はもちろんのこと、「お作法」の部分についてやセキュリティを意識した箇所など、単にPHPの範囲にとどまらない解説も豊富でとても勉強になりました。版を重ねているためもあってか、誤字脱字も目立たずとても読みやすい。ただ、プログラムに関して全くの初学者の方だと難しい用語が多いかもしれません。他言語経験者にとっては非常に優れた書籍だと思います。
トレード、Pythonの基礎を学んでいる人にとって最高のシステムトレード入門書だと思う。
本文に沿って進めていけば、代表的なテクニカル分析が使えるようになり、それらのバックテストも行える。損切り、利確、手数料も設定可。バックテストの結果、buy&hold戦略に対してテクニカル分析でそれを上回るのはかなり厳しいことがわかる…色々なテクニカル分析を組み合わせて、頑張って！
Pythonを使った、株価分析の方法を図解を多用して分かりやすく説明しています。Pythonの基本しかできない、自分のような初心者でも株価分析のやり方が分かるような構成になっています。ただ、全くPythonが分からないという人は、この本と一緒に別の入門書を買うことをオススメします。
他のレビュー通りよくできた本で満足していますが、Pythonの初心者の為の改善点を述べます。１つめ: Google Colaboratoryの利用を前提にしていますが、これは扱いづらいのでTA-Libをpipでインストールする方法の解説を加えて、VSCodeで学べるようにする。もう一つは、チャートのラベル表示のコードに問題あること。サンプルプログラムに正しく表示するコードがあるにも関わらず、テキストでは触れられていない。正しいコードに全て訂正したうえでテキストで解説するのが望ましい。なお、現時点で正誤表に記載されていないのは、page165 リスト7.7 split("-")[0,　これは [0] が正しい。
読み終わりましたが、株とPython両方を学べるとてもいい本だと思っています。しかしP.67のコードは全く変わっているものの、その後数十ページに渡る変更にも関わらずPythonのバージョンが変わったからとだけ説明があり、何をしているのかについての説明が全くない。ネスト表現についての説明は割と丁寧にするけれどもこの凡例追加の説明について一切ないのは全く解せなくなる。ここは凡例のハンドラ(色の付いた線の部分)がローソクチャートの線と実体の分もあるので計5つ枠を用意して初期化して”None”を設定してから同数取得しています。(ﾛｰｿｸﾁｬｰﾄの線、実体、MA5、MA25、MA75)[2:] でMA5, MA25, MA75が取得されますし、ラベル側は辞書型で設定・取得して合わせている感じです。自分で試してより分かるようになりました。一方で、Plotlyを使っているし危うく他に本を買うところでしたがこの本でちゃんとできたのが良かった。
比較的簡単に手順書通りに環境が用意出来て、そしてサンプルプログラムを実行しながらサクサク実行出来るので、理解はスムーズでした。ただ理解がスムーズだった理由が３つあります。・すでにPythonをそこそこ理解しているのでコードの意味が理解出来た。・Pandasをすでに別途学習済みだったので、いきなり出てきたオブジェクトやメソッドがわかっていた。・元々SQLやExcelのピボットなど普段から使っていたのでどんなデータ操作をしているのか理解できた。ある程度前提知識のある人だとサクサクですが、pandasは最低別途勉強していないとただ本の通りに実行してなんにも理解出来ず、結局使えないという可能性があるので注意です。逆に言えばPandasを勉強してからこの本をやるとすごく効果的です。
基礎から実践まで勉強出来るが初学者は一度初心者向けのPythonのプログラミングに関する本を読んでからの方が良いかもしれない。ただ、強化学習に関してはほとんど触れていないのが惜しい。
データ分析の手順や考え方は初心者にも順を追って説明・実践されているので、ひとつひとつ理解するのにちょうどよいです。ただし、提供されているデータやそれを扱うコードは「動けばいい」ぐらいの内容。プログラムをやったことのある人の方が混乱をきたす可能性があります。以下のような部分でとにかく理解に苦しみました。Pythonプログラムの練習本ではない、とは明記されていますが、それにしても不親切です。・Pythonはインデントが重要なのに、コードの実例部分に一切インデントがつけられていない。・同じ処理をさせるコードなのに記法が統一されていない。・文章中に説明されていない情報がコード中に突然説明なしにでてくるため、説明文だけでは実践できない。・関数名、変数名のつけ方が簡素すぎ、あとで振り返ることを考慮していない。・同じ名前の変数に何度も編集結果を代入するため、少し前からやり直すと実行結果がおかしくなる。著者ではなく編集者の問題かもしれませんが、勉強になる反面、がっかりしたりイライラすることの多い本でした。この著者と秀和システムの本はもう買おうとは思いません。
逐一コードが示されており、まず置いてけぼりになることのない本だと思いました（横にパソコンを置いて読む本です）。当方、研究目的でpythonを日常的に使っていますが、pandasはほぼ使ったことがなく、勉強になりました。またデータ処理過程を人にプレゼンするという視点も新鮮でした。いろいろな意味で参考になりました。
Laravelの学習に限界を感じ、「もう諦めるしかないのか」と途方に暮れていた時、同名の「Laravelの教科書」という学習サイトに出会いました。驚くほどわかりやすく書いてあり、途方に暮れていた私にとっては救世主のようなサイトでした。「これが本だったら」という願いが通じたのか、出版されるというお知らせを頂くなり予約させて頂きました。Laravelは進化が早いため、既存の他の書籍では学んでいる間に混乱を招くことがあります。しかし、この本の著者様は、最新の動きに対してブログで発信もして下さってます。また、たまに届くメールマガジンがとても嬉しい情報を運んできて下さることもあります。昔、某スクールにてLaravelの学習をアドバイスしていた時のことです。私がオススメしているこの本と同名の学習サイトを補助教材として使って下さった生徒様がとても素晴らしい作品をポートフォリオとして発表されてました。この生徒様から、卒業の後にお礼のメッセージを頂きました。「○○先生なら、修了制作をデプロイも含めて、大きな力になってくれるから」とのことでした。〇〇先生とは、私のことです。嬉しくなって涙が出そうになりました。この本と学習サイトは、途方に暮れていた私を救って下さっただけではなく、私の担当した生徒様も救って下さったのです。Laravelの学習ははある程度、PHPを学んでいないとキツイと思います。しかし、ある程度PHPを学ばれた方がLaravelを学びたいと思われたなら、この本、更に同名の学習サイトは、最新のLaravelを学ぶには最高であると今でも思っております。特に、PHPはある程度学んだものの、Laravelが難しいと感じている方にオススメです。
速習 Laravel 改訂2版の方がUnlimitedでも読めるしずーーっと中身のある内容です。
プログラミング初学者です。今までにHTML、CSS、PHPと学習してきてLaravelにとりかかりました。最初に購入した本が、「前提知識の共有不足」「論理の飛躍」「書籍内で使う言葉の矛盾」などが散見されどうにもならなくなり、結果だけでなく「なぜそうなるのか」が説明されていそうな本を探して本書に辿り着きました。本書の特徴は以下に集約されます。・本の進行通りに進めれば「それらしいものができる」ではなく、「このコードで何が起きているのか」を文章で説明してくれているので、時間はかかるものの基礎から論理的に学びたい人に向いている・手っ取り早く達人のコーディングを追体験して直感的に把握したい人には向いていない・著者の背景から、初学者が何が分からないかを分かっているブログ版やLaravelで作成した学習教材も提供されているようなので、そちらも拝見したいと思います。
学習サイトの時から参考にしていた教材です。Laravelを学習し始めた当初は多くの方がお薦めする参考書やブログ、YouTubeなど様々な教材を用いてLaravelの学習をしましたが腹落ちすることはありませんでした。腹落ちしない理由としては、固過ぎる文章で理解出来なかったり、分かり易い説明をしてくれるブログや動画であっても細部が省略されて上手く実装することが出来なかったからです。Laravelの教科書は会話形式で説明が進んでいくのでとても分かり易かったです。細部まで省略せず丁寧に解説してくれていることも有難いポイントです。「平易な文章」「細部を省略しない」「全ページカラー解説」といった工夫は初心者を置き去りにしない良い教材だと思いました。今回、書籍になり付いた索引は個人的に重宝しています。学習サイトでは記憶を頼りに必要な情報を探していましたが索引があるおかげで探し易くなりました。
Laravelを勉強したい、動くものを実際に作ってみたい、そういう方には最適の入門書だと思います。対話形式や、キャラクター、各章のまとめやコラムなど、頭に入ってきやすような工夫がされているので、読み進めやすいです。実際の説明に入る前に、このテキストに書かれている通りに手を動かすと、どんな機能を持ったアプリケーションが出来るのかをイメージできるようになっているともっといいかなと思いました。なお、「手っ取り早くスキルを身に付けたい」といった方には向いてないです。実際に手を動かすとなると、それなりに試行錯誤が必要です。じっくりと時間をかけてLaravelを勉強したい、そういう方におススメです。
入力するコードが比較的少なく、その分解説の部分が丁寧になされております。また、文字サイズも丁度良く、読みやすい解説書となっています。ただし、フレームワークの解説書のため、プログラミング言語自体が初心者の方は3周はしないと理解するのは難しいと思います。逆に、他の書籍などで挫折した方には、とてもおすすめです。ps,著者の方のサイトも同様にわかりやすいです。よく利用するコマンドやコードの一覧があると嬉しいです。
エンジニア歴3ヶ月です。もともとRubyonRailsを学習していたのですが、エンジニアとして転職した会社はPHP/Laravelをメインで使っていたので、会社に入る前の1、2ヶ月間教材と同名のWebサービスを利用してLaravelを学習しました。こちらのWebサービスは非常にわかりやすく短時間でLaravelの基本を抑え、割としっかりとしたアプリを作ることができました。そのWebサービスの流れの汲む本書は、さらにLaravelの機能やプログラミングそのものを基本から丁寧に解説している良書です。アプリを作成し、Laravelのメソッドや機能を使用しても情報量が多くすぐに忘れてしまうことも多かもしれませんが、そんな時に何度でも本書を手元に置いて参考にして開発をするとググる手間が省けそうです。
kaggle挑戦者が押さえるべきテクニックを一冊に集約した本という印象です。どちらかと言えば中級レベル以上になる人のための本です。私はある程度座学を勉強して今はkaggleに取り組むためのチュートリアル的な位置づけとして本書を利用しています。機械学習を最初から勉強するための本ではないのである程度の基礎知識を得てから取り組むのがお勧めです。コードが掲載されていますがアルゴリズムの内容を詳しく説明してはいないので随時自分でググる必要性があると思います。分からなかったら途中まで調べて次に進むでも構わないと思います。完全に理解しようとすると迷子になってしまうので。また技術書は分厚く重いのでkindleで全部管理したほうが効率が上がるのでオススメです。
データの前処理、機能の作成、モデリング、評価などについて学ぶために強くおすすめする本。
手法については既知のものが多く新発見は無かったものの、情報を整理してまとめてあるので自分の中の情報を再整理することができたことと、ハイパーパラメーターなどについては勉強になった。
電子書籍で買ったのだが、とても内容が充実していて、すぐに使える一冊になっていると思います。でも、量が多すぎて、なかなかまとまった時間がないと読み切れない。しかし、これでKaggleで勝てる気がする!!と思っています。Kagglerを目指す人は必読な一冊ですね。
17ページ目で「Kaggleで勝つデータ分析の技術」という表紙が再び現れ、xviの目次が終わった次のページで33ページが始まります。2019年11月13日の初版、第4刷です。出版社は気づいてると思いますが・・・。さすがに交換して欲しいかも。追記：返品申請したらすぐに11月2日の初版、第3刷が送られてきました。これは落丁はないようです。返品は返品用バーコードを印刷、同封してコンビニから着払いで簡単でした。本の内容には満足しています。手間がかかったので星１から星４とします。
これでKaggleで勝てるようになるかというと、そんなことはないと思いますが、データ分析初心者にはとてもおすすめだと思います。アルゴリズムは、ディープラーニング、xgBoost、LightBGMなどの発展的な手法から、決定木やElastic回帰のように非常にベーシックなものまで、本当に様々なものがあります。その中からどれを使えばいいか？というのは初心者なら必ず悩むものです。本書はその点についても参考になることが書かれています。ビジネス用というよりは趣味で分析スキルを上げたい人向けでしょうか。データ分析を始めたけど、どうやって分析をしたらいいか分からない人が勉強用に使うのにとても良いと思いました。
機械学習の理論的な内容は他の書籍に譲るなど、割り切ったことを書いていますが、実践的内容が書かれていてとても勉強になります。
書いてある内容は、kaggle基礎～初級くらいの内容だと思います。すでに本格的にkaggleに取り組んでいるかたにとっては少し物足りないかなという気がします。少しkaggleに触れたくらいで、これから本格的にやっていきたいという人にとっては、体系的にまとまってて読みやすいと思います。ただ、結局はkernelとdiscussionにより多く触れる方が勝てるようになると思います。
データ解析で性能を上げるためのノウハウがふんだんに書かれている。ハイパーパラメータチューニングなども具体例とともに記載があり実践的。詰まったりしたときに、読み返すと解決のヒントが見つかることもある。全くの初心者にはピンとこないかもしれない。ある程度pythonやフレームワークを触った人向けかもしれない。自分にとってはここ１年で最も役立った本。より上級者向けの続編を期待したい。
Boosting木にデータつっこんでパラメータチューニングするだけなら非プログラマでもできる時代です。データサイエンティストとして、どういう点で勝負すべきかが学べる本です。
Notionはテキスト、画像、ファイルを保存できるので、メモやマニュアル、議事録などの多くの情報を管理できます。その解説本です。Notion初心者に良さそうな本です。一度覚えたら必須になりそうな印象で、作業の管理ができ効率が上がりそうです。緑と黒の二色刷りで、文字は気持ち小さく感じます。読みやすさは普通だと思います。漫画本より少し大きいサイズですが、持ち運びはし易そうです。
大企業向けや多機能すぎて機能のほんの一部しか使わない様なPJ管理ツールが沢山ありますが、Notionは比較的小規模な事業者、SOHOやフリーランスの方が使うのに適したプロジェクト管理ツールになっています。一人で試してみる分には、無料版で全ての機能が使えます（ユーザーの追加が出来ない、ファイル容量の制限などはある）ので、気軽に試してみることが可能です。機能が絞ってあるとはいえ、案件を正しく管理するには、それなりの手順に従って入力・操作すべき事項はありますし、各事業者それぞれのカスタマイズも必要になります。そこで本書の出番となり、Ｗｅｂクリエイターやエンジニア自身が、案件の進捗確認や、自分の抱えるタスクの見通しを効率よく立てることが出来る様になります。本書の章立ては以下の通りです。・プロジェクト管理とNotionの基本・プロジェクト管理に必要なデータベースの基本を知ろう・業務上の情報を集約しよう・Notionでプロジェクト管理システムを作ろう・作ったシステムを使ってみよう・Notionをさらに便利に使ってみよう
シンプルで読みやすいレイアウトでした。初心者ですが、理解できました。サンプルテンプレートもついているのがありがたいです。
Notionの入門書です。入門書とありますが、Notionの操作から、データベースの作成・ツールの作成方法と、Notionに関する操作を網羅していると思います。NotionAIについて触れられていないのは残念でした。
副業を開始しようと思いつつ、どこから手をつけていいのかわからなかったときこちらに出会いました。Notionについての解説が非常にわかりやすい。シンプルですがポイントを抑えて解説してくれるので非常にわかりやすかったです。右も左もわからない状態が読み終わる頃にはNotionへの理解が深まりました。
閲覧者本人が関係する社内プロジェクトの状況を確認できる情報共有ツールNotionの解説書です。・情報共有ツールNotionの特色（カスタマイズ性の高さ）・社内ポータル・ページ管理（業務に必要な情報の一元管理）・プロジェクトの進捗管理・データベース機能（プロジェクト管理に必要なデータベース）等を解説します。
とても纏まっていて、すごく分かりやすい内容でした。進捗管理をするのにどうした物かと思っていましたがサンプルのテンプレートが付いていたので嬉しかったです。
Notionでいろいろなプロジェクト管理Notionの使い方.テンプレートもあり便利です工数の管理などをして進行が捗ります
Notionを使ってチームや外部との制作進捗を管理したいと考えている人に向けて初心者指南のような位置付けです。使い方を初心者でもわかるように丁寧に説明されているので、躓きそうな部分の理解をしやすいのが嬉しいです。サンプルで付属しているテンプレートも実作業にそのまま使用できる完成度です。エクセルでの手作業の進捗管理をしていたのが笑えてくるくらい楽になります。
Notionを詳しく解説している書籍です。サンプルテンプレートもついていて入門書にピッタリだと思いました。
私は2022年の秋に安全確保支援士の試験を受験しました。午後の点がイマイチで合格とはなりませんでしたが、午前1＆午前2は突破することが出来ました。2023年も秋に受験予定です。Web上で見かける午前1対策は少し情報が古い様な気がします。過去問3年分では恐らく対策が不十分で落ちます。私は4年分位過去問をやっていたのですが、対策に不安があった事もあり、本書が発売されたらすぐに購入しました。秋試験の2～3週間前でしょうか。本書で勉強したのは午前1の範囲分だけです。本番まで過去問4年分と本書の午前1の範囲分をひたすらやり込みました。実際の試験では本書の問題もいくつか出題された為、やって良かったです。また、午前2の方でも本書に載っていた問題がいくつか出題されたので、午前1の範囲をやっておくだけで、午前2の範囲もある程度は押さえられるのは嬉しい誤算でした。前日にアイテックの高度午前Ⅰ・応用情報　午前試験対策書も軽く触ってみたのですが、本書と過去問4年分の内容とかなり被っていました。午前1の試験対策を行う場合は、本書かアイテックの本のどちらかを購入して、+αとして活用するのが良いかもしれません。
圧倒的な的中率と謳っていますが、サンプルページにも記載がある通り本書2020年版では再出題問題（全体の6割弱）中の3割しか的中しなかったようです。なので午前試験全体で言うと8割くらい本書に載ってない問題が出るということです。実際には類似した問題もあり、本書には解説も載っているのである程度カバーできますが、確実に合格したいなら過去問をたくさんやったほうが良いです。
設問とその解説、という形ですべての情報が記載されているので、飽きずに読み進めやすい。けっこう分厚くて広く浅く勉強するのには役立つ。
他の言語を触った人が読むとスラスラ理解できる。初学者にも悪くはないがもっと絵付きで解りやすい本は他にある。結局どの本を読んでも分からないところはそれなり出てくるので、さっさと評価の良い本を買って読み進めながらネットで調べたり試行錯誤して自己解決するのが吉。力になります。
本書の位置づけとしては全くのプログラミング初心者向けと思われるが、文章や説明が冗長すぎて読みにくい、ある程度なれた人にとっては索引が不十分で、忘れた項目を知りたいと思ってもなかなか探し出せない。
初心者です。初めの読み物としては非常に良かったです。
この本の悪い点は、読者のレベルを高く見積りすぎている点です。例として以下の２つが挙げられます。1つ目は「pythonの○○という記法はC++でいう〇〇です」のような説明です。一つ何でも書ける言語がある人や工学部の人にとっては分かりやすい説明かもしれませんが、そうでない人にとっては難しく、学習の障壁になると推察します。2つ目はオブジェクト指向やポインタの概念を理解している前提で話が進む点です。これは情報科学を学校や資格を通じて体系的に学んだことのある人でないとつまづくと思います。逆にこの本の良い部分は、正確かつ詳細に言語仕様やポインタの動きを記載しているため、この本をマスターすればpython中級者になれるという安心感がある点です。「イテラブル」を「for inで一回ずつ取り出せるオブジェクト」と言わずそのまま「イテラブル」と表現したり、「イミュータブル」を「不変」と言わず、同じくそのまま表現している点です。近年、難しい表現をわかりやすく言い換えることが良しとされる風潮がありますが、プログラミングは英語圏が中心のため、英語を英語のまま理解させるという意思を感じ、この本が好きになりました。個人的には★5ですが、表紙の「独学に最適！初心者でも安心して学べる親切な説明」は誇大広告であると感じたため、★4にさせていただきます。
すでに指摘されているとおり、入門書と言っても知識ゼロからの入門ではなく、基礎知識はひととおり得たひとの次のステップとして優れた内容のテキストだと思います。他の言語の経験がある人にも良いのかも。後半の応用編はライブラリの入門として分かりやすいです。解説文も丁寧でサンプルコードも分かりやすい。良く検証されたテキストだと思います。
自分は、多数のプログラミング言語の経験があるのと、Pythonに関しては、ネットの情報だけで取得してきたので、初心者ではないので、たまにリファレンスとして使いたいので、この本は目的からははずれていると思う。しかし、Pythonに関しては、C++のような標準のクラスに関してもリファレンス本みたいなものがないので、適当に数冊購入してみた中の1冊。ペラペラっと軽く見てみたが、初心者向けに丁寧に書かれているように思う。ただ、私は初心者ではないので、本当のところはわからないが・・。
この商品は解説本というよりは、Pythonのコードを調べるための辞書という感じがします。for文やwhile文などのコードの使い方が詳しく書かれています。基礎的なコードは全て書かれているので、コードを全て使いこなしたいって人にはおすすめです。ですが応用編のところはAI作成ツールを使ったAI開発があり、そのツールは英語で書かれているので理解するのが難しいと思います。
プログラミングの入門書にありがちな専門用語の羅列で分かりにくい感じがなく専門用語の説明がシンプルで丁寧で分かりやすくて良かったです。読者を置いてきぼりにしない初心者の目線で解説してくれる書籍は他にないと思います。間違ったコードを書くとどんなエラーが出て何を意味しているのかまで書かれています。他プログラミング言語を学習していた時の疑問が「あれはそういう意味だったのか」と腑に落ちたのでこの点は感動でした。購入前に本を開いてみると活字が多くついていけるか心配でしたが、この内容であればイラスト豊富な本にしなくて全然良かったです。解説の通りプログラムが動くか確認しながら読めるのも良い点です。
良く出来たマニュアルだと思う。 本当に思い付きで知識0スタートで始めた事だけど正直最初は判らない言葉もチラホラ有ったがちゃんと読んでく内に理解出来る位説明等が親切で僕の様な知識0野郎でもどうにか形になる事は出来たと思う。勿論スタートを切ったばかりの程度なのは確かだがこの手の世界の新人クンにはなれた気はする。これからもっと理解を深めて色々チャレンジしたくなる様な1冊でした。
詳しく理解出来て良かった
実務に近い例でわかりやすかった
BIのアプリ上、どこにどんな機能があって、構成されているのか、知りたかったので、ぴったりの本でした。ただ、ある程度の開発知識がある方向けだと思います。
PowerBIというBIツールの使い方を軸に、その活かし方まで基礎から丁寧に解説してくれる。誤字は多くはない。けれどもツールの進化が速すぎて執筆時とツールの画面が異なっている事がある。なんとかついていけるレベルではあるもののツールの進化の速さに驚く。演習に入る前に演習のポイントを説明してくれる点が教科書っぽいかもしれない。最初は冗長に感じたり、いつ手を動かすんだろうと不安な気持ちにもなりましたが、慣れるとその丁寧さが躓きづらさに繋がっているかもと思ったり。さらに丁寧なことに動画による概要説明までありますが、面白い試みだとは思いつつもそれほど必要ではなかった、というのが正直な感想です。動画のより良い活用方法については今後に期待したいです。書籍としてのレイアウトの良さ、実務で使えるサンプル集や見て学ぶレポート学習などツールの説明だけに留まらず様々なレポートの実例まで説明されている点が良かったです。他のBIツールの知識は不要だと思います。最初は本当に簡単に、そして徐々に難しく、おそらく中級レベルまでの内容を解説しています。DAX関数など上級レベルの内容は少し触れるだけ。分析の理論や、データ活用の進め方などは対象外であるため、これから業務でデータ活用を進めたい方は、そういう本も併せて読むことをオススメします。最後まで読みましたが、成長できたと思います。
簡単な物語仕立てで興味を引く導入。実際の画面を用いての詳細な操作手順。初学者にとても良いと感じます。この本をやりきってPower BIの概要をつかもうと前向きになれました。電子書籍で読む場合は、文字がかなり小さいので、大きめの画面をおすすめします。8インチタブレットではかなり見づらいです。10インチならなんとか読めます。
誤字脱字はあるわ、演習の手順もどこを指しているのかわからないところがあって、途中から読むのを辞めました。
自己流でやってきたので内容はちょっと難しい気がしました。理解できるように精進したいと思います。
PowerBIで何本かレポート作成をしましたが、WebやYouTubeを頼りにしていました。本質を理解せずに我流であることは薄々感づいていましたが、この本を読んでそれを強く認識し、改めて勉強するきっかけとなりました。本書の解説は、ある程度の実践経験があっても難しく感じる部分があり、初心者には難しいかもしれません。よって、本書タイトルにある「入門」を誤解しないようにした方が良いです。あくまで初級以上の方向けです。減点は、URLに脱字がありそのままでは失敗してしまうケースがあり、校正の甘さが気になったためです。良書であるため、少し残念な点です。
Power BIのセットアップからデータ取り込み、視覚化まで一通り学習することができます。タイトルに入門とありますが、具体的なステップをこの一冊ですべて理解するのは期待しないほうがよいかと。DAX関数の意味などは公式のドキュメントをみて理解を補足する必要があります。著者が本の中でHow-toだけではなく考えることが大事だと言及していますが、まさにHow-toのみを効率良く学びたいという方には向いていない入門書だと思います。個人的には、公式ドキュメントではわからない、Power BIを実際に第一線で使っている方の視点（SelectColumns、RemoveColumnsの使い分けなど）をいくつか学べることができたので買ってよかったです。
網羅的、体系的な説明ではなく、一つの事例を始めから終わりまで行う流れを説明している。説明のレベルとしては、前提知識にばらつきがあるように感じた。また随所にマイクロソフト公式ドキュメントへの参照を記載しているが、有料の書籍であれば公式より分かりやすく解説する気概が欲しい。
志の高い本と思う。BIは何か、何の役に立つかというところを熱く伝えている。残念なのは、操作指示が詳細でなく、本文の通りに操作しても画面通りのレポートにならず、自分で試行錯誤しなくてはならない箇所が多かったことだ。それがかなりストレスになり、この手の参考書としては珍しく強く眠気を催した。いったんこの本は中断して、他の参考書を終えてからやり直したいと思う。著者の定めた目標に到達できればこのツールを使う意味を理解でき、操作もある程度理解できそうだが、最初の一冊としては適切でないと判断した。
よくあるような、画面のスクリーンショットばかりで単に作業の説明をするHow to本ではなく、BIとは何か、データとは何かから丁寧に説明されている、まさにBIの入門書だと思います。6章からの実際にレポートを作成していくところでは、次はこれ、その次はこれというステップだけではなく、なぜそのステップが必要なのかも説明してくれて分かりやすいです。初心者には難しい内容もあるかと思いますが、今はわからなくても、そういうことがあるということを憶えておけば、いずれ「ああ、確かにそうだ！」と理解できる時がくると思いますし、そういえばこういう機能あったな！と役に立つことがあると思います。初心者だからこそ、単に作業だけを説明する本よりも、こちらのような考え方から丁寧に説明されている本を手に取った方がよいと思いました。
Power BIの入門書とタイトルにありますが、ツールとしての入門のみならず、BIとは、データとは、そしてそれらと向き合う考え方といったところに踏み込み、かつ平易な言葉で語りかけていただいています。かなりおすすめです。
文字の説明がとにかく多い、操作系のツールなんだから、文字じゃわかんないよ。その上文章が長いせいで読んでいて途中からわけわからなくなって、眠くなってくる。あと、説明も不十分で分かりにくい。さらに、300ページのうち冒頭の50ページ分が著者がデータに対する情熱が綴られていて、知りたいのはそこじゃないよと言いたい。そんな個人の感想は一二ページぐらいにしてよ（笑）一番ひどいのはところどころ公式サイトを見て自分で勉強しろと書かれていて、公式が分かりにくいから、参考書を買ったのに、なんじゃこりゃ（笑）さらに、サンプルデータをダウンロードをしにいったら、リンク変わってるし、やっと見つけてダウンロードしてみたら、参考書に出てくるサンプルデータと中身が違うため、同じようにやっても結果が一致しないという。。。参考書のサンプルデータって、参考書の中身と一致しないとダメでしょ（笑）最後、これは読者のために書いた本ではなく、面倒くさがり屋の著者がいかに自分のBIスキルがすごいのかを宣伝する本だね。
入門書でよくみられる、スクショ多め、カラーページ多めで見た目重視の本ではありません。単にツールの操作を覚えるための入門書とは違います。データとどのように付き合っていくのかという目的を持った人向けのノウハウが詰まっています。　最初から最後まで無駄なく、とても多くのことが語られており、ざっと通して眺めるだけでは理解できないと思います。読みやすく、分かりやすい文章で書かれていますが、１つ１つ手を動かし、調べ、吟味しながら、自分で学ぶ姿勢のある人向けの、何度も読み返す価値がある良書だと思います。
説明は良いと思いますちょいちょい著者の叙情的なところを挟むのも、雰囲気を知らせたいのだろうということでまだ許容できます構成はどうかと思います核となる事例を扱う第6章は100ページ近くありますが、その間、事例を保存するところがありませんかつ、それでも保存して後日再開しようとすると、参照先がないために開けない‥ということになりますなので、この章は保存を挟まずに一気に進めてしまう必要があります初心者ならば数時間をここで要しますので、そこに時間をさける読者、あるいは初心者でないためそこまで時間がかからない読者、またはそもそも手元で操作をしない読者のみが対象になる書かと思いますよくある、短い章節ごとにやりきりの入門書を期待するともれなく挫折しますこのあたり、出版社のQ&Aにも問い合わせましたものの、保存の仕方含めて返答ないです読者を選ぶ本ですね
できることならば、1年半前の私に贈りたい1冊。浅いIT知識のままIT関連部署に異動した私が追い求めていた基礎から実用までを教えてくれる素晴らしい1冊。サーバーとは何かをちゃんと説明できない私のようなエセSEはまずこの本から始めるべし。そうすると他の専門書がすぅ〜と理解できる。個人的には「ネットワーク超入門講座」のあとに本書を読むのがオススメ。
もう少し内容を簡潔にしてもらいものです。ざっと読むには向いていませんし、ある程度基礎知識がないと読みづらいかと思います。初心者の方にはお勧めしません。
そもそも、まったく知らない分野なので、わかったとはいえません。でも、巣篭もり中のいま、クリックすると裏ではこういうことになっているというイメージがぼんやり浮かぶようになりました。還暦すぎてますが、孫に、「おばあちゃんだって、コンピュータわかるよ！」というために、読んでます。
ロングセラー『絵で見てわかるITインフラの仕組み』の新装版です。表紙だけ見ると簡単そうですが、他の入門書に比べると深い内容も含んでいます。実生活の例を取って分かり易く説明していますが、完全な初心者だと難しいので、他の簡単な入門書を理解した後に取り組まれると良いと思います。ITインフラの常識(=勘所)に対しポイントで説明しているので、非常に良いと思います。
とても分かりやすく、内容の濃さも良いバランスでとても良い書籍です。若いときからこのような本があれば、苦労せずにすんだのに。若手から中堅に、おすすめです。
安易にイラストに頼っているわけではなく、詳しい解説の補助として「絵」を使っているだけで、かなり読み応えのある細かい内容。情報処理関係を扱っている人ならともかく、素人にはやや難しい。初心者では猶更。システムの基礎といった感じ。ただ、これからの社会はこの程度のことは次第に常識になっていくだろう。小学生からプログラミングを習い、コロナ禍でPCやタブレットを使った授業が当たり前になっていく、ZOOMで会議も当然という時代、それを支えるITインフラはますます重要になって来るから、学び甲斐のある一冊ではあると思う。
イラストも多くカラーでとても読みやすいです。サイズ的にもちょうど良い感じです。基礎の基礎からしっかりとインフラについて学ぶことが出来ています。丁寧でわかりやすい言葉でとても好感が持てます。巻中のコラムも読みごたえがあり、いい息抜きになるとともに知識を深めることに一役買ってくれています。何度も繰り返し読んで基礎力をしっかりと身につけていきたいところです･･･｡
ITに詳しくなるにはざっと読んでおくといい本。IT技術での創造性には、あまり関係がない本。何も知らないで始めるには難しいことをわかるにはおすすめ。いじってるうちにWEB上の情報でいやでもおぼえるので、いきなりダイブしたい人には無用。
今までＩＴインフラとは、分ったようで分からない部分が多かったのですが、たぶんこの本で、余すところなく網羅されていると思います。実際のところをよく知らないので、断言はできませんが。プロトコルとか冗長化とか、聞いたことはあるけどイマイチ分からなかった言葉が、きちんと分かるようになります。この本を一番読んで欲しいのは、政治家とか役人ですね。最近の戦争はほとんどＩＴ戦争ですから「ＩＴ＝イット」なんて言っちゃう人に、上で音頭取って欲しくないです。イットはスティーブン・キングでじゅうぶん。ただ、そういう人に読ませるには、まだ敷居が高いかもしれないので、もっとページ数の少ない、入門編が欲しいところです。
詳しくて挿絵が多くて分かりやすいです。しかし初心者向きではありません。ある程度、ITの知識がないと読めないです。
わかりやすい。この前に「CODE　コードから見たコンピュータのからくり」を読むとなおいいです。
クラウドなどの最近の技術を学ぶ前に、見れば吸収力が違う気がする。何よりもコンピュータが身近に感じる。
ちょいちょい誤植っぽいところがあります。
ベースはデータサイエンスなので数値解析がほとんどです。最後の方になると機械学習の実際のプログラミングができるようになってきます。これ1冊をやればデータサイエンティストとしての実力が身に付くと断言出来る1冊です。
冒頭で、沢山の人々が関わって出来上がった教材であり、大学の講義にも使っていると述べられているが、内容は薄味で、第4刷にもかかわらず誤植が結構残っているのが残念である。有効数字の桁数を含め隅々まで正確さが大切な分野だと思うのだが。老婆心ながら、以下、少しでも初学者諸君の参考になれば。p.42行範囲：列範囲→行範囲、列範囲開始インデックス、終了インデックス→開始インデックス：終了インデックスカンマで区切って指定します→コロンで区切って指定しますp.472つめの引数には〜0をセットします→2つめの引数には解と予想される近傍の値をセットします解が2つ以上あるとき、この２つめの引数に引っ張られた解１つのみが表示される。p.49from pandas import Series, DataFrame はp.34ですんでいる（再度実行しても不具合はないが必要なものはChapterの最初でimportするのか、必要になる都度importするのか、統一したほうが初心者が混乱しないと思われる）p.56attri_data1と全く同じデータなので、attri_data2に新たに代入して進行していく意義が不明。p.662.では予め import math が必要。p.818.003095・・・→　p.69の%precision 3が影響する（pandasには影響しない）ので 8.003と出力される。p.91-1.65280・・・→　-1.653 (同じ理由）他にもあるが、全部は記さず。（%precisionとして有効桁数を3からdefaultに戻しておかないと、例えばp.121のp値は0.000と出てしまうので注意）p.99calc_steps =1,000 → calc_steps =1000これは面白いミスで、”,” が入ると calc_steps は1と0のタプルになってしまう。p.102練習問題4-2の解答（p.328) 1/1110→11/1110練習問題4-2 （誤診）→（偽陽性）が正しい用語であろう。p.106ポワソン分布のところ「あの区間で事象が・・・」→「ある区間で事象が・・・」p.108練習問題4-6　ページ上部のプログラム例で#カーネル密度関数と書いてある部分を参考にすればよいのだが、解答は少々違うやり方で、グラフも２個に分けていて謎。他にも、本文の担当者と練習問題解答担当者の意思疎通がないのでは？と思わせる例が散見する。p.113numaber_cnt = np.arange(1, N+1)*1.0　→不要な行p.144#2重積分　のところでは%precisionとして有効数字をdefaultに戻して実行すれば出力と同じ結果に。ついでにp.143もその状態で再実行すると、πの値が3.1415926535897936となり、末位まで正確であることがわかる。p.156練習問題6-1の解答（p.341,342)で hier_data_frame1→hier_df1（3箇所）なお、p.182で進行を中断した。
pythonをある程度知っている人向けだと思うが、あまり知らなくてもなんとかなると思います。練習問題が豊富で、知識を定着させることができます。気になった点は、機械学習のセクションは、説明が省略されているところがあるので、他の媒体で知識を補強する必要があると思います。
この参考書は開発環境依存の構文などが多々出てきます。しかし、その環境はあまり使いやすくはなく、他環境例えばVSCodeなどで書くことをお勧めします。しかし、この参考書では環境依存の構文が出てくるため実行できないことが多々あります。しかしその説明については一切書かれていないため気を付けましょう。
データ分析の勉強がしたい時にちょうどKindleでセールしていたらから購入。多くの分析手法が記されていてとても勉強になる。本の冒頭にPython、統計などある程度の知識を持った人向けの内容みたいなことが書かれていたが、まさにその通り。全くプログラミングに触ったことがない人は他の入門書も一緒に購入することをお勧めします。少しPythonをかじったことがあって、データ分析に興味をもったからとりあえず本買って勉強してみたいなっていう人にはとてもお勧めできます。
本を読むとき、小説や数学書のように最初から順に読んでいくもの。観光案内書や辞書のように気になった点をしっかり読むもの。等々ほか、に分かれると考えます。本書は、後者の辞書的な扱いとして素晴らしい参考書だと思います。もっとも、日進月歩のある世界でしょう。
データ分析について、網羅的に解説した書籍を探して、本書を購入。Pythonの学習から始まり、Pythonを用いたデータ分析手法を教科書・カタログ的に解説しており、初心者がざっと俯瞰するには最適な書籍だと思います。ただ、どうしてもPythonのライブラリ前提の解説であるので、機械学習含めた分析の考え方の解説がぼんやりしてしまっているところが残念です。そして、他レビュアーの記載の通り、誤りが多い。これも残念です。ぱっと見てわかる誤りですが、他の部分も疑心暗鬼になり、学習を妨げる要因となっています。それでも、初心者にはデータ分析の道しるべにはなると思いますので、星4つです。
一通りコードを起こしてみました。優秀な本と思います。
本書の美点：・手取り足取りデータの前処理から予測モデルの作成、チューニングまで一通り網羅・質の良い参考書がたくさん紹介されており、これから先もある程度示してくれる・学術書でないので、安い欠点: いずれも入門書である以上当たり前ですが・アルゴリズムの数学的なところはすっとばし・実務の前処理地獄はこんなもんじゃない・この本の内容ができる程度で「AI人材」を名乗るなです。松尾先生と紐づけられがちなディープラーニングは本書にありません。実務屋育成講座に求めるのは筋違いです。（ディープラーニングは今でも、電気代とかかる時間の割に精度が……となりがちな世界です。顧客の思考パターンや外部環境の変化、といった要素をリアルタイムで反映できるほどレンタルサーバや電気代は安くありません。）また無料講座に落とされた記憶がありますが、星マイナスの理由ではありません。もっといいのが後々出てきてほしいからです。個人的には、実務で大体出てくる欠損値処理と、説明変数候補>>データ数の対処は必須かなあと。
息子の要望により購入しました。大学の授業で使用するとの事
DX界隈の仕事始める前に１～２日で全体像をつかむのによい内容。ERDとかデータモデリングとかまったくやったことない人はもう少し時間をかけて読めばよいかと。現場でやってると経営の方までは触ることないので、こういうので全体像つかんでおいて、触れるチャンスが来るのを待てばいいと思う。あとはもう、実際にやってみるしかないし、一人で全部できるもんでもないので、最初から細かい事例を詰め込んでも意味ないと思う。
網羅的に記載されているが、理想論に見えて「で、どうやってソレをやるの？」が欲しかった。あとDXとの関連が分からなかった
事例も含めデータマネジメントの概要を分かりやすくまとめられています。
期待はずれだった。マネジメントする手段の話が大半を占めており、マスターデータを統一して共同基盤を作る、組織構造にデータ部隊を作るなど、当たり前だがそれができたら苦労しない話である。期待したのは、集めたデータをどうすれば顧客価値まで繋げられるのか？であり、それがないことには資産価値も上昇しない。本書の中でダークデータの定義があるが、ただ単に統一基盤を作ってもダークデータの山とコストがかかるだけ。それをどう使うか、を知ることはできなかった。
文系の方にもわかりやすく、説明しています。会社で、何冊か買いました。
本書はいわゆるBOK本の形態ではなく、今後の企業活動において、どのようにデータと向き合って行けば良いかが、無理のない日常の取り組みとして書かれており、とても読みやすいものになっている。とはいえデータ領域の専門家にとっても目から鱗のノウハウも書かれており、正に教科書である。日本の企業ITが、とかくプロセス中心（XXXシステムを導入する事が目的）である中で、データ管理&活用が真の目的である事が全くブレていないところが改めて新鮮である。勢いで”DX導入推進”とぶち上げて中身が伴わない企業のCIOこそ、この本を読んで勉強される事を望みたい。
データマネジメントとは何か？なぜビジネスに必要とされているか？それは一体どのように適用していけばよいかが、DMBOK2の11セクションをベースに、具体例とともにとてもわかりやすく説明されております。とても良い本です。
レビュータイトル通りです。目次だけはしっかりと網羅的に記載されていたため期待していましたが、各項目が1ページ〜2ページ程度しかなくガッカリしました。中身はスカスカです。データは活用が大事ですから各部署で活用しましょう。とか、セキュリティーが大切だから保守はしっかりしましょう。的な内容で終わっています。だからどうする？どうやれば良いのか？を知りたいのに肝心のそれが書かれていません。凄い書籍と見せかけだけで中身が伴わない。ある意味凄い本です。良い社会勉強になりました
網羅的に書かれているので、必要なものを取捨選択する必要があるし、内容も概要レベルであるので、データマネジメントやデータ活用基盤に携わったことがない人が、これを読んだだけではアクションは起こせなさそうです。携わったことがある人にとっては、抜け漏れチェックや異なる考え方の確認ができそうです。
DMBOKでデータマネジメントを諦めた人にはちょうど良いボリュームと難易度という感じでした。
パソコンを買い替えたこともあり、エクセルを一から勉強し直そうと思い購入。私はアラフィフで少し老眼ですが字も見やすくて説明もわかりやすいです。子供も貸して欲しいと言ってるので親子で使いたいと思います。
コロナ禍なので、購入しました。mos試験を受験しよう思っています。合格目指して頑張ります。
著者の一人清水氏のお仕事をお手伝いしたことがある経緯もあり、読みました。本書は、Pythonプログラムを駆使して日々のお買い物行動データを探索的・仮説検証的に解析し、機械学習モデルを構築することで、ビジネスにおけるデータサイエンスのプロセスを学ぶための一冊です。現実のビジネスデータを使用し、実際にビジネスに携わる清水氏等ならではの本といえます。統計学的には除外することだけである意味軽視されることの多い「外れ値」「欠損値」がビジネス上は意外な気づきを生むことなど実務者ならではの視点があるのも読みどころです。後半で機械学習の具体的進め方をPythonのコード入れながら進めていくところが個人的には参考になりました。その最後13章でどう（素人に）機械学習結果を報告・プレゼンするかでしめているあたりも実用的です。
実データを使って、実際のビジネスの場においてどのようにデータ分析をしていくのか解説されていてわかりやすかった。途中のカラムや、後半部分には少しマニアックな内容にも触れており面白かった。データサイエンスの初学者、中級者でも勉強になる内容だと思いました！！！
初心者ですが、こちらで基礎をやって、その後模擬試験付きの問題集をといて満点合格でした。おすすめです。
独学でできるか自信がなかったけれど、このテキストの説明が丁寧でわかりやすかったので、理解出来ました。
パソコン苦手でMOS資格を取るために勉強このテキストが良いよと勧められて約1ヶ月勉強無事合格しました。本番試験と似た模擬試験が付いているので良かったです
表示通りの綺麗な本が、丁寧な梱包で届きました。発送も迅速で、予定より早く受け取れて助かりました。良い買い物ができました。ありがとうございます。
とてもわかりやすい教科書です。
学校で使ってます
Excelの機能の単発的説明で会社実務や個人の文書作成時の流れがない。ボタン等の使用方法の単発説明で具体的使用場面に乏しい。
本当にExcelを使った事のない人にはかなりわかりやすい内容になっていると思います。使ったことがある人には物足りない感じでした。初期の基礎ですね！！
初心者ようにはいいです。パソコン基礎講座で、学んだ私は習ったことばかりでした。
基礎ということで、内容は本当に基本からです。ブックの開き方から保存、簡単な関数、複数シートの編集など。「自分はインターネットで調べられるからいいや」とたかを括っていましたが、やっぱり参考書をひとつ仕上げた方が体系的に学習できます。私は紙の書籍ではなく、Kindle版を購入しました。タブレットでこちらの参考書を開きながらパソコンでExcelをさわりながら学習を進めていきました。星5でない理由最初にダウンロードをするときに知らない言葉が出てきました。本当の初心者の場合は、ある程度パソコンがわかっている人に質問できる環境があった方が進めやすいです。こちらの本で基礎固めをしたら、同社の応用にも挑戦しようと思います。
ダッシュボードとPrepを使う必要があり購入したが、実際に使う際に助けになりました。
初めてTableauを触る方には最適な入門書です。これ一冊で基本は理解できるかと思います。ある程度触った事が有る方は物足りないかもしれません。
Tableauの本はたくさんあり、いくつか読んでいますが、この本はその中でもかなりわかりやすく記載されています。一から見るというよりかは、辞書的な感じで使っています。
多くの画面キャプチャと共に完成形までの操作手順が細かく記載されているため、この書籍でTableauの基本をマスターする気が本気であれば可能ではあると思うが、あまり分かり易い解説とは思えないために、この通りの手順をTableauで模倣していったとしても、今どのような目的の為に、この操作が必要なのかとか、不明瞭なまま読み進めていくことになると思うため、たなり苦行ともいえる学習になることが予想される。正直、著者はTableauに関してスペシャリストであるがゆえに、すでにTableau初心者のモヤモヤ感が理解できずに、突っ込んだ解説があまりないまま解説が進んでいくといった印象を持った。私はまだTableau初心者のためTableauの理解のし難い箇所が分かるのだが、本書はそのような初心者がTableauの理解にまず必要であるといった重要項目についてもあまり触れていない。そのため本書をTableauの1冊目の書籍として選択してしまうと挫折してしまうか、かなり時間を割いて取り組まなければ、すんなり頭に入ってこないのではないか？と感じた次第だ。
速くできるようになりたいなら、これに沿って進めた方がいい。ネットや公式ページを読んだり、教育を受講するよりずっと速い。業務で使っているので、今後数ヶ月や数年間に渡って役に立つスキルがこの値段で手に入ると思うと安い。難しいことはなく、単純に知って使えるようになるだけなので、読み切って早く使えるようになると自分が楽。
基本の考え方から、データ変換のTableau prep製品、グラフとダッシュボード作成のTableau Desktop製品まで、必要な機能が網羅されています。業務でTableauを使っていますが、知らない使い方や情報が載っていて勉強になったので、ある程度使っている方も、一周読むと知識が強化されると思います。
Tableauの書籍を複数持っていますが、初心者がTableauを学習するなら、この書籍を選ぶことをおすすめします。図が多いので、手順が明確です。そして、すべての手順について操作方法の説明があり、迷いがありません。初心者は一つ一つの手順に解説がないと、Tableauは操作につまづくことが多いですが、この書籍であればその不安はありません。また、可視化ツールを使い始めたとき、多くの場合、細かい概念よりも、とにかくいくつかのグラフを作れるようになりたくなります。この書籍は、グラフごとの作成手順が一覧化されて列挙されているので、最短でゴールにたどり着けるイメージです。私はTableauを教える立場ですが、受講者にこの書籍を推奨しています。
Tableauで見える化したダッシュボードを、関係者に展開することになりました。決められた期日まで、あまり時間がありませんが、ゼロからこの本で勉強しています。とてもわかりやすくて、結果として順調に作成が進んでいます。時間の問題で、知りたい部分から読みつつ操作していますが、作りながら本で確認したいところを適宜読んでいます。本に沿って動かしつつ、実際のデータで実践できているので、さらに理解が深まっている気がします。
1年前からpowerqueryを使い始め、powerautomateはネットで見ながらテンプレ使ってなら軽く作れる程度で、幅を広げたいので、購入しました。powerBIの設定が、なぜかサイトからダウンロードしたPDFに書いてあるのは謎ですが、chapter7まで順調に進んできました。powerautmmateの図解が、グレーの背景色に黒字で、文字も小さく、老眼か！？と思うほどに見えにくいです。。サイズアップ希望です！会社のライセンスで試してますが、powerautomateでwordがプレミアムで有料になるため、動作確認できませんが、設定はできたので、理解はできます。
会社でライセンスがすべて使える場合は良いと思うが、そうでない場合はOffice 365 E5の試用版を使う方法があるようだが、その場合会社名もクレジットカード情報も設定しないといけなくて、会社名を適当に入れたらうまくいかなかった（再度試す予定ではあるが）。PowerAppsの画面が、2022年時点で書籍と既に変わっていて「ホーム」「アクション」などあるはずのメニューが表示されていなくて戸惑った。検索して調べたが古い情報しかなく、自分で見つけて表示する方法（近日公開の機能、プレビューから「レガシリボンを表示する」をオンにする）はわかったが、どこにも載っていなかった。Chapter3のDataverseはライセンスがなく使えず、Chapter6はPowerBIのライセンスがないので飛ばした。Chapter7はPower Automateだが、後半のところでWordテンプレートファイルを変更すると書かれていなくて、画面が画像通りに表示されず戸惑った。全体的に画面キャプチャの文字が小さい上に、本文に書かれていないことがあるので注意深く見る必要がある、全部見てもWordテンプレートファイル名は書かれていなかったように思う。Chapter8はAI Builderを使うが、こちらもライセンスがないとPower Apps側からは選択できなかった（プレミアム機能ですと表示された）巻末に載っていたが、試用版で登録しないと使えないらしい。複合的に使う説明が多いので、一部のライセンスしかない場合にとても試しづらい。私はPower Appsをメインで操作を試したかったが、E5（試用版）が使えない場合は、別の本で試したほうが良いように思う。（そもそもSharePointも使えないライセンスだとPower Appsだけでも学習しづらいが）
私の勤務先では、勤怠管理システム、請求書処理アプリ等、LINE works等、多くのシステムを使用していますが、それぞれのアプリが連携していないことで無駄な作業が発生しています。会社や部署によって、システムの使い方や改善が必要な業務も様々かと思いますので、この本で紹介頂いているPower Platformでオリジナルのアプリを作成して、多種多様なデータを連携して最適化できれば、組織全体の業務改善につながると思いました。日々の義務の中で流れていってしまうようなデータの自動整理を実現させるアプリや、案件管理、調査アプリなど、具体的な活用方法についても大変わかりやすく整理された書籍です。
ノーコードやローコードの開発手法を実践的に勉強したくて購入しました。それぞれのメリットやデメリットはなんとなく理解していましたが、実際に開発して利用するにはワークフローやデータをきっちりと定義しておく必要があることがよくわかりました。そういう意味で、学びを深めるのに最適な1冊と思います。まさに「いにしえの道を聞きても唱へても　わが行ひにせずば甲斐なし」ですね。
Power Platformの要点がわかります。ノーコードでどういうことができるか、ということについて具体例毎に理解を深めていくと、最終的に業務をこのように抽象化できるのか、という思考になり、ここまでたどりつければ面白くなってくるでしょう。技術者からするとまどろっこしい箇所もあるのですが、プログラミングやオートメーション、DX等多少興味があるかたや、ノーコードで業務をまじめに考えたいような方だと面白いと思います。単にアプリの使い方教科書として考えるとUIバージョン違い等でちょっとかわりづらいかもしれません。概観、概要をつかむための本と理解すれば良いでしょう。
業務的にDX化できないところ、困っているところなどフォーカスされていてとても良い書籍ですね
紙面どおりに進めないところが多すぎる。
アプリのレシピというサブタイトルのとおりに、アプリをどう調理していけばいいかがサクッとわかります。カラフルで見やすく頭にサクッと入ってきました。
この本１冊でPower Plattoformを使いこなせるとは思えませんが、どんな事ができるのかの全体の概要をつかむことができます。ノーコード・ローコードが主流になってきている今、そして働き手が減って、DX（デジタルトランスフォーメーション）化が謳われている今、導入するのに最適な１冊だと思います。私はITの専門家でもありませんし、コンピューターはさほど得意ではないのですが、「こんな事ができるんだ」と参考になりましたし、応用次第で色んなことができるような気がして夢が膨らみました。私たちは気づかないうちに、同じような事を行ってるそうですが、それをコンピューターに任せることができたら、その分時間が浮いて、他のことを考えることが出来ます。自分のDXに使えるのではないかと期待していますし、自分がこの歳になってまた新しい分野を勉強することにワクワクしています。専門書にしては読みやすく、ちょっと読んでみるか・・・と思わせる１冊です。
図というか実際の画面がページに大きく記載されているので初心者の人でも、書いてある通りにやれば難しくありません。それぞれが必要としてる業務のページから見ていくのがいいと思いますが、PowerPlatformを大まかに取り扱っている本なので、最初から読んでもこれはいいなというアプリが見つかると思います。
i love this book!
①まず索引がないのは致命的なミスでは(原書にはある）。670頁もある書籍では通常ありえない。ましてデータマネジメントを解説する本で。出版社はHPに索引だけでもPDFで掲載すべきでは。②主要な用語について、英日対訳表(用語集)があれば、なおよかった。③このサイズ（21 x 2.6 x 29.8 cm）でなければならなかったのか。文字を小さくすれば、もう少しコンパクトなサイズでの出版も可能だったのではないか。持ち歩くのは相当に大変で、家や職場においても相当に場所を取る。④DMBOK自体が、網羅的・抽象的であって、体系的・具体的でない。特定のビジネスに特化すれば具体的だが、汎用性がなくなるので、PMBOK同様、データマネジメントに関しての概念や用語について理解を共有するための土台でしかない。⑤これを読めばデータマネジメントのスペシャリストとしての実用的な知識が得られる訳ではない。飽くまで「知識体系ガイド」であり、参考文献の一つとして持っていて損はないという類の本。⑥翻訳のレベルはあまり高くない。読んで意味の通らない箇所は、原文を見て訳に難があることがわかる。
特定のDB製品を深掘りしたりはしません。DMPや、AI、IoTなどの具体的な進め方が書いてあるわけでもありません。そういった製品やツール導入の前提となる、”データマネジメント”が目指すべきゴール、必要な活動とそのインプット／アウトプットを、網羅的に記述しています。「取引先データの重複をなくしたい」といった”データに関するやりたいこと”があるとき、TODOで抜け漏れがないかチェックするのに使えます（事前に準備しておくことはなにか、必要なルールはなにか、成果物としてなにを作らなくちゃいけないか、どんな体制と役割があるといいか　などなど）。網羅的に記述しているので、600ページを越えています。すべて読んで理解するのは難しいです。1章のデータマネジメント概要と、3章のデータガバナンスで全体感を掴んでから、自分の仕事に必要な章を深掘りして読むとよさそうです（実際そうやって読んでます）。
網羅的であり、データマネジメントの究極の一冊です。買って損はない。オフィスに一冊。コンテンツに不満はないのですが、デザインができればもっと小さいサイズだと助かった。サイズが単純にでかいです。
英語版を読みましたが、やっと日本語訳が出版されましたね。目次を見るだけでも一目瞭然ですが、カバーしている範囲が広く、一章ごとの内容も深い。とても1ヵ月や2ヵ月では制覇できませんが、１～２年かけてじっくり読む本だと思います。値段もそれなりですが、得るところも多いので十分ペイするのではないでしょうか。辞書のように使うのも手かと思います。
書体が細すぎて視認性が低く、読みづらい。また、ページ数を減らすためか、文字詰めも詰め気味で、タイポグラフィ面・組版面で難あり。第3版まで版を重ねており、著者のブランド力や解説内容そのものなどは申し分ないと思われるだけに、非常にもったいない
Tableauの機能を紹介する書籍はたくさんありますが、BI導入でよくある失敗を避けるためのデータ分析の考え方や、Tableauの公式より詳細なユーザー事例が紹介されており、とても参考になりました。第3部「それで？」と言われない Tableau データ分析の考え方第4部 応用例で見る Tableauデータ分析：商品分析、顧客分析第5部 Tableauユーザー事例以上の章は、Tableauユーザー必見の内容だと思います。
ユーザーの、ユーザーによる、ユーザーのためのTableau本もいよいよ第3版となりましたね。内容が非常に網羅的でページ数も多い（655ページ）ですが、その分ステップバイステップの説明でわかりやすいと思いました。個人的には11章の演習と、12章の事例がとても印象に残っています。第2部（3章～7章）でしっかりと基礎を固めることができるのではないでしょうか。第3部（8章～9章）あたりではデータ分析プロジェクトの進め方や考え方にも言及されており、Tableauを始めて触る人はもちろんですが、データ分析に関わる方が参考になる内容が含まれています。Tableauを初めて触る方全員におススメです。
エンジニアにとっては、物足りない内容ですので、エンジニア向きの本ではありません。エンジニアと話を進めながら、データ分析、データ活用を考えたい方にとってはとても有用な本だと思います。SQLの活用ができれば、エンジニアに対する尊敬の念が沸き起こるなぁと感じた一冊です。エンジニアでなくとも、内容理解はそこまで難しく無いかと思いますが、SQLを使うという点では、読了後にどれだけSQLを書いたかにかかってくるかと思います。
macOSがBig Surの場合はPgAdmin 4が起動しない問題が発生しています。その場合、Postbirdなどの他のソフトウェアを使用してPostgreSQLサーバーに接続します。
ＳＱＬ解説本をいくつか拾って購入し、読み比べましたが、この本が一番要点を突いていて、現場で実践するには良い本だと思いました。解説内容にない、漏れているポイントも有りますが、それはそれ、マニュアルを引いて実践していけばよいものと思います。標題の「１０年戦える‥」は昔聞いたＣＭ「２４時間戦えますか‥」を連想させてどうかな？？？と思います。好きにはなれないタイトルです。
内容は、PostgreSQL活用入門といった感じです。まず、最初の1章の前提や説明が極端すぎです。非エンジニアがSQLでデータ分析を行えるのは非常に限定的な状況だと思います。よほど単純なシステムでない限り、どのようにデータが格納されてるのか？ERを正確に理解するだけでも大きな壁があるでしょう。また、生の数千万件以上のトランザクションデータを扱うのは、一般にエンジニアの仕事かと思います。基幹系と情報系の分け方も極端です。実際問題、非エンジニアであるユーザーが気軽に行えるデータ分析はEXCELベースでしょう。基幹システムからCSV出力してユーザーがEXCELで2次加工して蓄積したデータが膨大にありますし、または、予算の関係から基幹システムに実装できないデータもユーザーがEXCELで個々に（大量に）保持しているケースもあります。そういったデータ分析を効率的に行うには、JupyterNotebookを使いPython＋Pandasで、2次加工（整理や補正）したり集計・分析したり可視化する方が適していると思います。とはいえ、PostgreSQL活用入門としてみれば、データベース初心者向けには良いかもしれません。
初心者エンジニア です。業務上、手元やAWS AthenaでSQLコマンドを叩くことが増えており、きちんとSQLの操作の概要を把握したい + ビッグデータ、ELTの解説がされているという理由で本書を手に取りました。本書はPosgreSQLを使ったSQL操作を扱っており、SQL操作の基本の学ぶことができると同時に、応用編としてHadoopやクラウドを使ったデータ処理に関しても整理されており、大変勉強になりました。著者はSQLをエンジニアと非エンジニアを結ぶツールとして捉えており、非エンジニアの方にもおすすめできる本になると思います。
Window関数の説明が手厚いのが良かったです。その他は普通の結合やサマリーなどの説明。まぁ、RDBMSを使った分析の基礎知識って感じです。10年は食っていけるけど、プロ思考の方向けの本では無いかな。
初歩的な箇所はSQL文が丁寧に記述されていますが、実践的な内容になると「前の章で説明した～を使えば簡単に～できますね。」とか、「～を応用すれば簡単ですね。」としてSQL文が省略されている箇所が散見されます。　実際にはWebで調べても簡単には答えは見つからず、「簡単」には程遠いというのが実感です。データマイニングの知識は有るがSQLは未経験である自分が、SQLに取り組む良いきっかけになったことは確かなのですが・・・。
一般的なプログラミングの入門書ですと、機能別に章立てが分かれているため、後々のリファレンス的には使いやすいのですが、初心者が実務で使い始めるには少し回りくどい時があります。（どこをどう組み合わせて使うか迷ってしまう）その点、本書は各章で「何をやりたいか」の目的がはっきりしているため、仕事のどの作業で使えるかがイメージしやすく、まさに初心者が「現実的な分析手法を知る」には最適でした。私自身は集計・分析でほぼExcelしか使ったことがなく、これからSQLを使い始めようとしている初心者ですが、そういった人間が分析ツールを移行する上では、「今までExcelでやっていたこの作業をSQLだとどうやるのか」「そもそもDBの設計はどういう方針でやれば良いのか」など、迷う点が多々でてくるのですが、著者の解説はそういった「初心者の迷いどころ」に対して、非常に丁寧にアプローチしてくれているように感じました。また、著者自身は全てをSQLでやれと言っているわけではなく、部分的には他のツールと使い分けたら、としていたり、これはこう考えると理解しやすいですよ、という解説が入っていたり、何というか「技術者でない人向け」の目線がやさしいです（笑）本書だけで10年戦うのは無理ですが、Excelで扱いづらい大規模データが身近に増えていることを思うと、これから10年戦っていく上での足がかりを提供してくれているように思います。
access_logはデータが空っぽなので本の内容通りに進めることができずに困ってます。access_log_wideはデータがわずか５つしかないので難易度が高いです。正しいのかどうかすらわからないので正しいデータを送ってもらうように問い合わせしているものの一向に返事が来る気配がないので購入するのは控えておいたほうが良いかも知れません。
近年、急速に注目が集まっているデータ分析について、さまざまな手法が模索されています。Excelをはじめとした表計算ソフト、RやPythonなどのプログラミング言語の習得など、マスターするべき技術要素は多いですが、それぞれ一長一短で、これ一発でOKという手法はなかなかないのです。その中でもっとも現実的な解として、本書はSQLの力を借りてデータの分析を行うことをお勧めしています。実際、ゼロベースから、ある程度以上のデータ分析を比較的短時間で行えるようになるにはそれしか方法がないでしょう。したがって、本書のアプローチは正しいと思います。次に、SQLの実行環境として本書はオープンソースのPostgreSQLを採用していますが、データ分析のプラットフォームとしてPostgreSQLはきわめて有望です。したがって、使うDBの選定も正しく、この本で得た知識を即、実践に生かすことができます。また、紹介されている内容も、分析に如何にデータベースを使うかという観点から書かれており、データ分析をしているときに引っかかりがちな部分を重点的に説明しているという印象を受けます。だから、本を買ったけれども情報が不足していて、さらに本を買い足さなければならないといったことも起こらないと思うので、良心的な本だといえます。最後に、本自体のできですが、本書は文章自体も読みやすく、文字の大きさも適当で、今のところ誤植等も見つかっていません。つまり、本書は良書だといってよいと思います。＊１　実のことを言うと、すでにPostgreSQLを使ったデータ分析の本は出ていて、私も持っているのですが、残念ながら本を買ったからといって分析を始められるほど十分な情報を持たなかったのです。いっぽう、本書は、後発書だけあって、この本一冊でそれなりに分析を始めることが可能だと思うし、レベル的にも適度なレベルでとどめてあり、無駄がありません。現状、類書の中ではベストだと思います。＊２　巻末に何冊か参考文献が挙げてありますが、私が持っている本でよいと思ったのは以下の本です。[1] SQL書き方ドリル(改定新版)[2] SQL逆引き大全３６３の極意、もしくは、SQLポケットリファレンス
こちらDBS試験対策としてとてもまとまった書籍でした。大変助かりました。
データベースサービスに対してここまで網羅的に解説した本は他にはありません。この本を学習すれば試験合格は余裕でできます。
練習問題を解くだけで、「どのような問題が出るのか」や「解くときにどのような点を気にするべきか」といったことを学べます。試験を受けるにあたって、必須の一冊です！
全体的に纏まっていて、知識の整理に役立ちました。それにしてもAWS認定の書籍が充実してきて、最近は便利ですね。資格取得だけなら、苦労しないと思います。本番試験でも練習問題に似た問題がかなり出ていたと思います。
データベースにおける、論理設計、物理設計、SQL設計、DBを用いたアプリケーション設計における、業務に起こりがちなシステム案件を例に、エンジニアが陥ってしまう本来のデータベース機能を活かせなくしてしまうアンチパターンを紹介してくれている。開発現場での過去からの技術推移による積もり積もった負債による問題など逃れられず迫り来る重いものや、安易な先入観によって一気に深い奈落へと落とされる袋小路への罠など、システム開発における生きた現場感ある事例から解説を導入してくれているので非常に読みやすい。データベースを利用した開発経験者、およびこれから開発を経験する人たちを対象に価値が出てくる著作だと感じた。以下、内容メモ抜粋。------------------------１部　データベース論理設計のアンチパターン■１章：ジェイウォーク：信号無視多対多の関連を表現する交差テーブルの作成を避けるために、属性内でカンマ区切りのリストを使うパターンデメリット：カンマ区切りのリストの値を使ってテーブル結合するのが手間インデックスを使う機会も失われるCOUNT, SUM, AVGで細工が必要リストへの追記方法の細工が必要リストの区切り文字を含む文字列の挿入に注意が必要varchar(30)などで定義した場合、リストが文字列数以内に収まるための制御が必要リストのソート管理が複雑解決策：・交差テーブルを作成する。　多対多　→　　１対多：多対１　とするためのクッションのためのテーブル　インデックスを活用できるようにある。　挿入されるIDなどの妥当性を、参照生合性などで保証させることができる。　＞存在しているIDのみ登録させるようにする、など。　リストでないので、区切り文字を気にする必要なし　リストの長さ制限がある場合は、COUNT関数などで制限するようアプリ側で実装する■２章：ナイーブツリー：素朴な木親コメント、子コメントの対応ができるメッセージフォーラム掲示板の作成親コメントIDをもたせたコメントテーブルコメントの取得＞親子関係の階層が深いと、単一のSQLで取得するのが難しくなる。＞階層数だけテーブルを自己結合でjoinする必要あり削除は、子孫特定に複数クエリが必要サブツリー全体削除は、外部キーの整合性制約を満たすために、最下層から順番に子孫を削除する必要あり。アンチパターンの見つけ方。・ツリーの深さを考慮しなければならない・解決策を講じても他の作業が犠牲になり難しくなる・定期的に生合成を保つスクリプトでメンテが必要解決策；代替ツリーモデル・経路列挙モデル　属性pathに、親子関係階層を記載　1/,  1/2/,  1/4/6/7/ ...など　参照生合成を保証できず、冗長な情報を格納するという脆弱面がある。・入れ子集合モデル　各ノードに nsleft, nsrightのポインタを持たす　ツリー構造の深さ優先順にノードをなぞってnsleft, nsrightに順に値を割り振る　参照生合成を保証できない。ツリーの変更より、検索のみの場合に有利・閉包テーブルモデル　ツリーは、自分と自分以下のサブノード全てのリンクを持つ構造　＞ルートは、全てのノード、サブノードは、サブノード以下の全てのノードの情報を持つ　コメントと、ツリー構造のテーブルを分けている。階層の計算が楽な分、多くのスペースが必要（それぞれが、自分のノード以下の全てのリンクを保有するため）　＞コメントテーブルが別れているので、階層構造を削除してもコメントを定期技削除する必要がある。■３章：IDリクワイアド（とりあえずID)とりあえず主キーとしてID列を用意（サロゲートキーのような扱い）してしまうアンチパターン。サロゲートキーを用意したが、本来は、bugIDとproductIDのそれぞれ多対多の組み合わせを表現する必要があるテーブルであった。そのままではbugIDとproductIDの値が重複する行を許してしまう。そこで、bugIDとproductIDの複合ユニーク設定をすることにする。しかし、そうなっては主キーのID列の存在意義とはなんなのか。bugIDとproductIDの複合主キーでいいのではないかという話になる。解決策：・主キーはわかりやすい属性名にする。・とりあえずＩＤではなく、自然キーと複合キーを活用する。■４章：キーレスエントリ（外部キー嫌い）ストレージエンジン自体がサポートしていない（例：MySQL:MyISAM 外部キー制約をサポートしていないストレージエンジン）場合もあるが、エンジニア自体が外部キーの設計を横着してしまうアンチパターン。外部キー制約を使えないために、ユーザが無効なデータを入力した時に即座にエラーを返せない。品質管理用スクリプトという本来不要な処理も必要になってしまった。解決策：外部キー制約を宣言するメリット：参照生合成：外部キー：親テーブルの主キーやユニークキー列に存在する値のみ許可する事ができる参照制約にはカスケード更新削除処理が使える。アプリケーションコードでは真似できない。foreign key(status) references BugStatus(status)on update ascadeon delete set defaut外部キー制約でオーバヘッドは発生しない。むしろメリットがある。・挿入、更新、削除のさいに、チェック用SQL文が不要・複数テーブル変更を防ぐためのテーブルロックが不要・データ品質管理用スクリプトを独自で作って管理する必要なし■５章：EAV(エンディティ・アトリビュート・バリュー)日付ごとのカウント：日付でgroup化しcount(*)しかし、日付が行によって異なる列に格納されているケースの問題エンティティ・アトリビュート・バリュー（オープンスキーマ、スキーマレス、名前/値ペア）と呼ばれる。キー・バリュー方式とも？・列数を減らせる・新たな属性をサポートするのに列数を増やす必要なしcreate table Issues(issue_id SERIAL PRIMARY KEY);create table IssueAttributes(issue_id BEIGINT UNSIGNED NUT NULL,att_name VARCHAR(100) NOT NULL,attr_value VARCHAR(!00),PRIMARY KEY(issue_id, attr_name),FOREING KEY(issue_id) REFERENCES issue(issue_id));この場合、列値を取得するのが元来のSQLと比較して冗長になる。select issue_id, data_reported from issues;->select issue_id, attr_values as date_reportedfrom IssueAttrivuteswhere attr_name = 'date_reported';・一つのissueはissue_id,attr_nameにより複数行に別れ、行ごとに属性、属性値のペアが格納されているので、特定属性をNULLにできない。・存在が必須の属性も、行で格納されているので制約で設定することができない。・IssueAttributeの行ごとに、属性、属性値を管理しているため、列のSQLデータ型を選択できない。　＞個別のデータ型の列を追加すると、さらにクエリは複雑化してしまう。・参照制約も使うことができない。＞attr_value列が、全て参照制約の条件に合わないといけなくなる。・属性名に一貫性がないケースが起こりうる、その時のSQLも複雑になる。・同じissue_idの情報を一行の情報として取得したい場合、joinが属性数必要。アンチパターンの見つけ方・・メタデータの変更なしで拡張可能。実行時に新しい属性を定義できる・導入時の初期設定が不要で裏でDBを使っているパッケージの多くはカスタマイズしやすいようにEAV設計を採用している　＞非リレーショナルな管理なら、それらに特化したDBを使うべき・BerkleyDB・Cassandra・CorchDB・Hadoop/HBase・MongoDB・Redis・Tokyo Cabinet解決策：サブタイプのモデリングを行う・シングレテーブル継承　関連するすべてのサブタイプを一つのテーブルに格納・具象テーブル継承　サブタイプごとにテーブルを作成・クラステーブル継承　継承を活用して、スーパータイプ、サブタイプを作成・半構造化データ　サブタイプが多い場合や、頻繁に新しい属性を追加したい場合　LOB列を追加し、XML,JSONなどで属性名、属性値を共に格納する。どうしても、EAVを使わざるを得ない場合。＞行の集合として取得する。同じissue_idの複数行を、ループで取得し、オブジェクトのプロパティとして設定するPHPの例＞p101「メタデータは、メタデータのために用いましょう」■６章：ポリモーフィック関連複数の親テーブル参照をする問題行ごとに異なるテーブルとjoinして結合することはできない。解決策・参照を逆にする　交差テーブルを作成　　複数の親テーブルと、対象テーブルの多対多を表現するテーブルを、複数必要な親テーブルの数だけ作り関連づける。・道を合流させる　unionを用いて結合する：列の数とデータ型が同じである場合のみ・共通の親テーブルを作成■７章：マルチカラムアトリビュート（複数列属性）複数の値を持つ属性を格納する：１章のJAYWALKと同じテーマの問題バグの特性情報として、複数タグをもたす＞３つの属性で管理・値の検索でタグを検索する場合は、３列すべて取得が必要になる。　　一つのタグを検索するごとに、３つのorでの比較、またはin句の式が必要・3つのタグで同じ値を格納したくない　しかしマルチカラムアトリビュート・アンチパターンでは、防ぐことができない。　＞普通にinsert文で挿入できてしまうアンチパターンを使用しても良い例：3つのタグの列が、列ごとにタグを入力するロール（ユーザ、エンジニア、管理者）など目的が異なる場合。解決策：従属テーブルを作成　バグIDとタグの多対多を表現できるテーブル　＞空いているタグの列を探すことも不要で、削除、挿入が可能■8章：メタデータトリブル（トリブル：大増殖）年度ごとのデータ格納用列が、毎年追加される＞しかも、一部の顧客でしかデータが埋まらない、ほかはNULL行数が多いより少ないテーブルのクエリ実行の方が速いという考えが、誤った考えを導く危険性。・行数の多いテーブルを複数のテーブルに分割　＞年度ごとにテーブを分ける　新たなテーブル作成管理が増える　日付などが異なった年度に入らないようにcheck制約をテーブルごとに設定を変えて作成　＞日付などが、去年の情報の誤ったレコードを発見。しかし、行の更新だけだとcheck制約違反になってしまう。・列を複数列に分割　分割されたテーブルだと、複数テーブル間の主キー、ユニーク列の一意性の保証ができ>ない。　主キー値を作るためだけにテーブルを新たに一つ定義が必要複数テーブルをまたいだクエリにunionを使用＞メタデータ列の追加がある場合は、全テーブルで列を同期が必要参照整合性の管理年度ごとにテーブルが分割されているため、従属テーブルで外部キー定義ができない＞一つしか定義できないため解決策：・パーティショニングと正規化　水平パーティショニング（シャーディング）をつかう　行で分割。　行を分割するルールを決めて、物理的に分割。　物理分割されるが、一つのテーブルを扱うようにSQLステートメントを実行できる。・垂直パーティショニング：列で分割・従属テーブルの導入　マルチカラムアトリビュートの解決法と同じ------------------------２部　データベース物理設計のアンチパターン■９章：ラインディングエラー（丸め誤差）float型：実数を２進数形式でエンコードする浮動小数点の特徴を理解する必要あり＞１０進数で記述できる全てを２進数で格納できるわけでない＞丸め誤差　無限小数となってしまうものは、有限小数による近似値となる解決策：NUMERICデータ型を使用NUMERIC, DECIMAL■１０章：サーティワンフレーバー列値に規定の選択肢を複数指定する。＞check制約 in句でチェックするようにする列のデータ型は ENUMが列挙で使用できる。選択肢が増えるたびに、check制約、ドメイン、ユーザー定義型を扱うクエリは複雑化する。プログラマはアプリコード側にも値のリストを定義してメンテナンスできるように設計したがる。＞双方の同期がずれたら大きな不具合になる。選択肢の追加による構造変化には、ALTER TABLE句で既存の選択肢の値も列挙しなければならない。＞変更の際、テーブルへのアクセスをブロックし、テーブル内容をダンプし、テーブル再定義して、保存したデータを読み込まなければならない場合もある。選択肢が廃止されたり、他に統合されたり、分割された場合、選択済みの値を参照しているレコードはどうすればいいのか。解決策：限定する値をデータで指定する。　参照テーブルを作成し、許可する選択肢の値を一行に一つずつ格納する。　元のテーブルに外部キー制約を制限し、この参照テーブルを参照させる。　＞参照テーブルの値の更新、挿入で、選択肢の編集が可能になる。■11章：ファントムファイル（幻のファイル）DBで画像ファイルパスを格納して、アプリで表示するのに使用していた。＞DBが物理クラッシュ＞画像ファイルの格納場所はDBサーバの/var以下＞DBのバックアップはあるが、/var以下は一時ファイルなのでバックアップはなし。＞復旧に大量の時間を浪費する事になる。画像の格納方法・blob型に入れる・ファイルパスで管理  DBでレコードを削除しても、画像ファイル自体も消さない限り残る　ファイルを削除すると、すぐにファイルにアクセスできなくなる。　ファイル内容を変更すると、トランザクションがコミットされる前に、他のクライアントはその変更されたファイルを目にすることになる　＞ロールバックの問題　　ロールバックでレコードが回復されても、ファイルはロールバックの対象ではない。　　SQLアクセス権は、外部ファイルには適用できない　　SQLはファイルが存在することを検証できない。解決策：blobで画像を管理するデータベースごとに以下のBLOBをサポート・MySQL MEDIUMBLOB 16MB・Oravle BLOB v9.2 4GB,  v10.1 128TB■１２章：インデックスショットガン（闇雲インデックス）・インデックスを全く定義しないか、少ししかインデックスを定義しない・インデックスを多く定義しすぎるか、役に立たないインデックスを定義・インデックスを活用しないクエリを実行インデックスを定義すると、行の更新、挿入で、インデックスの構造も更新するためオーバヘッドが生まれる＞そのオーバヘッドをなくすためインデックスを排除する人がいる。複合インデックスの勘違いインデックス a,bの場合、b,aでソートすると、インデックスを活用できない解決策：MENTORの原則に基づいて効果的なインデックス管理を行うM:Measure 測定  SQLの実行時間を測定E:Espkain　解析　QEPの分析結果レポートからボトルネックを調査N:Nominae　指名　インデックスを必要な箇所を特定T:Test　テスト　クエリプロファイリングで確認O:Optimize　最適化　キャッシュメモリのチューニングR:Rebuild　再構築　定期メンテナンス：断片化対応など-----------------------------------------------３部：クエリのアンチパターン■１３章：フィア・オブ・ジ・アンノウン（恐怖のunknown）NULLの表現・無：null・不明：unknown・適用不能：inapplicableアンチパターン：NULLを一般値として使う、または一般値をNULLとして使う式でNULLを扱うhours列がNULLの場合> select hours + 10 from bugsのselect 結果はNULL不明(unknown)より１０大きな値を持つ数は、ひき続き結果は不明(unknown)検索において、nullは除外される〜以外の検索においても、nullは対象外特定したい場合ｈ、IS NULL, IS NOT NULL で指定するprepared statement でnullは使えないれい：select * from bugs where assinged_to = ?(ここにnullを指定);sum,avg関数なのでnullが入ると式が複雑になるので、nullをなくし、値を-1などで表現＞しかし、-1などもsum,avg関数を混乱させてしまう外部キー設定で、nullを-1表現した場合は、参照がない(null)を表す-1の行を参照先テーブルで作らなければならない。解決策：nullを一意的な値として使うデータ型を問わず、欠けている値にはnullを用いる■14章：アンビギュアスグループ（曖昧なグループ）GROUP BYと、集計関数による列表示のSQL文中に、集計化してないユニークのIDが格納されている列をSELECT句で指定してしまう。＞同一グループの集計範囲には複数のユニークＩＤが含まれるため、一つに絞れない。＞クエリがエラーになるか、不正確なデータが表示されてしまうアンチパターンの見つけ方：単一値の原則に反するクエリを作成すると、エラーメッセージが表示される解決策：・曖昧でない列を使用する。　関数従属性のある列のみにクエリを実行する。・相関サブクエリを使用　サブクエリの結果がない場合は、外部クエリの結果が適用される・導出テーブルを使用・外部結合を使用する：ない項目にはNULLが入る・他の列に対しても、集約関数を使用■１５章：ランダムセレクションランダム選択するクエリが、選択行数が増えることによる性能劣化従来のソート：インデックスを使用したランダムソート列の値などでソートする。非決定性をもつRAND関数などのソート：select * from bugs order by rand() limit 1;selsect * from bugs order by date_reportedインデックスからメリットを得られない。テーブルスキャンによるソートとなる。>小さなデータセットなら用いても良い解決策；特定の順番に依存しない・１から主キーの最大値までの値をランダムに選択する・全てのキー値のリストをうけとり、ランダムに一つ選択する・オフセットを用いた乱数（データセットの行数をカウントし、０と行数までの乱数）で選択する。■１６章：プアマンズ・サーチエンジン（貧者のサーチエンジン）パターンマッチ述語を使用してしまう%LIKE%後方一致はインデックスを活用できない。解決策：適切なツールを使用する全文検索エンジンなどを利用することMySQL,Oracleなどのテキストインデックス■17章：スパゲッティクエリ複数抽出項目に対して、SQLクエリを一つにまとめる横着をしてしまう複雑な問題をワンステップで解決しようとすてしまう。>クエリにデカルト積が発生デバッグなどの難易度が高くなる解決策：分割統治を行う。ワンステップずつ着実にＳＱＬ文を作成する。■１８章；インプリシットカラム（暗黙の列）属性名が競合したりしてSQLクエリに影響を及ぼす、予期せぬテーブル間のカラムの問題ワイルドカードの多用、暗黙列の多用select文などで、列指定をワイルドカードで記述し列を省略する問題＞他の修正で、列が追加されたり、削除されたらどうなるか？インサート時も、列名を省略する＞暗黙列の問題＞インサート時には、全ての列を順番に値を指定しなければならない解決策：・列名を明示的に指定する。　必要な列だけを指定する。-----------------------------------------４部：アプリケーション開発のアンチパターン■１９章：リーダブルパスワード（読み取り可能パスワード）パスワードを平文で格納してしまう。>セキュリティリスクIDとパスワードの比較2つの条件をまとめない＞アカウントが問題なのか、パスワードが問題なのか問題を区別できない。アカウント名のブルートフォース攻撃なのか同一アカウントのパスワードのブルートフォース攻撃なのか判断できないパスワード再取得機能で、パスワードを平文で送信するのは深刻なセキュリティリスク＞暗号化、登録メールにリセットと新パスワード設定のページへの誘導すべき解決策：・ソルトをつけてパスワードでハッシュする　＞網羅的なハッシュマップによる元データを紐付ける攻撃を阻止できるソルト・SQLクエリでパスワードを平文で扱わない■２０章：SQLインジェクション動的SQLの代入部分に脆弱が混入する;(セミコロン）で区切って悪意のあるSQLの注入select * from bugs where bug_id = [1234; delte from bugs]'(クォート）などで、SQLを分割して悪意あるSQLの注入$sql = "select * from projects where project_name = '$project_name'";※$project_nameに'を含んで好きなＳＱＬを注入できてしまう。同じく動的SQL代入時に末尾にor〜などの付与~where account_id = [123 OR TRUE]対処法：・値のエスケープ 後続文字のエスケープ：バックスラッシュ・プリペアドステートメントの利用　クエリの前処理（プリペア）時にパラメータのプレースホルダーを文字列内に残す　そして、準備したクエリを実行する前にクエリパラメータとして値を渡す　＞最も強力な防御手段  値のリストを一つのパラメータにできない　テーブル識別子もパラメータとして扱えない。（テーブルを指定できない）　列名もパラメータとして使用できない　SQL予約語もパラメータにならない・ストアドプロシージャの活用・データアクセスフレームワーク(ORMなど)の活用解決策：・入力のフィルタリング・動的値のパラメータ化＞プリペアドステートメント・ユーザの入力をコードから隔離■２１章：シュードキー・ニートフリーク（擬似キー潔癖症）番号に欠番がある場合、欠番を埋めようとしておこるアンチパターン外部キー属性を持っている場合は、ON UPDATE CASCADEを設定していれば連鎖的に変更されるが、ない場合は手動で調整が必要＞サービス中断も視野に入れる必要あり欠番３を埋める作業中に４から移行していたら、他作業で行追加されたさいには５移行の連番が入るため、３に移行後は、４が欠番となる・・・違反などで取り消されたID番号を謝って再利用してしまう問題＞業務支障が起こる解決策：擬似キーの欠番は埋めない■２２章：シー・ノー・エビル（臭いものに蓋）データベースの戻り値を無視してしまうアプリケーションコードの問題アプリケーションに点在するSQLしか読まない問題＞例：コードの分割記述されているSQL部を連結するとスペースが埋まってしまっている解決策：エラーから回復する処理にするtry～catch文API戻り値の検証判定処理の追加■23章：ディプロマティック・イミュニティ(外交特権)通常のシステム開発における、ソースコード管理、設計ドキュメント管理、テスト確認コードやドキュメントにおけるベストプラクティスから、SQLの管理を除外してしまう。＞データベースを特別扱いしてしまう傾向がある問題解決策：包括的に品質問題に取り組む・文書化：ER図、テーブル設計、トリガ、ストアドプロシージャ、・バージョン管理：DDLによる定義スクリプト、トリガ、プロスージャ、初期投入データ、ER図やドキュメントのバージョン管理・テスティング：自動化テストユニットコード  テーブル定義、制約、トリガ、ストアドプロシージャ、初期投入データ、クエリ、ORM■２４章：マジックビーンズ（魔法の豆）MVCアーキテクチャにおけるM(モデル)が、アクティブレコードそのものであるパターン＞アクティブレコード：オブジェクトのフィールドとテーブル列のマッピングをサポートするパターンのこと・アクティブレコードはモデルをデータベーススキーマに強く依存する　１６テーブル＞１６のモデルが必要　テーブルの修正＞モデルの修正必要＞モデルを呼び出すコントローラも修正必要・ドメインモデル貧血症　多くのコントローラから、必要となる全てのモデルに網の目のように関連が生まれてし>まう　＞テスト確認の複雑さ、困難さが上がる解決策：モデルがアクティブレコードを持つようにする＞model, daoの分離■２５章；砂の城想定不足・サービスの成長速度における想定性能の見積もり・障害時の対応、ポリシーの策定解決策：・ベンチマークで事前性能測定・テスト、検証環境の構築・例外処理によるトレースの整備・バックアップ・高可用性設計・ディザスタリカバリ・運用ポリシ策定----------------------------５部：付録■付録A:正規化のルールORDER BYがないと、予期せぬ順番を返す列指定がないと、よきせぬ列順を返す正規化すれば性能が上がるというわけではない＞データ不整合、冗長の排除、整合性制約の整備第１〜６正規形（ボイスコッド、ドメインキー正規形含む）解説以上。
アンチパターンがなぜアンチパターンと呼ばれてるのか理解して、アンチパターンが選択肢に上がった際に、メリットデメリットをあげられるようになることが大事。
sqlの勉強のために買った。
フレームワークやDBエンジンが新しくなり、アンチパターンも見直されてきてはいますが、一度読んでおくと知見が広がります。設計がクズなDBは、開発・保守の効率をガタ落ちさせます。綺麗なDB設計のために、ぜひ一度は読んでおきたい一冊ですね。
ある程度データベースを業務で使った人なら「あーあるある」と言いたくなる選りすぐりのパターンがよく含まれている。しかしながら、「本当にこれが最適解？」と言われているものもあるので、その辺りは注意して読むのが良いかも知れない。後ろの辺りはSQLインジェクション対策など、わりと一般的なものになっている。最後の25章は日本語版で書き足されたもののようだが、どうにも本書の中では毛色が違うものとなっている。
本書はRDS設計における「よく言われる・聞いたことがある」けどみんなが踏み抜いている地雷を一通り書いてくれている。「SQLの書き方自体は理解したけど、結局どう使えば問題ないのかわからない」というレベルの層にドンピシャです。この本では25章で25個の落とし穴を紹介してくれているが、そのうちの１個に引っかかった人はそのほかの価値がわかるのではないかなと思う。章ごとに書いてるプロジェクト内要注意ワード（例:「SQLで複数の列を検索する方法は？」）のような不吉な匂いを感じたときや「あれ、これって確かまずい設計だったけどどうやって書けばいいんだっけ？」と疑問が湧いた時に該当の章を読み直すのに丁度良いです。もっと早く知りたかったというレビューが多いが、その通りだと思う。対象層ではない人と思う人へのコメント【対初心者】コマンドだのについて説明してくれている本ではないので、SQL自体の理解だったり単純なRDS環境の構築だとかで躓いているレベルの人には少し早い本です。ただ、ほっとくと絶対どっかで引っかかることが書いてるので、理解できるようになったら早く学ぶべきことしか書いてないです。買っておいて、自分がわからないことがわかった頃に読んで下さい。【対エキスパート】（私は上級者ではないので、見当違いかもしれません...）本書の良いところはわかりやすく、初心者が必ずぶちぬくバッドケースをまとめてくれた点にあると思う。逆にもっと専門的なモデリングの本などで設計を学んだ人にはあまりに初級的なことしか書いてないようには感じてしまうかもしれない...でも、先輩がこの本で教えてくれたら私は嬉しいと思う。教えてほしかった。
DBの参考書を1つでも読んで、実務で新規プロジェクト、機能開発、または機能追加でDBのテーブルを考えたことある人なら、何となくアンチパターン(やってはいけないこと)が分かるかもしれない。改めて言語化してくれている良い参考書だと思います。この参考書は一通り読んで、何となく覚えて、DB設計時に読み返すレベルで良いと思います。また、他人のレビューする際は、この参考書の記事をスクリーンショットを送り、指摘することにも使用できます。この参考書を長くて読みたくない人は目次を見てアンチパターンを知ると良いです。目次で気になった単語があり、理解したいなら、単語でGoogle検索すればヒットします。(ブログ等に書いてくれている人がいる。)あまりにも検索する数が多いなら、購入して読むことをおススメします。実務のDB設計でたまにアンチパターンを見たときは、「DBの参考書1冊くらい読んでそこそこ理解してないのかよ」と思う時があります。最近はEAVに遭遇して、マジで保守しづらかった。
例が具体的で、代替案とのトレードオフも含めて丁寧かつ簡潔に記載されていて読みやすい
現場でDBを利用したシステムに携わった後に読むのが良い。なので初心者よりも中級者向けの本。現場で可動しているシステムがアンチパターンだからといって設計変更になるケースは多くない。特に規模の大きいシステムであればなおさら。なので、実務で得られた設計や手法の問題点を本書で復習し次に活かすのが最適だと感じた。交差テーブルの利用を避けたいがためにカンマ区切りの値が入った属性を格納するのは、区切り文字やデータ型による格納上限があったりと拡張性が狭まる。正規化して交差テーブルを作成した方がインデックスも利用できるしメリットが多い。キーワードなどの親子関係を持つテーブルの構成は入れ子集合や閉包テーブルなど有名な設計方法がある。システムの要件に合わせてメリット・デメリットを考慮して選択するのが良い。他の設計に比べて扱い易い閉包テーブルから検討して見るのも悪くない。JOIN構文で結合条件で利用するカラム名が同じ場合USINGを使うと簡潔になる。ON構文が省略できるため。auto incrementを利用しidという疑似キーを利用するのは良くある。主キーと疑似キーが混同して利用され煩雑になる可能性を孕んでいる。一部のフレームワークのように疑似キーを主キーとして利用するルールが統一されているのであれば良い。単にidという名ではなくテーブル名にちなんだカラム名を付けるのが良い。親テーブルのレコードを削除したけど子テーブルのレコードは存在したままになり、検索結果の集計に不適切になるのは、外部キー制約が適切ではない。参照整合性を保つためにも、適切な外部キー制約を付ける。外部キー制約付与によって大きなオーバーヘッドになることはない。RDBで名前/キーのペア専用の汎用的なテーブルは適さない。必須属性・外部キー制約が使えず参照整合性を維持できない。名前/キーのペアが増えるに従ってJOINの数が増えてSQLが肥大化する。STIや各テーブルに共通の項目をまとめた基底テーブルを利用するCTI、拡張性が高いが絞り込みやソートが難しくなるJSONの利用などを検討する。または、MongoなどのスキーマレスなDBを検討する。レコード数が多いテーブルのパフォーマンス向上に水平・垂直パーティションが役立つ。水平についてはシャーディングが有用。例えば、年毎にシャーディングしてレコードを分かりやすく分散。垂直の場合はTEXTやBLOBで格納されている列を外に出すことを検討する。ワイルドカード(*)で検索が走るとTEXTやBLOBのカラムが参照され重くなる原因になる。float型は数値が丸まるので、10億倍すると予期せぬ値が返ってくる場合がある。そのため、固定制度の小数点を定義できるnumeric型を使う。ENUMやCHECK制約は値の種類が増えたり、削除が発生した際に既存のレコードへの対応だけでなく、スキーマの定義変更も必要になるので使う機会はほとんどない。RAND関数をソート順をランダムにするのは、テーブルスキャンによるソートになり高コスト。また、ソートにインデックスの恩恵も得られない。RDB側でなくアプリケーション側で対応するのが現実的。複雑なクエリを作成して1発で結果を取得するのは綺麗だが変更に弱い。細かく分解して結果を結合させた方が保守性は高い。24章のアクティブレコードの話はフレームワーク利用者は一読しておくと参考になる。モデルがDB操作を簡便にするアクティブレコードという機能を持っている。フレームワークを利用しているとモデルは1つのテーブルに対するDB操作を担っているように見える。しかしこれは適切ではなく、モデルはアクティブレコードの機能を持っていて、必要に応じたテーブルへの操作をするものという捉え方の方が適切。コントローラー側で、次々とモデルを呼び出す処理がある場合は要注意。疎結合、高凝集性を考慮し、それらをまとめるモデルを作成するのが妥当。
翻訳がわかりやすく、読みやすかったです内容も実際のコードを出しながらの解説のため、理解しやすかったです付録としてついている正規化についての項目がとても良かったです
他社や他部署のデータを受け取り、集計する必要性が出てきたため参考にさせていただきました。データレイクの考え方から構築、運用方法までカバーされており、実際に手を動かしつつAWSサービスを組み合わせながら体系的に理解していくことができます。本書を読んだうえで、各社テックブログなどで発信されているデータレイク構築のノウハウを収集していくのがスマートかもしれません。
どんなAWS datalakeの本よりもこれが1番良書です。lakeformationなど新機能も含んだ次版も期待しています。
これまでのデータ基盤の歴史などを踏まえ、薄く理解することはできます。「AWSではじめる」と書いてはいますが、そこまでガッツリハンズオンをやる形式ではないので、そこを期待すると少しがっかりするかもです。
AWSのソリューションアーキテクトによって執筆されており、内容は非常に詳細で分かりやすいです。序章ではデータウェアハウス(DWH)、データレイク、ETLといったAWSに限らないデータレイクの基本について分かりやすく説明されています。次章からはAWSにおいてどのようにそれらが実装されるかについて説明されています。また運用上の注意点（障害対応やバックアップの考え方）、セキュリティ（暗号化やアクセス管理、統制の考え方）についても語られます。後半はハンズオンの内容も含んでいます。スクリーンショットを含んだ詳細な解説があるため、普段これらのAWSサービスを実装する機会のない方でもイメージがつきやすくなっています。これらを通して、Amazon S3, Amazon QuickSight, AWS Glue, Amazon Athena, Amazon Redshift, AWS Lake FormationといったAWSサービスの概要とそれらの連携方法を理解するのに十分な内容となっています。要所でSpark, Hadoop, ParqueといったAWS以外の技術要素に対しても簡単な補足があるため、AWSインフラに対する知識は深いがデータサイエンスには詳しくないといった方にも読みやすくなっています。データレイクやAWSについて普段から触れている方でも、これらを網羅的・体系的に理解する機会はなかなかないと思います。これからデータレイクに関する学習を始める人はもちろん、ある程度の知識がある方にもおすすめできます。
データレイクに至るまでのアナリティクスの歴史から基本概念、ベストプラクティスとすすむ。多数あるAWSのサービスを解説しながら実践的な利用方法を示していく。素晴らしい。
以前より気になったいたので手に入って良かったです。
他社の商標や製品名、機能名などに細かな間違いが多いのでとても残念な印象の本です。たとえば、P15 のコラムでAsteria（Infomatica）とあるのですが、Infoteriaであれば2018年にアステリア株式会社に称号変更しているので理解できますが、Infomaticaは明らかに誤植です。P17の電力小売完全自由化は電力小売全面自由化の誤植だったりと、ほかにも読み合わせを行えば容易に気づくことができるような、細かな誤記が多数混在しているため内容の信憑性が危ぶまれもったいなく感じました。内容に関しては必ずしもそう言い切れないケースに関しての断言も多かったので、この本のみを学習に使った場合初学者に誤った認識を植え付ける可能性が高いことが想定されるためこの評価とさせていただきました。重版の際には徹底的に商標や内容のレビューし適切に改版されることを期待します。
全体を通して良本。単なる読み物だけではなくハンズオン形式になっており、特にBIツールであるQuickSightの使い方は丁寧。発売時点と実際の画面が変わっている部分もあるが大半はそのまま進めていくことができる。AWSを学び始めの方から中級者までカバーできる。しかしながら、もったいないところで★5とは決していえない。AWS環境におけるデータレイクに対する考え方や実装方法まで丁寧に記載されている。特にログデータの管理、分析方法や、その運用法まで記載してあり実践に役立つところも多い。AWSに直接絡んでいない技術用語にも触れており、より詳しく知りたい人のために巻末に詳細や他社の書籍の紹介が記載してある。ただし、手を動かさない人、自分で今行っている作業が何をしているかを考えられない人には不向きである。目を通しただけでわかった気になると痛い目にあうパターンだが、逆にいえば真面目にしっかりハンズオンも行うことで各種詳細に書かれているので得られるものは大きい。
ビッグデータやDXの流行りとAWS認定の流行りが組み合わさった要求にこたえてくれる現状の最適解かと思います。現在、chapter9まで進みましたが、理論もあってハンズオンもあって、やりごたえありです。これだけ流行っているなか、ビッグデータをawsで扱える書籍はほぼこれ一択です。利用者のスキルやバックグラウンドにもよりますので、一概には言えないですが、ハンズオンもそこまで詰まることはなかったです。もちろん、画面の構成は出版時から変わっているので、多少は穴埋めが必要ですが。実にシンプルに進めます。ページ数や構成の都合や諸々もあるのでしょうが、出来るならEMRも入れてみてほしかったところです。
数有る中のSQL本でやっと理解できる本に巡り合えました。今まで、１０冊程度SQL本を購入し勉強してきましたが、どれも一長一短で・・・残念でした。私の理解能力にも起因していますが、今回のこの本のタイトルに誘われ購入しました。ビジネス上経営トップが要求するデータ分析に対し、当本のテクニックを駆使できる様、自身のスキルUPに努力します。
今までなんとなく独学でSQLを書いていましたが、抜けている知識を補強でき、基本的な書き方から縦横変換の説明やcase式で集計かける方法など、大変勉強になりました。また、なぜこのやり方を採用した方が良いのかの理由がしっかり記載してあり、理解が深まりました。SQL初心者で普段、tableauなどのBIツールを触っているけど、裏側でどんなクエリが発生しているのか、よく分かっていない人などには、この本で学びを深めると更にBIツールが扱いやすくなるかなと思いました。コードの書き方も見やすく読みやすい本だったので、是非、この本の応用編としてwindow関数、cross join等を取り上げた本を出版して頂けたら大変有難いです。
SQLを全く知りませんでしたが、参考書のようにわかりやすく説明してくれ、演習問題もあり、実践出来るのがよかったです。説明と答えもちゃんと載ってるので、理解できるまで練習出来ます。
判りやすくとても便利です。
一般的なビジネスでの利用ではここに掲載されている内容くらいは知っておいて良いだろうというレベルです。もう少し深い内容があると良かったかなと思います。ただし、内容は非常にわかりやすいので持っていて損はないと思います。
模擬試験も本物と同じ感じで、本番試験に戸惑うことなく受験出来ました。解答は本にも分かりやすく書いてあるし、DVDでもアニメーションも、とてもわかりやすく、良かったです。
事務職員として数十年エクセルを使用してきましたが、つまみ食いの知識だけだったので、この本に挑戦してみました。改めてエクセルの全体的な機能を理解できました。しかし、応用というほどレベルの高いものだとは思えません。
見やすくてポイントも抑えていて良かったです
詳しい説明はないです。ある程度、知識がある人向けです。内容はかなりレベルが高いです。いろいろな操作が載ってますので。パソコンスクール用なので、教えてもらいながら、余白にたくさん書くスペースがあります。読んだだけでは、参考書のように手取り足取りの説明はないので、よく分からないと思いますが、操作の応用や例題は豊富です。実践的で、コンパクトです。商品の状態は良く、綺麗でした。書き込みはありませんでした。
塾のテキストに使用されているので、復習のために購入。結構するが、これをマスターすれば仕事でも十分使えそう。
わかりやすく、問題集もあり（ダウンロードもできる）簡単に理解できる。
総合問題3を開いても総合問題2が出てしまう。ファイル「fpt1814」を改訂してください。
今日から使います。楽しみでしようがないと。ただ、表紙に汚れがあったので、2つにしました。
ある程度Excelを使える人が持つべきものです。もっと利口な関数、組み合わせ等見てると思いつきます。
office2021を購入したので、最新関数全記載との事だったので購入。確かに全関数載ってるかもしれないが、使用例が載ってるのはメジャーな関数だけで、ただ単に関数と解説だけ記載のものが多い。今まで使っていた関数辞典は、全関数に解説と使用例の記載があったので非常に使いやすかった。関数辞典はこういうものだと先入観があり、実物を見ずに購入してしまった。書籍は本屋で買うものだという事が良くわかった。
YouTubeチャンネルやリファレンスサイトはたくさんありますが、それぞれ専門分野に偏っていたり(例えば、財務関数とエンジニアリング関数は同じサイトに記載されていなかったりする等)、探しにくかったりするので、ど忘れ関数をササッと調べるには、このようなリファレンスが手元にあると便利だと思います。まさに時短の王道です。
関数の事典だけあり自分の知らない関数が沢山ありましたパラパラ読んでも勉強になります覚えきれるものではないので、会社・自宅に置いておくと役立つ1冊です
日常業務はこれ一冊でOK！と書いているのですけれど、どういったポジションの方の日常業務なのかな？と思いました。基本中上級者向けです。私は昔エクセルでファイナンス系モデルを結構鍛えられたので、思考のツールとして、エクセルは上級者です。その気になれば、外資モデラーにも負けないと思いますね。関数とマクロを多少使えば、相当の事ができます。普段エクセルを使用している時に、この関数の数式どうだったっけ・・・くらいなら、エクセル数式バーかグーグル様で調べれば画面から目を離さなくて済むし楽ですけれど、これをやるには、この関数とあの関数とどちらがぴったりかだとか、高度な事をやれる関数はないかと探したり、ロジックが面倒な関数に慣れたりするには、確かに書籍の方がわかりやすいですね。ばらばら見て、自分のレパートリーに加えられそうな関数を探すこともできます。付録の関数の基礎知識も、改めて読むと自分の技術に抜けがないか、改めて確認ができます。「個人的には条件式書式で関数を利用する」が好きなので、これの解説はもう少し欲しかった。。。最後にGoogleスプレッドシートについて触れていて、その注意の一番最後にエクセルとGoogleスプレッドシートで互換していない関数があることに触れていて、「よく確認をしてください」で終わっていますけれど、これある程度リストで教えて欲しいです。少し前に、新しい「XLOOKUP」を喜んで使いまくったエクセル表をGoogleスプレッドシートしかない環境で開いたら、機能しなくて大変困った事がありました。。沢山計算式が埋め込まれたエクセルシートで、いちいち全部の動作確認はしていられませんから、こういう情報こそまとめて欲しいです。
エクセルで関数を使っているときにうまくいかない場合そんなときに本書が活躍します。そのため、基礎からエクセルをやる人よりもある程度エクセルをかじって少し困った、なんてときに便利です。
本書の良いところは、コンパクトで薄い事です。全事典なのに。今まで持ってたＥｘｃｅｌの全関数の本よりはるかに薄い。そしてコンパクト。なので、机に置いておきやすく、実用的です。書かれている事も最低限で、それでいて、インデックスは豊富で、検索性には優れている。目次の所で、「必携」とか「ＮＥＷ」とか重要な関数、新しい関数がどれかもすぐ分かるようになっています。詳しく知りたい時は、ＷＥＢでいくらでも実例なんて調べられますし、こういうのが欲しかったという本ですね。
コンパクトなExcel関数辞書です。各関数の説明は詳しくは書かれていません。510も関数があると詳しく書いたら何ページになるんだよって話ですよね。しかし、利用シーン別、目的別に整理されていて、使い所がとても分かりやすいです。こういうことしたいけど、どうしたらいいか分からないと言った時に、本書で探すといい関数が見つかるかもしれません。残念ながら本書だけでは、関数を使いこなすのは難しいですが、関数の利用の糸口になる本だと感じました。本書でこんな関数あるのか、詳しくはインターネットで調べよって使い方をおすすめします！コンパクトな大きさなので、字引きとして利用しやすいです。職場にお勧めの本です。
Excelの関数大辞典です。ちょっと小ぶりなサイズになっていて、電車の中で持ちやすいサイズです。本の中は、関数名と目的別のインデックスがあって辞書引きとしても使いやすい構成となっていました。
新しい関数も増えてきているので使用例のDLもできますし悪くないです。ただ、こういった本は特に押さえたりしなくてもきれいに開いたままにできる綴じになっているものもあるのでこの本もそういった細かいところまで行き届いているより良かったように思います。
この本を読む事で、Notionの全貌が掴めました。アプリをインストールしただけでは、何ができるか全くわかりませんでしたが、この本を、数時間流し読みしたら、全貌が掴めました。使い始めるまえに、サラッっと読んでから始めると良いと思います。使っていく中で、理解できない所をリファレンスとして利用でできます。Youtubeで解説を見るより、一読する事をおススメです。
2000/12〜2020/12 Vol.120まで収録。2021年分は含まれていない。新しい号しか興味無い人には無用かも…　収録方法は良いです。ちゃんと文字列検索出来ますし、テキストコピーも可能です。
古い記事はあまり参考にならないものもありますが、これまでの全ての記事が読めるのは、神号ですね。
過去、120号分のPDFがあり、暇なときに読み返すのにちょうどいい。PDFなので、KindleでもiPad でも閲覧できるのが見たいところに手軽にジャンプできないのは、PDFの残念なところ。
これ一つで全120巻全てがが閲覧できます。コスパ抜群です。PDFで約5GBほどの容量になります。
利用度の高いエクセルでのスキルアップにはもってこいかと感じます
youtubeでこの人のコンテンツを見て是非この本を買いたいと思った。実際に本屋で見てから買おうと思ったがあまりにもコンテンツの内容が良かったのですぐにAmazonで注文してしまった。結果的には内容は、悪くなく実際に活用できる内容ではあったがコンテンツの内容とは、違っていた。又独特な書籍の綴じ方は、バラバラになるんじゃないかと不安になった。
これ一冊持っていれば役に立つことが多い。
グラフの作成に役立ちました。
カラーで簡潔に書いている為凄く分かりやすいし勉強になる
仕事で使うDBMSのことをもっと知りたくて読んだ本その2。クエリによるデータ操作ではなく、データ基盤としてのSQL Serverの構造を解説している。僕にはまだ難しい部分も多かったが、データエンジニアの世界に触れられた気がする。
序盤でDBMSの話などの一般的な話をメインにSQL Serverの説明、後半はSQL Serverにかなり踏みこんだ内容になっています。DB周りの基本的な知識があって、SQL Serverの理解もしたい方は問題無いと思いますが、基礎知識が抜けていると理解が全く出来ないと思います。中級者向けの本かと。
技術の進歩が早すぎて、本当に有用な専門書籍はどんどんなくなり、浅くていいかげんな糞入門ガイド本ばかりが蔓延り、それでも知りたければ英語書籍を取り寄せるしかなかった内容。まさかバイブルの改訂版が発行されるとは。内容が難しい？自分向きでない？なら黙ってろ。「クエリを叩いて結果が出ることが当然と思っている」ような人は対象外読者と自覚し、自分の浅学さを恥じろ。これは、必要な人が必要だから入手する解説書だ。旧版を持っている人間も、焼き直しかと厭わずに買うべきだ。図表はすべて描き直されている。このなんでもクラウドな時代に、いやこの時代だからこそ本当に必要な、これを出版した英断に感涙。
きれいな状態でした。
SQL Serverのエラーログを見ると呪文だらけで何のことかさっぱりわからなかったが、この本を読んでSQL Serverの動作が理解できると、ログの内容が理解できるようになりました。とても参考になりました。
仕組みの解説自体は面白い。ただ、SQLサーバーの「使い方」を理解したかった自分にとっては、内容が仕組みの解説である本書はちょっと重すぎた。この解説の調子で「使い方」や「適切な設定」を説明してくれる本があったら買ってみたい。
絵で見てわかると謳ってますが、初心者がいきなりこれをみてもなんのこっちゃで全く理解できないと思います。とりあえずSQLを道具として使ってはいるけど概念がよく理解できない。という方が見れば役にたつかと思われますが、入門書のようなタイトルに釣られて手に取るとあれれ？となるので注意が必要です。
もちろん完全に初心者向けではないかもしれませんが、SQLServerの内部構造や動作の仕組みを豊富な図解で分かりやすく説明されています。自分の興味があってSQLServerを一歩深く理解しておきたい人には面白い本だと思います。
絵で見てわかると謳ってますが、初心者がいきなりこれをみてもなんのこっちゃで全く理解できないと思います。とりあえずSQLを道具として使ってはいるけど概念がよく理解できない。という方が見れば役にたつかと思われますが、入門書のようなタイトルに釣られて手に取るとあれれ？となるので注意が必要です。
話が整理されててとても分かりやすい。内容はRedisの基礎から応用まで幅広く書かれているので、初心者から中級者まで学べる内容になっている。
好評を得ている黒本を購入し、その学びやすさに驚いたが、一周してもGoldに合格する網羅的な知識が得られている自信がなく、本書を購入。黒本は読み下しやすくなっているが、各クラスのメソッドなどの網羅性が甘かった。逆に本書は、網羅性が高く、一気に理解が深まり、合格への自信がついた。黒本を一周したあとに、本書に取り組むのが良い。
Java1.8は全然別世界なのでその知識がこれで吸収できる。.netもjavaから色々取得しているので今の技術者には必要不可欠
本書の参考書部分を読み込んで、章末問題、模擬試験をやることで合格できました。（気になる部分は、実際にコードを書いて確認しました。）ただ、本番は、本書の問題よりも難しかったので、本書の問題を暗記するのではなく、きちんと理解することが重要です。本書だけで、合格点を取るだけの網羅性は十分にあると思います。
OCPJavaSE11の日本語の参考書が紫本のみだったので購入したが、黒本8と比較してかなりわかりにくいです。理由は、・説明文が冗長で要点がわかりにくい。・コードが邪魔。サンプルコード全文と実行結果が文書の間に逐一挟まれるので。・文字が大きいため、ページ内にまとまってくれない。・装飾が多いおそらくこのような点がむしろ好きな人がいて、だから黒本と紫本という２つの参考書が存在するのでしょう。しかし黒本が未発売だからしょうがないですね。ただ、OCPJavaSE11の英語版もありますが、これは黒本よりもっとシンプルで、紫本の対極です。
Input用に本テキスト、Output用に白本、SE8黒本を使用し、JavaGoldを取得することができました。本書の良い点・悪い点は以下です。【良い点】•網羅性が高く、この本に掲載されている範囲の知識で合格ラインは十分届く。【悪い点】•誤植が多く、逐一訂正表を参照する必要があり、本分である学習に集中できない。JavaGoldを取得する上で、Input用の日本語教材はほぼほぼこの本一択ですので、我々に選択の余地はないわけですが、もう少しなんとかならないかなあというのが率直な感想です。
内容は充実しており、わからないところはググりながら進めることでdjangoに関する実践的なベーススキルは身につきます。ただしdjangoというフレームワークについての本であり、python,html,cssやサーバ知識などは別途調達する必要があるかと思います。
「Djangoのツボとコツが絶対にわかる本」を読んだが、もう少し実践的な内容を知りたくて本書を購入。最初に簡単なアプリの開発があり、後の章にモデル、ビュー、テンプレート等の補足事項が載っているという構成。多分ページ数にして50ページ分ぐらいは「ツボとコツ」本と内容の重なりがあったが、その後の章に知りたかった内容が大体載っており、その他有用な情報もたっぷり載っていて、満足した。（ただし、個人的には、１章の内容にもう少し2章以降の内容を含めても良かったと思う）自分は開発経験自体が乏しいので、最初に「ツボとコツ」本を読まなければ、そもそもの一章でかなり苦戦していたと思うが、フレームワーク開発経験のある人は、いきなりこちらを買って読んでも良いと思う（本書には否定的な意見も多いようなので、他の方のレビューも参考にしてください）。あと、2章以降は基本的にはハンズオンではないので、好き嫌いが分かれると思われ、本屋で軽く立ち読みして内容を確かめた方が良いと思われる。
わかってる人がこんなん常識だろ、って書いた本。テストから始まる本もすごいけど最後とか細切れのtipsも多くて読者次第。普通にDJANGOでサイトを難なく作れる人が参考、補完のために読む本。
Djangoの2冊目として最適です。各コンポーネントについてとても詳しく書かれているので非常に勉強になりました。
学生時代プログラミングを独学していたが，セキュリティ面やコードの書き方に不安があった．この本にはそういった不安を解決できるベストプラクティスがあり，とても参考になる．
Django3.2を現場の目線からゴリゴリ使うためのカスタマイズ方法が中心となっています。Djangoの標準機能では物足りなくなってきた人向け。この本の内容をマスターできれば、Djangoで色々できるようになると思います。Djangoを始めよう、という人にはこの本を読む前にDjango公式チュートリアル、Django Girls等である程度慣らしておいたほうがいいですね。文章が読みにくくすっと頭に入っていかないため、何度も読み直して何を言いたいのかをよく考える必要がありました。その点で★３です。読解力に自信がない方にはちょっとオススメできません。
DjangoV3の解説本で最も詳しく実践的な良書で、プロの現場で役立つ沢山のノウハウが詰まってます。「現場で使える Django の教科書」を超える書籍がやっと出てきたなと思います。フルスタックのDjangoだからこそ詳しく解説している実践本が必要で、WEBエンジニアにとって本書のような書籍は大変貴重です。著者はエキスパート向けのPython解説本にも関わっている方であり、購入前から期待していたのですが、とても良い書籍を買ったと満足しています。
DjangoでWebアプリ開発を学んでいる者です。Django3.0以降で書かれた教材を探しており購入しました。冒頭に投稿機能アプリの作成があるのですが、Djangoの基本を学ぶには全て平易な関数ベースビューで書かれておりかつコードが美しいので初心者の方にオススメです。ただし、第2章以降の内容は確かにわかりやすく解説が書かれてはいるのですが、実際に手を動かして何かを学ぶというスタイルではないので、この点初心者の方には内容の理解が進みにくいかも。自分のオリジナルアプリを開発していて、何か困った時に基礎から振り返りをしたい時にあると便利な本ではないかと思います。
当方はStruts、Spring Framework、Vue.js、Next.jsなどPython以外のWebアプリケーションフレームワークによる開発を生業にしている者です。本書はDjangoの基本的かつ包括的な知識を、必要最小限の努力で得られるものとなっております。また、内容についてより高度なトピックを知りたい読者に対しては参考となるURLを記載している点も親切です。Djangoに関する他の書籍も読みましたが、初級者をターゲットとし、簡単なWebアプリを作成できるレベルまでを解説しているものが多い印象です。本書は冒頭の「本書の対象読者と必要な事前知識」に記載があるように、『簡単なWebアプリケーションの開発経験がある（言語やフレームワークは問わない）』方をターゲットにしており、その条件に合致する方にはWebアプリケーションを開発するにあたって基本となる種々の要素（ORM、ビュー、テスト、認証・認可、API等）をDjangoではどのように実装すれば良いかを手っ取り早く知ることができる良書であると思われます。低評価のレビューをなさっている方は、ひょっとするとWebアプリケーション開発が初めての方であったのかなと推察されます。確かに１冊目として手に取るような本ではないと思われます。あくまでWebアプリケーションの開発経験がある方が対象ですね。また、Kindle版の目次が荒すぎるというレビューもありましたが、Chapter以下の見出しもちゃんと目次に載っています。開発者は疑問点や深堀したい点を自ら調べ自分のスキルに昇華することが基本だと思いますが、その点においても基本となる技術要素を幅広く紹介している本書は良い地図となってくれると思います。
内容は良いのだが、kindle版の目次が荒すぎるChapter1～9の大項目の目次しかないこういう本は情報を検索しやすい目次にしてほしい
本書で書かれている通り、文系人間でもデータを扱える人間になりたくてたどり着いた。励まされる部分もあれば、データが有っても企業やグループの総意でなければ有用に扱えないものがあることをしり、自分の立ち位置が見えた気がする。なにか資格をと思っていたが、振り返って自分の勤め先でそこまでデータが活用できるのか、目指すべき道はなにかを考えたとき別の方向性もあるのではと考えることができた。データをどのように扱うか、コストとの兼ね合い、企業の目的など総合的に考えなければデータがゴミ化する危険性もあることを知った。いい気づきとなったことと、よみやすさとして星５つです。
データ分析でよくあるのが、明確な目的を定めずに、「データが多くあるのでこれを分析したら何か新しいことが得られるのではないか」といって始まるプロジェクト。本書で５Dフレームワークとして提唱しているように、目的を明確にして必要なデータを集めなければ有効なデータ分析ができない。このような失敗プロジェクトをなくすためにこの本は有効。ただ、残念なのは文系人材・理系人材と2分割で人材像を捉えている点や、著者の現在の所属企業に関することが最後の10ページ程度しか書かれていない点。
データを扱う業務があり購入。データサイエンスの理解がなくても、データを扱う上での注意点など参考になりました。この本を読んで、いきなりデータ分析ができるようにはなりませんが、文系の自分でもコツコツ頑張ろうと思わせてくれました。
「データ分析人材」と一言で言っても、実際は人材像が細かく分かれて、それぞれに求められることが違います。全員がPythonをガリガリ書ければ良いかというと、そういうわけではないからです。データ分析人材を細かく分けて、必要となる人材像を定義し、To-Be人材ポートフォリオを作っていきます。データ分析人材を育てる上で多くの課題があるのですが、その中の一つの対策として心理的安全性を考慮したアプローチをとるのは凄く現場を意識していて良いなと感じました。これからデータ分析組織を作ろうとしてる企業にとって、SECIモデルのところを読むだけでもかなり参考になると思います。このようなことに気をつけないと、データ分析組織立上げは間違いなく失敗します。
具体的に今後どのようなアプローチでキャリアを積み上げるのがいいのか、それに付随してプログラミング言語等のおすすめ、プロマネ的に見地からどのような知見を積み上げるのがいいのか見たいなものを期待していたが、筆者の過去事例が列挙されているだけ。2/3くらいで読むのやめた。
近年では、ビッグデータや機械学習、DXなどの機運が高まり「いかにビジネスにデータを活用するか？」という機運が高まっている。しかし一方で、本来なら手段であるはずの「データを活用すること」が目的となってしまい、結果、プロジェクトがとん挫するケースも散見される。本書は、三井住友海上保険のDXを推進するデータサイエンティスト達が、データ分析プロジェクトに取り組む上で得たノウハウをもとに、データ分析プロジェクトを成功に導く方法論をまとめた一冊だ。本書が秀逸なところは「これでもか！」と言わんばかりにデータ分析プロジェクトの生々しい失敗談を挙げつつ「では、どう進めたらうまく行くか？」について「現場のリアル」を交えながら解説している点だ。それはさながら、ビジネス書でありながら「ドキュメンタリー」といった趣で「生の現場の実感」が伝わってくる。本書を読めば、データ分析プロジェクトを進める上でどのような「地雷」が待ち受けているのか、そしてどう乗り越えればいいかが手に取るようにわかるはずだ。もしデータ分析プロジェクトを任された立場なら、プロジェクトの前にぜひとも一読しておきたい一冊だ。
この本では、データ分析者として企業の中で働く上で必要な、押さえておくべき重要な考え方について、5Dフレームワークをベースに著者の失敗談を交えて書かれています。この5Dというのは、決してデータ分析に留まらず、ビジネスの考え方の一つとしても、とても有効なのではないかと思います。そういったテーマで書かれている本なので、データ分析で使う統計手法を知りたい、という方は別の本を読まれた方がいいと思います。共著なので仕方ないかとは思いますが、文体が少しちぐはぐな印象は否めませんでした。しかし、読みにくいということはなかったです。実際に、データ分析をする実務者だけでなく、これから自分の組織にデータ分析を広めていきたいと、ビジネスの活路を見出す手段として考えているマネジメント層の人も一読の価値があると思います。
具体的なデータ分析手法ではなく、データ分析をするにはどんな心構え、思考が必要になるのかを説明した書籍。内容はデータ分析概論に近いので、一般向けの書籍ですが、実務レベルの内容には触れてないのでその期待値で読むことをおすすめします。
データ分析プロジェクトの成功例と失敗例から実務上のポイントを学べます
事例がマーケティング一辺倒であることや人材育成の対象を文系に絞っていること等、訴求したい相手が文系人材が多数派となる企業であり、製造業の製造現場の人間にはイメージしにくい例も多々見られた。しかし結局「最初はデータサイエンスとか何にも知らなくて良いから、ドメイン知識をしっかり持った社員のデータリテラシーを育てていくのが大事」という主張は強く共感できた。また組織運営や人材育成に関する内容が多く、管理職以上向けだと感じた。現場寄りの人には『会社を変える分析の力』(河本薫)のほうがイメージしやすい。
ACCESS本。2021、365対応。ACCESS入門書。項目ごとにわかれて解説されてはいますが、ACCESSが初めての人でも、最初から読んでいけば使い方を学べるような作りになっています。ところどころにQRコードが掲載され、操作動画は見られますが、スマホだとちょっと見にくいかも？タブレットの方がいいかと思います。ページ数が440ページほどありながらこの価格で結構情報量が多く感じます。
基礎から学べるのAccess初心者が導入から学べる、初級者向けの内容です。ボリュームが結構ありますが、Accessの基礎はほぼ網羅しているのではないでしょうか。もう少し、索引にも力が入っているといいなと思いました。
Excelは普段から使っていますが、Accessが必要になったためこちらで勉強しました。丁寧でわかりやすいと思います。特に躓くことはありませんでした。
厚い本なので、自分がしたい事をすぐに探せる索引が充実していれば良いなぁと思ったけど、2ページ(裏表で1枚)でした。なので、ちょっとがっかりでした。しかし、クエリについて知りたかったことはできるAccessで解決出来たので星四つにしています。辞書的に使う人も多いと思うので索引ページを見開きページにしたり項目を増やしていただけたらと思います。
会社でAccessを使用中。全400ページほど。内容は事典のようなページレイアウト。半分基本編で半分活用という名の応用編です。ほぼフルカラーで理解しやすいです。また、ページレイアウトが図と解説でしっかり分かれているのが最後まで続くので目線移動も少なく、非常に頭に入ってきやすい印象を受けました。普段使っている方は半分ぐらいは知ってるよという内容が多め。下記章構成になっており、初心者レベルから、マクロやExcel連携の応用まで網羅しています。第1章 Accessの基礎を学ぼう第2章 テーブルを作成しよう第3章 クエリでデータを抽出しよう第4章 データを入力するフォームを作ろう第5章 レポートで情報をまとめよう第6章 リレーショナルデータベースを作るには(ここから活用編)第7章 入力しやすいフォームを作るには第8章 複雑な条件のクエリを使いこなすには第9章 レポートを見やすくレイアウトするには第10章 マクロで画面遷移を自動化するには第11章 AccessとExcelを連携するには新規に導入する方にはおススメしたいですが、既に使用しており、操作になれている方はネットで調べてもいいかなといった感じです。社内では新人に渡して初期設定に挑戦とかでも有益かもしれません。
時間はかかりますが、非常に丁寧な説明で躓く感じはしません。
エクセルはやっとことがありますがデーターベースも勉強したくてこれを読んでみることにしました。初心者の私にもわかりやすい記述でカラーページで見やすいです。まだ始めたばかりなのでこういう本はとてもありがたいです。
DBの基礎から学べるのでAccess初心者の導入から初級者向けの内容です。仕事でDWHからの抽出などに使用するためこの本で学習して資料作成のツールにしたいと思います。内容はとても分かりやすく図などでも説明があるのでとっても良いです。
会社の仕事でACCESSを使わないといけなくなる人はExcelでの集計に限界を感じた人だと思うのです。そういった意味では完全な初心者むけのエントリー本としてはかなりよくできていると思います。Excelデータからの取り込みと集計したデータのExcel化、一連の作業のマクロ化なんかも説明されているので、とりあえずExcelデータをACCESS化して集計まではこの本一冊でできるようになると思います。でも、きっとこの先が知りたいってなると思うのですよねぇ。だって楽する仕組みを作りたくてACCESS化するんですもの。なので結局はこの本だけでなく一緒に今村ゆうこ著 連携実践ガイドも必要になるんです。セットで購入することを強くおすすめしておきます。
長年Accessを使用しています。過去のAccessとの差異(新機能など)がないか？、そして基本のおさらいという意味合いで入手して一通り読みました。内容に関しては、初心者向けです。見やすい構成、説明も丁寧だと思います。ある程度使った事がある人だったら、ネットで調べて理解できる内容と思います。初心者の方は、なんとなくできたでやり過ごしていると、あとで手こずる事があるので、しっかり読み取って吸収しておくと力になると思います。
実際の画面から説明されるので、全体的にとてもわかり易いです。よくある質問から解説されているので、自分が思っているジャンル分けではなく、かなりざっくりとしたジャンル分けなので自分が今困ってることがどのページに有るのかなかなか探しづらいですが、仕事でエクセル使う時に困ることの解説がほぼ載っているので、とりあえずこれを持っていればかなり解決します。
自分みたいな仕事で少し使うけど、勉強したことない人向けです。一問一答みたいな感じで操作画面を交えて説明してくれるのでとても分かりやすく、すぐに解決します。かなり初級なことから載っているので、Excelを使いこなしている方には煩わしいかも。自分は勉強のために読んでいますが、分かっているところは読み飛ばしたりします。また知らない技とかがたまに載っていたりするので楽しくもあります。目次があるし、細かく分類されているので調べるのにも重宝します。
Excel本。カラー刷り。Q.○○するには…に対してその答えA.回答が掲載という形式がコラム形式になっていて、これが1ページに複数配置されている。実際にペラペラとページをめくるのもいいが、巻頭の目次から目的の操作を探すがてっとり早い。マクロも少し掲載されているが本書の対象ではない模様。完全と銘打つだけあって、一般人のExcel操作であればかなり解決する、もしくはヒントは得られるのではないかと思う。中・上級者にもそこそこ助けになりそうだが、入門者・初級者にはかなり恩恵がありそう。TIPS系の本なので、これからExcelを学ぼうという方は、手順を踏んで覚えていくタイプの本と組み合わせるとよさそう。
情報多めですがわかりやすくカラー画像付きで説明されており、ゴチャつかずに調べられます本も大きめで良いです
目次ついていて探しやすいのがいいですね。あー、あれどうやるんだっけ？を探しやすいです。新しい関数も勉強になり、分かりやすい一冊でした(^^)
Excelのお役立ち操作が解説されてる本です。目次、索引で必要な操作説明を探して使うのが良さそうです。全て覚えるのは困難だと思いますが、普段の作業と照らし合わせて、役立ちそうな操作を本から学ぶだけでもExcel上級者に近づけそうです。文字はやや小さめの印象で、50歳以下がターゲットと思われます。小さい雑誌くらいのサイズで、少し厚みがあり、持ち運ぶにはある程度のスペースが必要です。小さい肩掛バッグには入りませんでした。
全くの素人向けではありませんが、初心者から使えるのと目的別の索引がしやすいと思います。また項目毎の説明がコンパクトで簡潔ですので、ど忘れした時などにもささっと調べたりできて便利です。特に事務方が机の上においておく参考書として使えば心強いのではないでしょうか。関数、グラフ、データベース等ちょっとした中級者向けの話も充実していますので業務利用頻度が多い方はおすすめします。
これは凄いガイドブックです。冒頭はマウスやタッチパッドの使い方PCの操作方法から始まります。今日からPCを使いExcelを使用しようというレベルから長年使っていながらExcelの操作を効率化したいというレベルまでおそらく多くの人に役立つ本です。Excelとは何？から始まり図形利用やアプリ連携に至るMicrosoft　Excelの多くの操作方法や解決策が742の項目questionにわたって書かれています。Excelの操作に慣れた方でもクエストを順に追って自分のスキルの確認が可能な内容に編集されています。これは誰が買っても誰にとっても役立ちそうな本です。
Excelの使い方について細かく記載されています。わかりやすい内容でサクサク進むのでストレスを感じませんでした。便利技が色々載っており頭の中にスっと溶け込みました。実務に繋がる、おすすめの書籍です。
目次で、カテゴリごとに「こんなときどうする？」が書いてあるのでそれを頼りに気になった点を見るという使い方をしてますExcelはもう２０年以上使ってますが、バージョンアップとともに便利機能も追加されていて、知らないことも多々ありましたネットで調べるより早く確実にたどりつけますし、９１０もの技が書いてあり、それでこの価格は安いです
読み終えたあと何かわかったような気がしたが、実際にデータを扱うと言語やライブラリの大事な概念を理解できていないことに気がついた。統計や解析をターゲットとせずにRやRStadioに重きを置くなら、そこをもう少し広く深く記載して欲しかった。深くRに取り組むなら、オライリーのR言語やtidyversを解説する書籍、RStadioを学ぶなら専門の書籍が良いと感じた。実際にそのような書籍で学び直すことになった。書籍評価が高かったので、期待した分残念であった。何ができるのかを理解するには良いが、中途半端な内容で、初学の私が物足りないと感じたので、もう少しボリュームがあっても良いと思った。
RStudioの使い方と、Rのパッケージについて記載されています。RStudioの使い方については初心者の方は基礎から、経験者の方はチップスを学ぶのに適したものになっています。Rの各パッケージについては、dplyr、tidyr、ggplot2については万人が使うものなので、詳細な説明になっていて良かったです。Webスクレイピングは、個人的には普段扱わない操作ですが、こんなことも出来るのかと学べて楽しかったです。markdownについては一読の価値があり、Pythonの Jupyter notebook的な使い方が学べます。総合的に買って良かったです。おすすめします。
RStudioの基本をきちんと学びたいと思い，書籍版 (改訂2版) を購入しました。最も良かった内容は，第3章の「dplyr/tidyrによるデータ前処理」です。私はすでに『Rによるテキストマイニング - tidytextを活用したデータ分析と可視化の基礎』(オライリー・ジャパン) を読んでいましたが，本書のおかげで，何となく使っていたdplyrパッケージの関数について理解が深まりました。「なぜtidyなデータ形式が必要なのか」から始まって，long型およびwide型のデータ構造を説明するあたりは，目から鱗が落ちました。また改訂版だからでしょうか，登場する関数たちもdata_frame()の代わりにtibble()，gather()の代わりにpivot_longer()，spread()の代わりにpivot_wider()が使用されていて，こちらの方がわかりやすいと感じました。さらに，付録A, Bのstringr, lubridateパッケージの使い方も大変勉強になりました。手元のデータを分析するのにすぐには使用しなくとも，一読の価値はあります。正直，最初はあまり期待していなかったのですが，購入して良かったです。何度も復習したい一冊です。
Rで論文を作成するとき、ggplot2等を使用したデータの可視化（グラフ化など）はやはり必要ですし重要です。そのため、必要なところだけ本書を参照したのですが、役立ちました。最初はとっつきにくいかなと感覚的に思ったのですが、そんなことはありませんでした。こういう本は一冊持っておくと便利かと思います。
「安易にUNIONで記述するのではなく、CASE文を使うことによりスキャン数を減らす」「ループ系処理はパース（構文解析）負荷が大きく並列分散処理の恩恵も受けにくいので、SQLにループ関数は実装されていない（CASE, WINDOWで代替可）」など、2022年現在でも実用的な知見が多かった。私自身は関数型ネイティブなので、手続き型から入った人はこういう罠に陥るのか、という新しい感覚も味わえた。
ミック氏の中級者エンジニア向けのSQL解説書。小気味よいテンポで読み進めることができます。SQLのチューニングテクニック、ウィンドウ関数の応用編など、SQLはかけるけど、チューニングはどうしていいかわからない・・という人向けです。
SQLの仕組みが分かって理解が深まりました。
久しぶりに、SQL本を読んでみると、何か頭の中が整理されたような感じがして、読後感が良いです。個人的には、ハッシュ結合の実務上の利点が知りたかったのですが、ピンとこない説明だったのが残念でした。
著者の他のSQL解説書である
ゼロからはじめるデータベース操作 
や
達人に学ぶ SQL徹底指南書 
を読んで著者のSQLの解説の巧みさに感銘を受けました。　そこで著者の別のSQL解説書である本書も読みました。　本書では「いかにしてSQLを高速に実行させるか」という観点から様々なテクニックが紹介され、DBMS(データベースマネジメントシステム)の内部の造りについても多くの解説があります。　SQLも含めたプログラミング言語の書き方の最重要の視点は「簡潔、明快で分かりやすいコードを書くこと」です。この視点により自分や他人がシステムを保守する手間を削減できます。その視点に比べて「プログラムを高速に実行させる」という視点は第二義的にみなされることもあります。　しかし近年ビッグデータの登場に象徴されるように、DBMSが扱うデータの量は飛躍的に増大しています。これまで何の問題もなく運用できていたデータベースシステムがデータの急激な増大により実用に耐えなくなる事態も容易に想定されます。そのような状況を解決する、または未然に防ぐためにもSQL高速化のテクニックは今後ますます重要になります。　本書は特に大容量のデータを取り扱うデータベース技術者にとって有用であると思います。
基本的なSQLを書けて、パフォーマンスを気にし始めた人用です。基本的なSQLが書けない人は、違う参考書から始めてください。そこまで難しい参考書ではなく、そこそこのスピードで読めると思います。紹介されるSQL文はOracleかPostgreSQLです。
きっちり、基本を見直してくれる本です。初心に還ってSQLを勉強させてもらっています。
SQLでいろいろ書くようになって、スピードとか負荷とかも考えるようになり、いろいろ書籍を探していて、ネットで見ていた著者の本だったので買いました。タメになります。
OracleやPostgreSQL使いには大変役に立つ書籍ですが、MySQLには対応していません。購入される方はご注意ください。
参考にはなったし、内容も全く問題ないけど、皆が皆、是非にも買うべきと推せるないようは特になかった。
実際に書籍掲載の問題演習に全て取り組む読者はどれほどいるのか分からないが、実際に230問の問題全てに取り組んだ感想としてレビューする。結論として問題に取り組むべきかどうかに関しては取り組んだ方がよい。というのもSQL自体が実際に手を動かさないと絶対に習得できない類のスキルだからだ。単に普通の書籍のように通読して終わりのような形にしてしまうのはかなりもったいないと思うし、SQLを書けるようにはならないと思う。ただSQLを学ぶ意味を考え、SQLのスキル習得する必要性がなければ、SQLは不要だと私は考える。というのも本書にはSQLのスキル習得の重要性が説かれているが、実際にSQLが必要になる対象者はかなり限定されるからだ。ましてWeb広告代理店がSQLを使って分析するなど考えられない。特に数十、何十もアカウントを回している広告代理店ではそのような余計な分析を行う時間はないし、SQLを習得する時間すら確保できないだろう。なのでネット広告を出稿代行するだけで、本来価値がある広告代理店がSQLを使うなど余計なことを考えなくてもよく、そのようなレベルの低い業務ですらニーズがあるのであれば、出稿屋に専念すべきだと思う。したがって、本書が対象としている読者は広告代理店のような低レベルな職種を本気で脱却したいと考えている人にとっては、SQLという汎用的なスキルを身に着けられるという点で最良のテキストだと言えるだろう。SQLは実際に手を動かさなければ習得できないスキルであるのではあるが、難解なスキルでもないので、習得する意欲があれば誰ても習得できるものである。ただほとんどの人はSQLを習得しようとは考えないので、そのような低次元の広告運用者やアナリティクスだけ使える低スキルの層と差を付けることができ、さらにその差を付ける上で将来的にも最も最適なスキルだというのは断言できる。今、SQLを学ぶのか避けて通るのかで、将来的に価値がある人財になれるかどうかの分かれ目になると私は考えている。
ネットマーケティングは手法が色々広がったせいもあって、データの検証が欠かせません。ところが、エクセルで分析しても、どうしても限界があります。そんなときにデータベースを使って分析して効果を上げたいという人にお勧めです。ただ、もうちょっと内容をシンプルにしてページ数を少なくしてもらった方が、初心者にはありがたかったですね。
BigQueryの書籍があまりない中で私が知る限り一番詳しく書かれている本だと思います。初級から中級程度の内容をカバーしていると思います。これからBigQueryを使ってみようと思っている方が一番初めに読むと少ない学習時間でどんな事ができるのかを知ることができる良書だと思います。
SQLとは何か？SELECTとは、集計関数とは...という基本的なところから、サブクエリ、UNNEST関数、ウインドウ関数など応用編までをカバーしています。SEでない人を想定読者としていますので、解説はとても平易で分かりやすいですが、SEである私にとっても有用な内容でした。演習ドリルやその回答も付いています。テーブルのパーティションやクラスタリングといったパフォーマンス向上のためのテーブル設計だったり、Reservationなどのワークロード管理については触れられていません。書名通り、SQLだけを集中して扱っています。そういったBigQueryのDBA的な部分・インフラ的な部分も含めて知りたい場合は別の本やドキュメントでカバーするとよいと思います。
環境が簡単に作れること、初心者でもつまづかない内容になっているのが嬉しい。この本を皮切りにレシピ本で応用を効かせたい。
キンドル版をアイパッドで読もうとしたら、本の名前がリストに表示されない。真っ黒の空白がリストにできていたので押してみたら、本を開けた。パソコンの詳しい友人によると、多分、カバーがアプリに登録されていないのでは？とのことだった。不十分な出来の本を販売するのはいかがなものかと思う。
2021/03/03追記とても参考になる本で、リアル本買っていましたが、単語検索したいので、kindle版も購入しました。が、kindle版は他のデジタル書籍と違うのか、単語検索に対応していませんでした。是非単語検索機能も開放してほしいです！！-----自分が読んできたBigQueryの本の中で一番丁寧な解説をされている書籍でした。BigQueryの記述をするときには常に携帯しておきたい。UNNESTのfrom句以外での活用ケースについてももう少し学びたかったですが、それは実践で経験していきます。
今後マーケターにとってますます重要なスキルになるSQLについて、BigQueryというインストール不要な環境で実質無料で学ぶことができます。ページ数は多いのですが、その分、基本的な可視化からWindow関数を利用した高度な分析まで網羅されています。
【レビューアーの状態】・SQL【手に取った動機】・環境を用意せずに、勉強したかったので、手に取りました。【良かった点】・Big Queryというサービスを知ることができた【悪かった点】・図とSQLのコードが別のページに書かれていることが多く、コードの内容が理解しづらい。・説明のためのコードに、各項目で学習したい内容以外が含まれていることが多く、理解しづらい。学習者の気持ちを考えられていないように感じる。・230の問題が記載されていますが、回答が出版社のWebに記載されていて、答え合わせがしづらい。また、１問ごとに回答が別ページに書かれているため、問題ごとにページを移動する必要がある。・230の問題の一問ごとにヒントが記載されているが、ピントが外れている項目がヒントとして挙がっていることがある。
SQLの入門書ですがデータが入っているデータベースが存在していてそこから欲しいデータを取る方法について書かれている本です。何かデータが欲しくなった時に毎回エンジニアに依頼しているビジネスマンが自分でできるようにしたいという場合が主な対象だと思います。テーブル設計や権限管理、トランザクションとかそういったデータベースを作る部分に関しては全く触れていません。エンジニアがデータベースの入門書として使うのは無理ですがSQLの概念を掴んだり構文に慣れたりするには結構いいと思います。BigQueryを使ってサンプルデータを動かす方法は簡単かつちゃんと説明されているのでデータをいじってみる前に環境構築で挫折することなく始められます。読むだけじゃあまり理解できず試して使ってみることが重要なSQLですが試すためのハードルが非常に低いためいい感じです。構文を説明しているだけでなく実際にやってみるとどんな結果が返ってくるかとかも説明されておりSQLに慣れる、使えるといったことが重視されている構成になっています。問題も豊富で欲しいデータを得るためにSQLを使えるようになるためにはよくできた本だと思います。結構ページ数はありますがサクサク読めるので読むのにあまり時間はかからないと思います。気になった点としては一部で説明に使われてるデータがサンプルに入っていないところです。このSQLこうしたらどうなるのかな？と思っても試せないものもあるのでできれば全部提供されてるサンプルデータでSQLの説明をしてほしかったというところはあります。この本を読んで問題をちゃんとやればほとんどの場合でSQLから欲しいデータが持ってこれるようになるでしょう。
データ分析周辺のデータマネジメント手法から具体的な技術動向までわかりやすくまとまっていて、とても参考になりました。
入門書として最適な網羅性でとても役に立つ。
データ分析基盤はどういうものか、というのを浅く理解するには良いと思いますが、実践で使えるというレベルにはなってない印象です。また、単純に日本語の文章が読み辛いです。誤植なのか、接続詞から終わりの言葉でしっくりこないことが多々ありました。例：本書で扱う「データ」という用語ですが、(中略)、カンマで分けられたテキストベースデータのこと。→個人的には「〜ですが」のあとで「〜のこと」で終わるのは違和感がある。
ここに書かれている内容は、私が直近何年かでしてきたことなので、大きくは違和感なく受け入れられる内容で、自分の仕事内容をうまく説明する事ができなかったりすることが多いので、知識の整理や言語化するのに役に立ちました。私がやっている業務内容を新たにチームに加わった方に理解いただくために使えそうだなと思いました。一方で、技術的な知識に偏りが多少感じられたので、そこについてはここに私が補足して伝えられればいいのかなと感じました。タイトルの通り、同領域の知識がない方に向けての入り口にはすごく合っていると思いました。
データエンジニアリングを学んでいるエンジニアが2〜3冊目として読むのに良いかと思います。まず1冊目としてはデータの基本や従来型データベースの挙動を学ぶため「データベーススペシャリスト試験」などで基本を学ぶことが推奨されます。そこから発展してデータ分析やデータエンジニアリングを学ぶための本として本書を読むことがオススメです。データエンジニアリングとは何か、データ分析基盤の全体と各層の概要、メタデータ管理、アクセス制御、データのライフサイクル、ワークフロー、データ品質の維持、リネージュ、データマートの作り方、など一通りの知識が詰まっています。
具体性において。本書は、ゆずたそ氏の類書より具体的。本書は、オライリーのawsデータサイエンスの本より抽象的。一般的に。抽象的な本は、浅いが広い知識が記載される。メリットは、部分最適になりにくい。デメリットは、何か出来るようにはならない。具体的な本はメリット・デメリットが逆。
著者のUdemy講座で宣伝されていたので、ふらりと買ってみました。本書は講座と違い、実践のための知識体系をまとめた書籍でした。データ開発に関わる人への教科書的な立ち位置で、幅広いトピックに関して包括的に網羅されつつ抽象論だけで終わることなく、実践で行う際のイメージもしっかりと解説されています。これでもか！と解説されていますがおそらく範囲が広すぎるのだろうということで、解説はコアな部分にのみ絞っているのだと思います(監視などのどれでも共通的な話はほとんど飛ばされています。)。ただ、中途半端に記載されてページを水増しされるより良いと思いました。
データ分析基盤をリードする人の入門書でもあると感じました。現場レベルでできることについて様々解説されています
私はデータサイエンティストとして、データ基盤を使ってノートブックやBIツールをインターフェースとして業務に当たっています。正直データ処理されている裏側を深く意識したことがなく、背後のシステムを理解してみたいと思い購入してみました。結論から言うと、いい意味でショッキングでした。ここまでのシステムを意識せずに使わせてもらっているのか！という意識も芽生え、実際現場でのやり取りについて読みながら納得することが多々ありました。気づきとしては当然全ての現場がこの本のように整理されている状況ではありませんし、私自身もエンジニアリングの深い部分を理解しているわけでがありませんが、メタデータの整理については本書を参考に積極的に協力していこうと思いました。
タイトルにこそ「エンジニアのため」とありますが、組織の中でボトムアップでDX推進、AIプロジェクト、分析プロジェクト、データ分析基盤を構築に関わる全ての方におすすめできる本です。多くの本は、「CTO」や「CDO」を用意せよと言ったトップダウンについて言及することがおおく、本の通りいざ用意したものデータ分析には知見はあれどデータ分析基盤そのものや、その活用するまでのプロセスに疎いということがよくあります。本書では、その様なパワープレイに頼りすぎることなく、おそらく現代の日本では最終的には近道になるであろう「データ系組織(サイエンティスト、データエンジニア、アナリストら)」からのボトムアップを中心にどの様にデータ分析基盤を構築すべきか？また、データ分析基盤を利用するユーザとの関係を繋ぐか？ということを解説してくれています。そして、おそらく特定のクラウドに偏らず(ちなみに、しっかりとオンプレもフォローしてくれている)、汎用的にデータエンジニアリングについて体系的に知識を集約した日本で最初の書籍であり、本書を読めば現場では会話できる様になるくらいの教科書としての役割も果たせる一冊になっています。（また、前提知識としてRDBの知識が必要になることが多いが、しっかりとAppendixに20ページ弱くらいを使ってRDSの基礎を学べる様になっている）なお、具体的な実装はところどころ出現するものの、あくまで文章を補助する役割で登場することが多いのでソースコードを中心実際に試してみたい！という方は向いていないと思います。内容の大きな分類としては、1~4章はベースとなる前提知識や技術スタック5~8章が本書のメインとなるであろう、「ユーザとの付き合い方」「データそのものや、ユーザエンゲージメントの定量評価」がまとめられています。これからのデータ分析基盤の開発の方向性をどうしようか悩んでいたところなのですが、1~4章で言語化をサポートしてもらいつつ、5~8章の内容を見てスッキリする思いでした。「メタデータは大事」「データ分析基盤としてのKPI」など主体的に施策を提案できそうです。
丁寧に分かりやすく書いてあり、見やすいです
書店で中身を確認し、レビューなども参考にして、一番わかりやすく実用的な書籍と思い本書を購入しました。個人的なことですが、乱丁本や配送ミスで3度目の正直で本書を購入できました。内容的には即戦力的な部分に絞って書かれており、手順やコードが非常に丁寧でわかりやすく感じました。これからPythonを学び始める方にはとてもおすすめだと思います。以下気づいた点を書いておきます。良かった点：1.変数の名前、コードのまとめ方などは実践的な書き方がされており、随所にテクニックも記述されていて、初心者向けながらよく考えられた内容だと感じました。とても参考になりました。2.スクレイピングやAPIの利用などあまり普段やっていない部分を理解することができました。不足する内容を調べる手掛かりになりました。3.コードの書き方が順序良く細かく書かれており、迷うことなく「動く」コードを作成できました。悪かった点：・Lesson3のエクセル×Pythonフォルダ１つを引数で指定していますが、複数の引数に対応していた方が使いやすいと感じました（自分で修正しました）。また、サンプルコードでは、同じ内容のシートや作業時間が重複出力されるため、本文中に手で削除してくださいと書いてありましたが、やや丸投げ感がありました（ここも自分で修正しました）。以上です。よりわかりやすく実用的な書籍が増えることを期待しております。
勉強し始めて初日、P27のprint(datetime.fromtimestamp(created_time))でエラーが出て挫折↓print(datetime.datetime.fromtimestamp(created_time))で動くようになったが私のような初学者にはわからんて
とても読みやすく、分かりやすく書かれている。さらに、特典動画やサンプルコードも添付されているため、初心者でも取り組みやすい。pythonによる自動処理については、具体的な利用シーンが示されているため、ビジネスでの活用方法がイメージしやすい。コストをかけずに業務効率化をするために、pythonやVBA（Excelマクロ）、GAS（Google Apps Script）、Microsoft Power Automateは有効な手段である。
Youtuberとして有名ないまにゅさんの書籍です。いまにゅさんは「難しいことを初心者にも分かるように教えてくれる、とても頭の良い方」という印象なので、本も楽しみにしていたのですが、期待通りでした！！会話形式で状況がイメージしやすく、また、全ページカラーなのがとても良いです！自分の職場で活用できそうなイメージを持てるので、今頑張って学んでいます。
初心者はpart2から始めるとありますが厳しいと思いますとても良い本ですがWindows Power Shellとか全く触ったことのない人はもっと優しい入門書が良いと思います。
具体的な事例を使い、Pythonのプログラミングを基本や仕事で活かすコツが学べます。Pythonの基本文法を学習後にこの本を薦めます。
内容は良いが、デフォルメしすぎて読みづらい。
予約特典目当てに購入したのですが、特典２が来ないです。
もともとプログラミング、特にPythonに興味があり、YouTubeでいまにゅさんの動画をときどき見ていました。書店でたまたま見かけて、わかりやすそうだったので購入。期待は裏切られず、手取り足取りという感じです。動画も、いまにゅさんらしい滑舌よくテキパキした説明で（でもわかりやすいので置いてかれない！）、おもしろかったです。Pythonに興味をもったきっかけは、エンジニアでも何でもない友人たちが仕事でPythonを使い、頭ひとつ抜けた実績を上げていたことです。たとえばコンサルの友だちが、スクレイピングで情報収集し、新しいビジネスモデルの開発に役立てていたり、建設関係の友人が情報分析やプレゼンのためにPythonを使っていたり……と、わりに身近で、聞くことが続いたのでした。ただ、なんとなく「プログラミングってどんなもの？」「APIってどう役立つの？」みたいな、社会人がいまどき知っておきたい基礎知識というかリテラシーみたいなものを、ざっと知るのにもすごく役立つと思いました。
リレーショナルデータベース関係の書籍は数多く読みましたが、その中で最も理論がしっかり書いてあって、分かりやすい本です。元々、リレーショナルデータベース理論は、故E.F.Codd博士が集合論を基に打ち立てたものです。この本は、論理と集合論から始まってリレーショナル代数、リレーショナル理論へと説明がされていて、「なぜ正規化が必要か」、「どのようにすれば正しい正規化ができるか」、「SQLの書き方」といった基本的な内容から、「ディスク上の検索がどのように行われるか」「クエリと最適化」「トランザクションの実行制御」「分散型データベース管理技術」「ビッグデータとNoSQL」といった、現在の最先端の技術内容まで分かりやすく書かれていて、これ1冊を正しく理解すれば十分と思える内容になっています。論理や集合で使われている記号と意味も、ISO80000-2に準拠しているので、記号の意味を誤解する心配もありません。リレーショナルデータベースの理論を学びたい方には、最もお勧めする著書です。
簡単なことを非常に多い文字数で説明されます。論理的な記述を心がけているのかもしれないですが、非常に読みづらいです。長文の影響で主語と述語のつながりがわかりにくくなっています。苦労して理解しても、大したことが書かれていないので、時間を浪費された感じがします。
教科書として使える書籍を探していましたが，3冊の候補の中から本書にしました。基礎から優しく説明してあります。図表や演習問題もあり使いやすい書籍です。
業務システムを開発する上で、リレーショナルデータベース(以下、RDB)はもはや必要不可欠な存在です。しかし、SEやプログラマとして定職を得ている人のなかでも十分RDBを理解している人は少ないです。そういう意味では、本書の旧版に「実践的ではない」などとレビューした人たちの言い分も、ある意味では一理あります。OracleやMySQL、PostgreSQLといった個別のRDB管理システム(以下、RDBMS)の使い方から入った方が、SQLでテーブルを作ったり、データ操作をしたりするだけなら、学習としてはより実践的だからです。実際、その水準の入門者に対しては、本書は難しいので一冊目としてはオススメしないです。ですが、RailsやMySQLなどを駆使して簡単なWeb/DBアプリケーションを作れるようになったり、応用情報処理技術者試験に合格したりして、もっと本格的な業務システムを自身で設計したいと考えたときに、本書で紹介される古典的なRDBの知識（正規化理論・インデックス・トランザクションなど）が不足していると、DB設計が出来なくて苦労することになります。また、NoSQLやCAP定理などについても、Web上で散見される怪しげな情報に踊らされてDB設計時に過ちをおかしてしまうこともあるでしょう。適切なDB設計を行うためには、RDBやRDBMSに関する理解が欠かせません。おそらく、その頃になってくるとデータベーススペシャリスト試験の受験が視野に入ってくると思います。そういった用途でも、本書は下手な試験参考書よりオススメです。少なくとも、副読本として入手しておくといいでしょう。大学の教科書然とした本書を読み進めるのは多くの人にとっては苦痛でしょうから、その時期ごろまで別の書籍（個々のRDBMSの入門書や、他のレビュアーが指定しているもの）で学習を進める方が挫折はしにくいかなと思います。ただ、こういった本を読み慣れている方にとっては、最初から本書を読み進めることは大きなショートカットになるでしょう。RDBの理論まわりを主題にした書籍は、以前は少なかったのですが、一時期に現場のITエンジニアが執筆したものが多く出版されました。これらは実践的なものもありますが、敷居が低そうに見えて説明が分かりにくかったり、内容が正確で無かったりと玉石混交です。3版まで重ねている本書の信頼感は厚く、そういった意味でも手放しでオススメ出来ます。
本書の旧版には「実践的でない」などといったレビューがあるようだが、その指摘は的外れだ。そこらへんのちょっとSQLをかじる程度の入門書とは一線を画す、硬派なデータベース設計理論の教科書である。ちょっとSQLをかじってデータベースをいじってみたもののすぐに行き詰まってしまったら、基本に帰ってリレーショナルモデル理論から学ぶべきで、本書はその要望に応える内容になっている。決して易しい理論ではないが、これを通ったかどうかで、その後のRDB設計に対する自信が大きく違ってくることは間違いない。SQLなどは設計の後に続くものだ。リレーショナルモデルの設計に関しては他に、奥野幹也氏「理論から学ぶデータベース実践入門」やミック氏「達人に学ぶDB設計 徹底指南書」、羽生章洋氏「楽々ERDレッスン」が詳しくてわかりやすい。これらを合わせて読めば実践にも大変役立つ。
内容が薄い
複数の著者によって書かれた目的とレイヤと品質がバラバラな記事の寄せ集めです。実際のサービスを改善したいのかISUCONで強くなりたいのか、レイテンシとスループットのどちらを改善したいのか、どういったアーキテクチャを想定しているのか、すべてがぼんやりとしています。章によっては品質のいいものもあるのでWEB+DB Pressのような雑誌感覚でながめたい方にはよいかもしれません。
「Webサービスにアクセスしたら画面がパッと表示されて、操作したらパッと画面が切り替わって、次の操作がサッとできると、使っていて気持ちいいですよね。」ラノベかよ。丁寧な日本語で書いて欲しい
分かりやすい語り口で他の書籍と比較したときに、入門書になり得る一冊だと感じました
全体的に書いてある内容はいいのですが、ところどころ日本語がわかりづらいです。期限に間に合わせるために急いで文章を書いたのかな。という印象です。
全20章からなるDB設計・運用に関するアンチパターン紹介集。初めに現場エピソードがあり、問題となるポイント、その対応・対策が述べられている。非常によくまとまっており、新人にとっては良い教科書になりそうだと感じた。また、現場で開発を2年ぐらい経験している人にとっても、復習を兼ねて読んで見るのが良さそうだと感じた。以下気になった点・消費税の履歴を辿れるようにする注文のキャンセルや金額変更、売上高レポート作成など、当時の消費税の状態に対応できるように、消費税の有効期限などを保持し遡れる手段を残しておく。・遅延レプリケーション意図的にレプリケーションを遅延させることができる設定。デバッグ時の再現方法としての利用や、masterへの誤った操作からの保護に利用できる。・Nested Loop JoinMySQLはこのJoin方法しかサポートしてない。ループ元(from句で参照する方)の1行ずつをループ先と1つずつ照らし合わせるアルゴリズム。ループ先の行数が多いと速度低下を招く。そのため、indexを利用してループ先の行数を如何に減らせるかがポイントとなる。・複雑なクエリになったらViewを利用することを考えるJoinを多用するとNLJのアルゴリズム上遅くなりやすい。そのため、クエリの結果をテーブルにしたものであるViewを活用しJoin回数を減らせないか考える。・B-tree Index一般的によく利用されているindex探査木構造をベースにした最短ルートが入っているため効率よく目的データにたどり着ける。（indexがなければ目的のレコードにたどり着くまで最初のレコードから1つずつ検査していくが、indexがあれば探査木を使って数ステップで目的にレコードにたどり着けるイメージ）ただし、indexも闇雲に追加しても効果がない場合がある。- カーディナリティが低い場合（性別のようにデータ種類が少ない）- 検索結果自体が少なく、フルスキャンの方が早い場合- like検索でindex利用するのは前方一致のみまた、indexは削除しにくい（削除することによるインパクトが追加に比べてわかりにくい）。そのため、効果のないindexが存在し続けることになりがち。本当にindexが必要なのか、すでにある複合indexやサーバーのスペックアップなど検討しておくことが大事。・とりあえずの論理削除フラグ検索条件に論理削除フラグを追加するため、クエリが複雑になる。1つのテーブルだけならまだ良いが、joinする側にも論理フラグがあるとクエリがどんどん複雑になる。また、フラグの付け忘れによるヒューマンエラーの助長やカーディナリティの低下の問題も発生する。・order byが高コストなわけselect、from、where、groupなどの処理が終わり取得してきたデータに対して並べ替えを行う。つまり、取得してくるレコード数が多いほどソートは高コストになる。また、レコード数が多い場合、ソート用に確保しているメモリが枯渇する。するとファイルに書き出し始める。これが「外部ソート」でクエリ遅延の原因・order by句狙いのindexB-treeのindexはデータを「ソート済みの状態」で保存している。ソート済みなのだからこのindexが活用できれば、レコード数を絞れるし、ソートは既にされているので低コストになる。・外部キー制約が嫌われる理由子テーブルを更新すると親テーブルに共有ロックがかかる。そのため、デッドロックの温床になる。・MySQLのロックの特徴「ギャップロック」と「ネクストキーロック」ギャップロックindex値を持つ行とindex値を持つ行の間はロックがかかるindex貼ってあるidが4と7に対して。レコードしなくても、その間5や6がロックの対象になる。ネクストキーロック対象より一つ先の行までロックをとるid < 3の場合、idが1,2しかロック対象だと思うが実際にはidが3のレコードもロック対象。・トランザクション分離レベルread uncommitted、read commited、repeatable read、serializableの4種類左側が並列処理度が高い。複数のトランザクションがある場合ではcommitの捉え方次第で不具合を起こす。MySQLはデフォルトでrepeatable read。ファントムリード、ロストアップデートが起こり得る。そのため、在庫の確保などのロジックで不具合が出る可能性がある。そこで、排他ロックを使う。commitするまでレコードの状態がロックされるので、不具合を防げる。
かつて実務で実際に失敗した実例がたくさん出てきたので、初学者の頃に読んで理解しておくと良さそうだと思いました。SQLの書き方やDBのアーキテクチャなど、入門もしくはベテラン向けの本はよく見るのですが、このような実務で必要となる勘所をまとめてある本は貴重な気がします。注意すべきポイントとその理屈がきちんと説明されていてとても良かったです。
Web系SIerでインフラから開発まで一通りやっており、RDBMSではMySQL、PostgreSQLをメインに使い続けて20年弱くらいです。# 良いところ* MySQL、PostgreSQLを前提として「このRDBMSではこういう機能があるからこうなる」といった実践的な解説が各所にある。特定RDBMS1つを前提としないある程度の教科書的な汎用さを目指しつつも、Web界隈で採用実績の多い2つのRDBMSについてはある程度深く解説するというバランスは実際にコードを書いている現役エンジニアにとっては実用的に感じる* RDBMS利用の初心者に意識してほしいポイントが各種解説されている。昨今ORMなどを使いアプリケーションコードからRDBMSを隠蔽・wrapすることが多いため、RDBMSの特性を活かした設計ができていないエンジニアをちらほら見る（以前に比べて他に覚えることが増えたとか、マシンスペックが上がって力押しできることが増えたなど要因は色々ありそう）。本書はケーススタディ方式である程度具体的なシチュエーションの解説があるので、初心者にとっても自分の開発しているプロダクトとの関連が見つけやすいようになっている* 中級者以上は知っていることも多いと思うが、知っているものは自分の理解の見落としがないかの確認に、知らないものは自分の知識の網羅性の補填にという形で使うことができる。現場経験がそれなりにある人であればそれほど理解が難しい内容の本ではないのでサクサク読める# 悪いところ* 各所で「アンチパターン」という言葉が使われているが、その割にパターンの命名が一般的ではないように思う。元が雑誌連載記事なのでキャッチーな命名をつけたかったのかもしれないが、パターンというのはエンジニア同士の議論やレビューの中である状況を認識齟齬なく共有するための名前が大事なので、命名にももう少し気を遣ってほしかったところはある（それ「XXXパターンになってない？」みたいなやり取りで使いたい）。* RDBMSについて初心者過ぎると本書の内容は正しく理解できないかもしれない。失敗から学ぶというタイトルにもある通り、まず失敗部分の解説の段階で意味が分からないというレベルの人は先にDB設計や運用関連の入門書に当たった方が良いと思う全体的に2020年の今読むのにオススメできる本だと思います。RDBMS関連の本（特に日本語）はあまり頻繁に出ませんが、RDBMSの機能進化は常に起こっているので、5年おきくらいには追いかけておかないと古い情報のまま自分の考えが固着化してしまいます。「MySQLではJOIN禁止」「PostgreSQLのXXという機能はMySQLにはないので・・・」といった過去の経験を持つ人は本書を読むと発見があるかもしれません。
声のでかいそーだいくん、声のでない本です。しかし、読んでいるとそーだいくんの声と人柄がにじみでてくるような、味のある本です。とにかく、ざっと目次をみて、ひとつふたつトピックを読んでみて「なるほどー」と思ったら買いでしょう。また、それで「知ってるよ」だったり「底が浅いなー」と感じるようだったら、ほかのレビューワーが参照している、もっと高度な本を読んだほうがいいかもしれません。12章までは雑誌連載、13章から書き下ろしということで、雑誌連載を読んでいた私も、後半を楽しみに本書を読み進められました。惜しいところはやはり、各章(特に後半)の内容が少し薄いところと「SQLアンチパターン」という言葉が、Billの本が有名になりすぎたせいで、そちらの印象が強すぎて「どっちのアンチパターン」となってしまうことです。私は本の表紙もふくめて、この本でとりあげるのは「落とし穴(Pitfall)」にしたほうが、かぶらなかくてよかったのではないかなー、と思ってしまいます。ひととおりはよみましたが、じっくり(参加者も含めて)読んだり、議論したりしたいので、目黒バイナリ勉強会の次回の読書会の対象図書にしたいと思ってますので、ご興味あるかたはご参加くださいm(_ _)m
個々の章が簡潔で、気軽に読み進められる。事例がとても単純化されていて、具体的な状況が思い浮かべやすい。この本の内容を最初から抑えておけば、後々助かることが多そう。
実践的な具体例に乏しく文章は稚拙で、読んでいて楽しくない。おそらく前職の社名で下駄を履いていただけって感じ、わざわざ買うほどの価値はないと思った。
全くのド素人でして、聞いたことがないようなテクニカル用語が多々あり、完全に理解できたかわかりません。しかし、何となく、「こういう設計にすると、いろいろマズイことが起きる」っていうことが、雰囲気的にわかる気がしました。本書のような内容で、もっと素人にわかりやすく平易に、専門用語をなるべく使わないで解説されている書があったら是非読みたいです。「データベースの寿命はアプリケーションより長い」「小さなところからコツコツと改善することが、とてもとても大切」「データベースは成長する生き物」「『強すぎる制約』になっていないかということを考えるときは、事実に基づいた範囲に収まっているかどうが大切」「腐ったテーブル」「バージョンアップが塩漬けになったデータベースは少しずつ負債を積み上げていくことになる」「手を動かした者だけが世界を変える」などなど、含蓄のあるフレーズに満ちていました。
RDBにまつわるアンチパターンを紹介した書籍としては、本書の中で何度も紹介されている「SQLアンチパターン」のほか、「44のアンチパターンに学ぶDBシステム」などがあります。このため、本書の内容には目新しい内容は正直あまり無く、その内容自体もこれらの本と比較すると薄さが否めません。これらの本について既読済みの場合には得るものはないでしょうし、業務でRDBを2～3年使っているなら既知の内容が大半でしょう。おそらく、本書に低評価をつけているのはそういう人たちです。ただ、その薄さは読みやすさともなっていて、RDBに関する知見を持ち合わせていない入門者にとっては、本書はちょうどいい水準だと思います。あまり長く持っておく必要もないかと思いますが、参考文献として紹介されている「SQLアンチパターン」や「理論から学ぶデータベース実践入門」への入り口としては良いかも知れません。個人的には、応用情報処理技術者試験に合格しているくらいの水準であれば、正規化・インデックス・トランザクション処理についての基礎知識が理解出来ているでしょうから、最初から参考文献の方を読みはじめた方が良い気がしています。
バージョンの問題があるが、実務等で扱うときの初学者は、読んでおくと役に立つと思います。
PostgreSQLのアーキテクチャを理解する必要があって1日で一気に読みました。マジで助かりました、素晴らしい著書ありがとうございました。
Windowsにてインストールまでは、問題なくできますが、そのあとのコマンドうんちゃらでまず、初心者は何を起動して（たぶんコマンドプロンプトとかSQL Shellだと思う）コマンド処理して行くのかが、知っていて当たり前のごとく書いてあり、ここが意味が分からないと初歩の方に聞きました。また、pgAdmin4でも処理できると思うのですが、中途半端ば書き方で、もう少しこの辺を分かり易く解説してくれるといいと思います。やはり、まだデーターベースは敷居が高いような感じがしました。
Windows版中心でしたのでやや不満です。Linuxについても併記してもらいたかった。Postgresのことはあまり書いていなくて、サンプルで作ったphpプログラムの作例に多くのページが割かれていてなんの本なのかがわからなくなりました。Linux中心の本を探します。
PostgreSQLをこれから使うあらゆる人にこの一冊で間違い無し。他のRDBの経験がある人、比較的RDBが初めての人両方とも満足できる内容。OSもLinux, mac, Windowsいずれの人でも特に困らない内容になっている。
精錬な構成であり、肝心なことろはきちんと説明された。データベース屋としては貴重な参考書に違いない！
データベースをある程度知っている方からすると、推測力で直面するエラーに対処できるとは思うが初心者にはきつい。私も、Postgreの操作を学びたく購入したが、所々の前後関係において、確認すべき設定内容などなどが欠如しているので、読みづらい。例、　ユーザー作成時に権限を持たないユーザーを作成。　その後、pgAdmin4でデータベース作成をするのですが、　データベース作成の権限が付与されたユーザでなければ作成できない為、　書籍の流れで読み進めながら設定していくと、何で設定できない？　権限が付与されたユーザ？どういうコマンドで権限を確認？これで、1～2時間。。。　それと、Linux方向けには向いていない書籍。せっかく購入したので読み進めましたが、大分ググる時間も費やしている次第です。内容は網羅しているだけに非情に勿体ない。初心者の挫折率は高いと思います。勿体ない
まず第一に誤字や校正ミスが散見されること。これは入門者を惑わせるのでまずやってはいけないこと。この点を編集者さんはどこまで理解しているのか非常に疑問。全体としては第三章のphppgadminの説明は不要。Windows読者を想定した営業上の理由からなのでしょうが、サーバープログラムの管理はCUIが殆どと思われますので、第三章は不要かと思います。その分入門者への理解度を高める記述を増やした方がよいと思います。以下個別で気づいた点(P.はページを表します)1)P.45，ユーザー名とパスワードは何を入れたら良いのかの一言の説明が無い。2)P.67，権限タブにある各属性の説明が無い。ログイン属性がNo野間まではログインできないのでは？3)P.68，作成したロールを既存のグループに属させる方法の説明が無い。4)P.70，データベース切断方法の説明が無い。5)P.73，データベースへの接続。psql -U postgres template1(P.74の説明と一致させた方が良いのでは)6)P.78，コラム「スキーマの有効利用」で各ユーザー所有のスキーマが優先されるようにサーチパスを設定します、とあるがその方法の記述が無い。7)P.115，pg_read_server_files...説明の流れで行けばグループロールの間違いでは無いか？8)P.166，signup.html <?phpではなく<?=にしてありますが、後者の記号の意味の説明が無い。9)P.279，scram-sha-256項において「先ほどmd5で認証していたuser1を（中略）password_encryptionのデフォルトがmd5なのでこれをscram-sha-256に変更します」←このやり方が書いていない。10)P.37，コラム。5433ポートで移行元のPostgreSQL・・・→移行先のPostgreSQL・・・の間違い？運用管理の部分は参考になったので星二つとしました。改版版に期待です。
サイトからダウンロードできるサンプルがエラー出るんですがサンプルを使用するときの注意点とか書かれていないし、解決する方法がなくて困っています。ともかく内容が分かりにくく、これで「徹底入門」を名乗ることに無理があるかと思います。他のDBと比べて参考書が少ないから、多少内容が分かりにくくても売れればいいという姿勢なのでしょうか。４つも版を重ねる間に中身の精査をしなかったのかと疑問です。
表紙にそれっぽいこと書いてあるから、いざ検証してみると間違えだらけ。嘘の情報が記載されているし、詐欺だと言われて仕方がない内容。もう一度、書いてある通りにできるか試してほしい。できないことだらけだと思う。「あの時はうまくいったから」はただの言い訳。そんなものを売りに出しちゃいけない。売りに出すんだから、適当なことは書かないで欲しい。説明不足もあるけど、間違えた情報を載せるのはどうかと思う。早く、新しいバージョンに対応した情報を記載してほしい。そうすれば、つまらないところで無駄な時間を使うことはなくなるし、評価も上がると思う。
説明が概要と詳細で構成されているが概要が詳しすぎて、詳細を読むのが煩わしくなる。しかし、詳細を全部読まないとプログラムの設定作業が完全でない場合の生ずることが多々ある。概要と詳細の位置づけの再検討をした方が理解し易くなるのではないか。実作業でのパラメーター設定で出るエラーの解説に明快さを欠く、これには面食らってしまった。改善をお願いしたい。
子供の試験の為購入しました。
以前、Access2002を使用していましたが、再度Accessを使用してデータベースを利用することになり、上記Access 2019 にしました。
Accessを仕事上で使うことになり、早急に勉強することになり購入しました。基礎を学ぶにはこれ1冊で十分だと思います。Accessが簡単に思えました。とりあえず基礎ならこれでオッケー！ついでに、応用編も購入しましたが、こちらは少し物足りなく、実際にシステムを作る過程の本を別に購入しました。
発送も速く、また商品もとても綺麗でした。ありがとうございました。
私も読み始めたところですが、他の方のレビュー通り、わかりやすくて、Officeを勉強するにはいい参考書だと思います。最終的には、自分の知識にしてMOS試験に受かれるように頑張っていきたいと思います。
FOM出版社のMOS対策テキスト等も過去に学習に使用しましたが、本当に分かりやすい。Excelの基本的な操作に慣れてさえいれば、これを使ってAccessを学習すればスムースに学習を進めることが出来ると思います。これ以上のテクニックを付けるならば、FOM出版の応用編などを利用して更に幅を広げる事も可能です。
緑本が好きです。この緑本はよくわかりました。丁寧でアクセスの基礎を問題なく学べました。後は総合問題を何度か解いて会社にアクセスないけどアクセス使えるけどね状態にしておきます。そしたら応用緑本も勉強します。Mos試験はいつかな。
順を追ってていねいに説明されている。カラーで見やすい。サンプルデーターをインターネットでダウンロードできるようになっていて、便利です。できるアクセスよりこれの方が良い。
Kindle は初めて使ってみましたが、文字はよく見えないし，拡大する時も困まりましたので本当に残念でした。他の違う本をまた買いましたー
期待を下回った理由ＤＢとはなにか、正規化とは何が、などなどあえてこの本を読まなくても他の本に書いてあるようなことばかりで、私には物足りなかった。この本をお薦めする人db関係の書物を読んだことなく、IT系の資格がない人にとっては良い本かと思われる。
DBにおける統計情報、インデックス、実行計画というよく聞くけど分かっていなかった言葉を理解できました。頭に湧いてくる疑問にすっと答えてくれる内容は素晴らしかったです。
データベースの基礎を学ぶには非常に良い本だと思います。説明も丁寧ですし、実際に手を動かして勉強を出来る所もよいと思います。ところどころ入っている筆者の主観も納得できるものもあります。しかし、難点が2つ。1つ目は「拡大が出来ない」こと。これでは電子書籍の良さの一つを殺してしまっておりここは正直改良してほしい点です。見えにくい所が幾つかあり、特にお持ちの電子書籍端末が小さい方は要注意です。私はKindle Fire HD 8とKindle Fire HD 10の二つを持っていて、普段は書籍は8、映像系は10と使い分けているのですが、この本は小さいと見にくい所があるのでKindle Fire HD 10で読んでます（それでも見にくい所がありますが）。2つ目は、執筆時点が2015年1月という事で、幾つか既に古くなってしまった情報もあります。こればかりは仕方のないことではあるのですが、移り変わりの早い業界だけに気になるところもあります。ただ、総じて良書ではあり、最新の情報に固執せず、兎に角基礎を学びたいという人には良い本だと思います。
私は、アプリケーションの作成をしていますし、SQLアプリも幾つか作ってますので、その観点から書きます。今回、改めて知識を整理する意味で読みました。とても判りやすかったです。内容はMySQLで説明していますので、若干「方言」がありますが、SQL ServerやOracle等、読み替えれば問題無いです。データベースの知識がゼロの人は少し敷居が高いかなぁ。。「なんとなく仕事でやってきたけど、ちゃんとは学んでいない」という人にピッタリです。実行計画やインデックスの話などもしっかり書かれています。SQLの構文自体はそれほど詳しくは書かれていないので、それが目的の人はオライリー社の本を買った方が良いです。
本の内容は他の人のレビュー通りとても良い。ただ、文章の文字はkindleで拡大縮小自在なのに、挿入されている図が拡大出来ず、しかもkindleの横幅に合わせてとても小さくなっているので大変不便。PC関係の重い本がkindleに収まって便利かと思ったのに、図も拡大できるようにならないのだろうか。それともちゃんと拡大する機能があるのに使いこなせていないだけか？
10時間ほどで読めた。タイトル通りおうちで読みました。DBよくわからないと何年も思って、どうやって学べばいいのかあやふやでした。特にインデックスとか、オプティマイザとかよくわかっていなかったのですが、用語の説明や、コマンドとその見方について説明してくれているので、なんとなく知っていたことについて理解を深めることができました。ISUCONの時にインデックスが効かなかったのですが、explainをつけて実行計画を確認しなかったからで、雰囲気をでやるのは良くないですね。他のDBの本も読む下地はできたと思います。
いいと思います．わかりやすいし．とはいえやっぱり次のステップの本が必要になるな．．．広さと深さって難しいですね
"基本"の本としてはよくまとまっており、わかりやすいと思います。それ以上の内容としては、書いてる人が同じなので当然ですが、ミックさんのホームページや過去の文章をネットで探すと出てくるもの(のごく一部)ですし、特に真新しいことが書いてあるわけではありません。
裁判
書評どおり。RDBとは、なんぞや、を理解するにはよい。データベースのエキスパートが読むには軽すぎるだろうが、IT関連の駆け出し技術者が読むには良い。自分は、応用情報技術者試験の副本としてつかった。
ExcelとAccessをVBAで接続させるために本書を買いましたが、コーディングのノウハウをたくさん得られました。
もっとシンプルに書いて欲しかったです。急にファンクション記述とかであっち行ったりこっち行ったりで、上手くいかなかったです。エラーもどこでのエラーなのかわからなくて、もっと初心者向けの本を買えば良かったです。失敗しました。
VBAの言語仕様を一通り学んだ後、実際アプリケーションを作成しようとする時に役立つ。タイトル通り「実践ガイド」だと思う。モジュールをどのように使い分けるか、プロシージャをどのように切り出していくかといった点が参考になりました。独習者の私にとって大変有益でした。同じ筆者の「[EXCEL VBA]ユーザーフォーム＆コントロール実践アプリ作成ガイド」と併読することでアプリケーションの作成の知識、知恵を得られると思います。15年ぶりにVBAに取り組んでいますが、accessがらみは15年前は”谷尻かおり”、現在は「今村ゆうこ」の時代かな。
思っていた内容とは違っていた
元 DBA で Oracle を思い出すために読んだ。題名の通り、図が多いんだけど、図に説明の文字がぎっしり書かれていて読む気がしない。また、Oracle のプロセスを人にたとえて説明しているが、ある程度知識のある人にとってはかえって煩わしい。サラリーマンが考えたたとえという感じ。図を見てパッパッと Oracle の仕組みを思い出そうと思っていたが、じっくり読まないといけなかった。参考になる知識もたまーにあった。
内容をイラストで用いて説明してくれているのでわかり易くて理解が深まりました。
寝る前の読み物として購入。図が多用されているが、結構細かく文字が書き込まれており、予想以上に情報量が多い本だった。このシリーズは他に３冊持っているが、とにかく説明が丁寧で分かりやすい。自分は到底オラクルのパフォーマンスチューニングをできるレベルにないが、この本を読み込めば、パフォーマンスを改善させる「理屈」を少しは考えられるようになるのでは、と思った。定期的に読み返し、どこかの段階で本気で読み込みたい、と思える書籍だった。一点、HDDの記述が結構あるが、HDDとSSDの、現場での使用比率の話について触れてくれていたらありがたかった（自分は知識がないため）
このシリーズは上級者向けの内容も多いのですが、本書は例え話を上手く使いながらDBの基礎からOracleの基本概念まで学べる内容です。DB少しかじったけど、Oracleってどんなん？他のDBと何が違うの？みたいなのをざっくり理解するには良いと思います。
Oracleを使う部署に異動したので、勉強のために購入。SQLは初心者、Oracleの知識はゼロなので、なるべくイメージがつかめそうな本書を選択。はじめのほうはわかりやすかったが、だんだん絵より文字の多さが気になり、読みづらくなった。説明が少しくどいと感じるところもある。また、章の合間にコラムがあるが、P.34に説明もなくいきなり「インスタンス」が使われていて困惑した。実際、インスタンスはP.81で解説されているが、何かしら注釈等があってもよいのではと思った。さらに、SQLplus、jdbc等も本書ででてくるが、インデックスにはない。説明してほしかった。現在、半分ほど読み進めたが、内容自体は望んでいたものであるので、購入してよかった。
やりたいことを直接見つけやすく使いやすい
まず太すぎる。しかも重い。何か嫌〜な精神圧迫感が…筋力トレーニングにオススメ。もうダンベルはいらない。スポーツジムは太い辞書で。
エクセルの本の中で一番使えた本でした。
今欲しい情報、ルールが検索できる機能が気に入っている。★4つの理由は、自分が充分使いこなせていないため。
分かりにくい場合の問い合わせwebサイトの質問コーナーがありません。
うまく使えるかと思いましたが使用頻度はひくいです。
やっぱり逆引き本は使いやすい。こちらも調べやすく業務に使っています。
目次　函数名　検索が行いやすいので、重宝しています。
手元に一冊をあると便利です。
あれ？これやる時、どんな関数使うんだったっけ？という時、手元にあると便利。ネットで引くより、直感的に調べられるので便利。
Ver5.7～Ver8.0での新機能を把握するには良いと思います。JSON対応やMySQLをドキュメントストアとして利用する為のVer5.7新機能の解説も大変参考になりました。ただし、例えばストアドプロシージャなど、前版（Ver5.5対応）で解説してあった内容が本書で割愛されている部分も多く、入門者は第3版との併用をお勧めします。
全540頁。ざっとめくった程度ですが、複数の著者で執筆されているおかげか、大事な点はぬかり無いように思います。　安価な本に見られる「さぁ、やってみよう！」風でなく、堅実で好ましい仕上がりです。
PDF版のほうが何かと便利なので、出版社のサイトでPDF版を購入しました。徹底入門と書いてあるので、初心者向けか、初心者でも大丈夫かなと思いましたが、すでに第３章で挫折しそうです。いきなり「ストアドプロシージャ」って説明なしで出てきて、そこから進めません。どちらかというと、初心者がこの本を使って独学でMySQLを学ぼうというよりは、ある程度知識のある方がレファレンスとしてこの本を使うほうがよさそうです。
現時点（2020/08/23）では、他にMySQL 8.0の書籍がないので重宝します。8.0の新機能や変更点などについてよくまとまっています。特に、運用やバックアップについてとても参考になりました。SQLについてはそれほど詳しくないので、他の書籍で学習すると良いと思います。レプリケーションやJSONの扱い、ドキュメントストアなどについても詳しく書かれています。
Chapter3まで読了。2022年5月現在でも日本語のMySQL本は少ない。MySQL8.0(2018年以降)に対応した入門書は更に少ない。私はRDBMS初心者であり、別の入門書と合わせてMySQLに特化した本が読みたかったので、レビュー評価の良いこの本を購入した。しかし実際に読んだところ、MySQL5.7にかなり慣れ親しんだ人間がMySQL8.0の知識に「アップデートするために」使うのには適していると思うが、未経験の人間が「入門として」読むには適していなかった。専門用語がさらっと書かれているが解説が不十分だからである。しかもその専門用語が重要な意味を持つものが多いので、MySQLに慣れ親しんでいない人間からすれば、書いてある文章が何を言っているのか訳が分からない。ストアドプロシージャと聞いて何のことか分からなければ、この本は購入すべきではないだろう。そんな説明不足が大量にあるからだ。もしこの本がMySQL経験者を対象にしている事が購入前に明示されており、且つ「徹底"入門"」なんてタイトルをつけていなければ☆3か☆4くらいでも良いと思う。しかしこの本の対象者は「初心者まで」と記載されており「入門」書である建付けを取っているので、その内容から大きく逸脱しているという意味で☆１とした。なんとなくだが、この本の本来のターゲットは、MySQL5.7を実務でフル活用している人間が、MySQL8.0を使いこなすための"入門書"なのではないだろうか。だとしたら対象者に「MySQLの初心者から中級者」なんて曖昧な書き方をすべきではないし、第2章で中途半端に書かれたMySQLインストール方法なんてバッサリ要らない。2章ではDocker環境の導入が適当に数ページで書かれているが、実務経験者ならDocker導入手順の解説なんて要らないし、初心者相手ならばDocker導入だけでもそれなりに解説が必要だと思う。それをあんな煙に巻くような解説するくらいなら、丸ごと削るかガッツリ語るか選ぶべきだ。そんなターゲットを中途半端に決めきれていない説明が少なくとも３章まで続いており、読む気が削がれる。というか別の資料で理解を深めた後に読み返すと記述内容自体正確性に欠けた記述が散見されるが、なぜ誰も指摘していないのだろう。久々にレビューの評価に騙された気分。初心者は別の本か本以外のツールをおすすめする。
初心者向けでわかりやすく書いてあります。リクエストパラメータや変数の説明は丁寧でわかりやすかったです。ただ、時々説明が足りないのではと思う点もあります。例えばヒアドキュメントが第3章初めのほうで出てきますが、引用符を使わないとか、終端IDは文字列本体よりも奥にインデントしてはいけないぐらいの法則は書いて欲しかったです。最も自分で試してみれば体感でわかるっていえばそれまでなのですが・・・あと、入力用のフォームを作る時にいきなりrequireを使うんじゃなくて初めは最初から最後までコードを書くほうがよかったなと思います。そういうときにどうするか注意点を書いて欲しかったです（特にシングルクオーテーション）。その次に書くコードからrequireを使うように説明すればいいんじゃないかと思いました。</body></html>だけにわざわざrequireを使う意味をあまり見出せません。それから本の中に頻繁に『Step1のスクリプト』とかってStepが出てきますが、どのコードがStep1なのか書いてはあるのですが、かわいくデコってるので、分かりづらくなってしまってます・・・（当初、別の本と間違えてレビューを投稿してしまったので、こちらで再投稿します）
基本的に完成したコードを確認した後に説明していくタイプの本なので手を動かして覚えたい人は自分で空のファイルを作成してから入力していけば説明も分かりやすくいい本だと思います。
アプリ開発に興味を持ちはじめて、最初はiphone開発などの入門書を読んで、xcode使い方や開発工程などの簡単な流れを一回りしたら、中級ぐらいの教科書を探してたところに、いろんな教科書を試したが、こちらの本は一番分かりやすかったです。
Swift5.1に準拠していない。簡単な例だと、配列にappendしているが、+演算子で可能。まあ、4.2の本としてみた方が良いでしょう。
少し説明がわからないところなどありましたが調べればすぐ出ることでしたので概ね満足しています。
プログラム言語の文法解説書は細切れなサンプルになってしまうのはいつものことです。欲を言えば、10個ぐらい具体的なショートプログラム（BIM計算、素数の計算、税金の計算等々）があるとよかった。
白黒だけで辞書みたいに書かれている。正直初心者にはとっつきにくい。ある程度ベースができてる人でないと難しい気がする。自分は途中で読むのをやめてしまった。
この本は筆者自身が中級者向けと明示しているが、私は一部の初心者にも最適だと思う。私は最近プログラミングそのものを始めたが、まずは優しめのものをということで「2日で終わる！」を謳い文句とする本を買って一通りやった。しかしその本は変数や定数の解説さえも詳しくしておらず、引数や戻り値、プロパティ、メソッド、クラス、構造体など、全く詳しく説明してくれなかった。確かに示された手順通りにやればアプリを作れる本ではあったが、あれは理解ではなく暗記であると思う。対してこの本は基本的なところから詳しく説明してくれ、さらに「どういう場面で役に立つのか」にも言及してくれているため、経験が皆無の私でもなるほどなと思えるところが多かった(それが正しいのかは知らないが)。時たま分からない部分があるが、それは後々詳しく説明されることが多いため何ら問題は無いし、気になるなら調べれば良い。概してこれは中級者向けであると同時に、初心者騙しをされたくない初学者にも最適だと思う。
文章がわかりにくいオライリー本の下手な翻訳文並みに内容が理解しにくいです
分かりにくい、というか、読みこなすのがかなり難しいです。Swiftで良さそうな本がこれしか無かったので購入しました。イメージとしては、綺麗に書くことにこだわりすぎて、分かりやすさを犠牲にしている感じ。淡々と同じ形式で表現されていて、文章も真面目すぎて頭に入ってこないです。あとは、「次の例で〜」という文章が必ずどの項にもあるのですが、具体的なソースコードの前にそれが記載されていて、その段階でソースコードに関する具体的な解説を始めちゃってるから、ソースコードをまだ読んでいない読者はなんの話かさっぱり分からない。でもその形式の方が綺麗に見えるからそうしているのだろうと思う。なんとなく、熟練者はとても愛用する本になる気がします。人を選ぶ本です、一意見として、少なくともプログラミング経験が浅い立場からすると、とても分かりにくかったです。
swift初心者ですがこれを読むと何となく分かった感じになります。サイトに書いてある内容が何となく理解できた気になりました。実際に手を動かさないと本当の意味で理解できませんが独学で勉強を始めた自分としては大変勉強になります。Kindle対応なのでマーカーやメモも書けるしどこでも読めて良いです。
Swiftの基本的文法を学習できます。現場でも使える押さえておきたい知識が詰まっています。
実際のシステム開発のようなイメージで楽しみながら進められるのはよかったです。この本を読んで一通り勉強した後は、VBAエキスパートの公式テキストに手を出すと、知識を体系的に整理できるのでいいかと思います。
VBAを学ぶ手順で、Access操作毎に説明があり、理解し易くい。
索引の数は少ないが、他の本にない項目が多く有り、調べ得ている最後の１冊として大変有効に使っています。
YouTubeでおすすめされて購入したけど、正直あまり使っていない。命令語のパラメータも全て書いてないし、ネットで探す方が早い。大失敗。
Access初心者用テキストというと大抵、リレーションシップ、クエリ、連結フォーム、マクロ、レポート等の機能が順番に紹介されているものがほとんどなので、VBAに特化した本書は大変、助かった。個々の説明は最小限に絞られていて、時には「説明なさすぎ！」と思う所もあったが、「出来ること」を駆け足で見通せて私には合っていた。私のようなAccess・SQL初心者だと、不明点は適宜、Webで自力で調べながら理解していく必要があるので、それが苦にならない人向き。一つ難を言うと、「このコードを書いてください」というコード例が画像になっていて、コピペできないし、拡大もできず、フォント小さすぎて読み取れない。画像としてExcel等にコピーして拡大して読み取るという無駄な作業が発生した。
実際のアプリにそってコードの使い方や説明が丁寧に書いてあるので理解が深まりましたアクセスvbaの本はいろいろ読みましたが分かりやすく受け入れやすかったです
有効全331ページだが休日は日に30ページ読める。（画面コピーや図解が多い）付属cdは未使用だがやがて使うだろう。購入後の2日ではレヴューもこの程度です。（追記）後半になってくるとさすがに日に12ページづつ位。読後にこれを横に置いて辞書のように組むのだろう。
とてもわかりやすかったです。初心者ですが、最後まで読み、やり遂げました。達成感。このあとは、自分用にアレンジして使っていきたいです。
初心者の方にもわかりやすくていいと思います！
Accessは難易度の高いソフトです、それゆえ実務で活躍してくれます。Accessの応用において初めて利用する者の身になって執筆していて、これ以上の解説書はないと思えるくらいです。今村ゆうこのAccess書は他にも購入しましたが、とにかく解りやすい。
長期停滞は見せかけなのか真実なのかという問いに対し、無形資産に対する投資は会計的にうまく扱えていないので、と答える書。ただしその処方箋は明快ではない。タイラー・コーエンが最近のイノベーションを私的財だと指摘したのに対し、無形資産はスピルオーバーが多く、むしろ公共的であるからこそ民間企業の投資が躊躇われるとし、政府の役割を大きくすることを提言している。ピケティの資産課税案に対しても、資本は国境を越えやすく無形資産は更に移動が容易だとして反対している。このように先人の論を随所に意識しており面白い。一方でその論理は説明不足で断定的なものが多く、フラストレーションが溜まる側面もある。大らかに受け取るなら、無形資産の議論は世界的に明らかに未成熟であって、本書は優秀な問題提起だと言えるだろう。辛口に評するなら、誰向けのメッセージか分かりにくく、ジャンルが経済か経営かすら測りかねる曖昧な著作である。何かをすっきり理解したいならお勧めできるものではないが、重要なトピックを扱っているのは確か。満点はあげられないので星4つ。
会社の上司が「今読んでいる本」として紹介してくれたことがきっかけ。投資のダークマター（この表現は秀逸！）としての無形資産は、４つの特徴を持つ。スケーラビリティ、サンク性、スピルオーバー、シナジー。これらの特徴が、経済に大きな影響を与えている、というのが様々な事例とともに紹介されている。前半は非常にすっきりしたロジックで読みやすかった一方、後半がやや散発的な感じを受けた。前半を読んで勢いのついた状態で一気に読めばよかったと思った。無形資産の特徴が、「高速フォロワー」になるインセンティブを高めていくかもしれないという文章には、なんとなく企業の生き残りに向けたひとつの道筋を指示してもらえたような気がして、勇気づけられた。
他人を如何に納得させるか。アイデア自体は素晴らしいものであっても、それを考え付いたり、保有している人や団体に、周囲を納得させるだけの人格や誠実さがなければ、他人は、そのアイデアに対価を払うことを拒むかもしれない。また、そのアイデアは、決して、その個人や団体のみの努力で、生み出されたものではないだろう。無形資産とは、いかに、周囲を納得させるだけのものがあるか、という点が、価値につながるのだろう。ただし、貨幣で測れる経済的価値という側面のみで。
著名な方々が推薦、絶賛されているのが、よく理解できました。『金持ち父さん』を読んでも当たり前の事しか書いておらず、読んでも知識が増えませんでしたが、この本は無形資産を理解していない方は勿論、理解している方には無形資産が、なぜ経済を支配しているのか納得できるようになります。無形資産が経済を支配する御蔭で、IT、テクノロジー、科学技術により、リモートワークが進んだのでも理解できるように、今後、益々、都会の価値が低下し、地方の価値に地理的条件がなくなるので、有形資産である土地、建物の価値が特に都会で低下するのだと認識できた。例えば、百貨店がどんどん閉店したり、東急が東急ハンズを手放さなくてはならない事情も、こういう（資本のない資本主義の）正体だったのだと理解できました。ブランド物好きな方には特にお勧めします。フランチャイズ契約を考えておられる方も契約前に読まれるのをお勧めします。何度も、読み返したい名著でした。
まず前提として、ゼロサムではなく、パイが大きくなるようなマクロ・ミクロ経済を目指す為に、無形資産への投資をどう考えるかを問題とし、何が必要であるかなどを考察していく、というのが本書の流れになっている。必要なこととして、政府による資金援助、提供などがあり、具体的には・知識や知恵、発明などのスピルオーバー、シナジー効果の波及の為のインフラ作り ( 論文や特許の取得プロセス知識など )・知的財産権などの保有ルールの整備・教育、研究開発資金の援助・ベンチャー資本の税制優遇や融資保証 ( エクイティ資金調達時の税控除など)など、また経営方針、社内での調整等、分野横断性による幅広い知識の習得を促すようなシステム作りが必要である。また、知識格差と無形資産の拡大により、階級格差を懸念点として挙げている。格差課題に対する問題には、累進課税などによる政府の介入などが挙げられそうだが、一時的で根本的な解決策でない気がするのは、システムが世紀末にきているせいであろうか。「ピケティの21世紀の資本」から資本収益率が ( r )  経済の成長率 ( g )を上回るのであれば、お金持ちが所有する経済のパイが一般に大きくなる( r > g)資本の形を変えて、何百年続く資本主義の歴史がやはりサイクルしているようにも思える。
今まで隠れてたこの無形資産。人間の価値を今まで、人件費としてコストPLに入れている。肉体労働者としての価値しか財務諸表に入れれない決算短信を読んでるのは悲しい。
西側のオプティミストが書いた経済学の本として読んだ。まぁ一つの教養ではあるのだろう。でもこれが全てじゃないぞと思う。複雑性みたいなものが理解されていない本。
無形資産への投資の拡大という現象。しかし、それを国民経済計算などでは的確に捕捉できていない現状。かような背景を示した上で、まずは無形資産の特徴を以下の４Sで説明する。①スケーラビリティ、②サンクコスト、③スピルオーバー、④シナジー以上のような特徴を持つ無形資産の重要性が増すなか、長期停滞・格差・金融システムの未対応・新しいインフラの要請といった社会的課題が生じることを、先行研究を駆使しながら解き明かしている。加えて、経営(経営者)のあり方や金融投資のあり方、公共政策のあり方にも無形資産が影響を及ぼすということも論じられており、社会的な示唆にも富む内容になっている。無形資産に関する議論の基本はこの一冊でフォローすることが出来る好著。
内容は濃いです。ファクトに基づいて、シッカリと書かれています。でもね、面白くないですよw　仕事の関係上しかたないから読んだのですけど、まぁ、時間の無駄ですね。読んでわかるヒトにとっては、すでに肌で感じてる「現実」なので、ファクトを列挙されてもねぇ　って感じですw
購入可能な物理実態が無いものは、GDPに計算できない。それだけでは驚きはない。社員をトレーニングすると、社員の価値は上がる。それをまとめる会社の価値も増えると見なせそうだ。世界で通用する資格のトレーニングであれば、価値の裁定も可能であろう。自社でしか役にたたないトレーニングはどうであろうか？この本で繰り返されるのは、スタバのトレーニング。スタバのコーヒーの味を他から引き離す原因がスタバの設備と社員のスキルの組み合わせであれば、他社でそのまま使うことはできない。すなわちそこに価値は無い。なんて考えると、数値化できない価値は沢山ありそうだし、その評価も難しい。その分析は素晴らしい。この本は、評価方法等について回答案を説明するものは無い　という点が惜しい。
I am just learning about the python and Jupiter.
データサイエンスを始める人に役に立ちます。
私は，AIエンジニアです。AIといえば，画像，テキスト，音声ばかりが注目されますが，そのベースは機械学習です。その機械学習の8割，9割が，実は，データサイエンス／データアナリシスなのです。教科書は2種類あります。学校の教科書とプロの教科書です。データサイエンスのプロの教科書は，この Jake VanderPlas 著と Pandas をつくった Wes Mckinney 著しかないのではないでしょうか。機械学習のシャロウラーニング，ディープラーニングを日々研究していますが，この2冊をいつも実務で参照しています。まさに，プロの教科書です。
これまで食わず嫌いだった NumPy, pandas がよく理解できました。お陰でPythonの世界が広がったような気がします。機械学習の章はまだ未読ですが、きっと期待に応えるものでしょう。パソコンでサンプルコードを入力し動作させ結果を確認することで理解が深まりました。
目的があってPythonを使うなら読んで損はない。自力でMLやる際にググりながらやっていたが、断片的な情報を集めてもダメと思い買ってみたが、非常に体形だって書かれているので解かりやすい。苦言を呈するならば、MLまで広げているので個々のモジュールのパラメータレベルでの説明が若干薄いかも。MLやDLはまた別に買った方がいいと思う。ちなみに最初は英語版を探したが、実は日本語版の方が安い。
Numpy, pandas, Matplotlib はデータ分析と結果の表現や検討を行なうときに、またscikit-learnは機械学習のために、それぞれかならず使うことになるライブラリなので、それぞれの使い方と応用の仕方がきちんと紹介されている（なので各章が数十から200ページ近くもある）本書は学習書としてまた必要になったときの参照用として重宝すると思います。なかなか一気に読み込むのは難しい分量ですが、本気で取り組まれる方には必携だと思います。これだけの分量でこの判型となると、やはり紙の本が便利ですね。電子書籍はテキスト検索と持ち運びには便利ではありますが、この本の大半の内容には、目次からのほうが早くたどり着けそうに思われます。
タイトルの通り内容は非常に素晴らしいです.データサイエンスに必要なnumpyやpandas,jupyterがよくまとめられています。内容だけを見れば星５以上のレビューをつけたいくらいです。ただ問題なのが訳が少しお粗末です。実は最近「オライリーのpython系の日本語訳の本増えてきたなあ。でもこの手の本の訳わかりづらいんだよなあ。。。」と考えることがありました。そう感じる本はいくつかあったのですが、その中の「ゼロからはじめるデータサイエンス」「IPythonデータサイエンスクックブック」、そしてこの本、全て訳者が同じでした。この前よんだ「schikit-learnとTensorFlowによる実践機械学習」が内容だけでなく訳もすばらしかったため、比較して特にその点が気になりました。何度も言うように内容は素晴らしいです。この訳で内容が普通なら星１にしてます。
今どきの機械学習ツールを使えるようになりたいと思って購入しました。Pythonの文法を覚えた次に買う本としてお勧めできます。NumpyとPandasの説明はポイントをついていて、読み進めて行くだけで頭の中が整理されます。Scikit-learnでできることのカタログとしてもバランスがとれています。仕様が落ち着いていないので細かいことはweb検索が必要ですが、そこまでたどり着く手段として良い本だと思います。著者はプレゼンやセミナーを数多くこなしてきたそうなので、初心者向けの解説に慣れているのでしょう。ど忘れしたときにはこの本に帰るようにしています。
Google翻訳みたいな訳。それに変な位置で改ページしているから、データフレームの出力結果がすごく見づらい。
pandasはいつも検索して使い方を調べていたので、こういう体系的な本を待っていました。ただ、内容やコンセプト自体は素晴らしいのですが、Google Translateで訳したほうがまだ良いのではと思うような日本語訳で頭に入らず、結局はじめの章で挫折しました。最近のオライリーは全般的に翻訳の質が酷いので、実績だけではなく内容に理解や思い入れがある人に翻訳を依頼してほしい。技術も分かって翻訳もわかりやすく書くとなると難しいと思うが、今後に期待しています。
細部まで丁寧にしっかりと説明記述されております。初中級者以上なら、目で追うだけでも曖昧だった知識がより強固になると思いました。また、文章に嫌味や癖がまったくないので素直にリスペクトできます。
日常の業務でTableauを使っていますが、この本は「あーそこそこ！」と、痒い所に手が届くトピックが満載でした。具体的な使用例が豊富なので、すぐに実務に応用できます。個人的にはパフォーマンスの改善、表計算、LOD、アクションの具体例が特に役立ちました。独学で学んでいた時の多くのモヤモヤがこの本で解決しました。著者はTableau社の方という事で、よくある質問やTableauを使う上での勘所をわかりやすく解説したいという気持ちが行間からにじみ出ていて、とても読みやすい本でした。
購入後に仕事が忙しくなり寝かせていて、久々にkindleで開いてみたらTableauの画面キャプチャの文字が小さすぎて読めない！大型ディスプレイに表示させても変わらず、画面拡大してもページが両開きから片開きになるだけ。kindleの仕様上、小説なら文字サイズを拡大できますが図版は固定。それはわかってましたが、そもそもTableauのUIの文字って小さいんだし、掲載画像をもっと大きくしてくれたらいいのに！と思いました。今さら紙の本を買うのも癪なので頑張りますが、データを扱ってる人って紙の分厚い本を持ち歩くの嫌う人達だと思います。ちゃんとターゲットインサイトを理解した上でkindle版を作ってくれよ。
電子版で買っちゃったから返品できなくて！これから検討する方はちょっと考えてからをお勧めです。
きちんとわかっていなかったところが次々と出てきて、だいぶ自信がつきました。聞いたことはあるけど使ったことなかった機能もたくさん載っていて、Tableauはいろいろなことができると言われる理由がわかりました。この本と、初級編のシリーズ本があれば、ほとんどのTableauの機能が使えるようになると思います。
入門書で一通りを学んだあとの次の書籍として向いている。「地図・空間ファイルの活用」がかなりのボリュームで含まれている。章ごとにどのような内容が含まれているのかが分かりづらいが、特に読みたい部分に着目する分には問題ない。1章の考え方は入門者であっても読むべきである内容であるとは思うが、入門者は別の入門書から入ったほうが理解が進み良いと思う。Tableauの入門を終えた後に買う「2冊目」の本として良い。
ある程度グラフは作れる状態でしたが、中級レベルにスキルアップしたいと考えていたので、これはまさに求める書籍でした！Tableauをある程度は使えている人向けですが、手順が省略なく記載されていて画面ショットも多いので、完成形まで操作できます。出版社のホームページから操作後のワークブックをダウンロードすることもできました。各単元で、使用例が盛りだくさんで、知るだけでなく、実際に使えるようになります。今までできないと思っていることもできることが分かり、Tableauの可能性が広がりました。
Tableauを始める人のバイブルとなりつつある、第1弾に続き、よりTableauをスキルを高めるための、重要なポイントがきっちりコンパクトかつ丁寧に収まっており、Tableau中上級へのステップアップに最適だと思います。第2章では、今まで書籍などでは体系的に扱われていなかった。パフォーマンス向上についてのTipsが、第4章では高度な分析に必須テクニックである表計算とLODが具体的な事例とともに紹介されています。 2020.2 データモデリングについても丁寧に紹介されており、最新版に対応している点も貴重です。　第1弾と合わせて入手して、両方理解すればTableau使いへの道が開けると思います。
Tableauできれいに見せるコツやパフォーマンスを上げるコツが出ています。根拠をもって、見やすい理解しやすいダッシュボードを作ることは、業務では非常に重要なポイントになります。さまざまな機能的な説明もあります。ダッシュボードを作成するなら、一度は読んでおくべき書籍です。
Tableauを習得するために必要な情報がまとまっている。インターネットの情報だけでは、知識が断片的にしか蓄積されない。体系的に整理されている本書は、一気に習得が進む。情報量も満足。
もう少しコンパクトでもいいかと感じました。この手の本は難しいですね、技術も延々とでてくるので全て書ききれませんし。
7日間の各章を通じて、AWSの全体感を理解できたように思う
オレンジ黒の二色刷り各センテンスが短めで、イラストも多めです。なので進みは早いですが、7日で終われるかといえばちょっとスケジュール的にキツイかなって思います。ただ、2週間で終わらせようとすればこれはホントにイケちゃう内容ですね順を追って覚えていく仕様になってますが、ある程度知識のある人なら目次から目当てのページに飛んでも良いかもです。一応巻末には索引も載っているので辞書的な使い方もできます。AWSとはなんだろう。。という初心者でも安心して勉強できます。コスパの良い一冊だなって思いました。
タイトル通り基礎を学ぶ本です。インターネット関係に詳しくなれそうです。どこかで聞いた事のある内容が多いですが、学ぶとなると少し大変そうで、一週間で全てを覚えるのは私には無理そうです。完璧にするには何度か読み返す必要がありそうです。漫画本より少し大きいサイズで持ち運びはし易いです。
初見でもポイントが分かりやすく押さえてあるので効率よく勉強できる。認定資格を取るかどうかはおいて置いて覚えてても損はないので知識として取り込んでみたい
基礎.ネットワーク.サーバー.データベースなどの項目があり資格とらなくても勉強になりますもちろん資格とる予定の方にはとてもいいです
AWS認定資格本。黒・オレンジ系2色刷り。タイトル通り、AWS認定資格の基礎を学べる。これ一冊で対策ができるわけではなくその入口に立つことができるような本。内容はかなりわかりやすく書かれている。文字の大きさやレイアウトも適切。全250ページほどなので1周間でどれくらいページ数こなせばいいのかわかると思う。
AWSの基礎を学べる本です。資格所得だけではなく、AWSを利用する際の心得を学ぶことができます。AZについて、VPSについてなどの知識はもちろん、どのようなときにどう選べ場良いかを書かれています。AWSを利用始める方におすすめです。
特にソフト営業やネットワーク営業をしている人には資格取得しないまでも読んでおいてほしい内容。自分はクライアント側ではありますが自社でできることとできないことを理解してない取引先がいかにおおいことか、、、。サーバーレスでどこまでできるのかやラムダでどこまでいけるかなどはシステム営業ならいちいち確認して回答ではなく、ある程度は理解していてくれないと時間がかかってしょうがないのです。そういった部分の質問にたいしてどう回答するかの指針がこの資格をもっているかどうかで決まります。AWSサービスを扱うなら、この書籍に載っている程度の内容は知った上で営業にきてほしい、、、。それを踏まえたうえで購入してほしいと感じてます。ユーザー側から見てもわかりやすかったので本職のかたなら相当に理解しやすいと思います
IT系に絡んだ仕事をしていますが、7日間でこれを理解できるまでのレベルになるためにはIT関係の独特の用語を予め理解しておく必要がありますね。図解はわかりやすいですし、平易な言葉で書いてあるのでわかりやすい印象です。AWSについて基礎的な部分は語れるようになります。
敷居は高めです。関連した知見のある方向けでしょう。取得すればメリットは大きいものですので書籍やweb講座などより多くのアプローチをオススメします。これ一冊でということはないと思います。
取り組みやすい。図も丁寧。解説もわかりやすい
自分は高校生のコンピューターオタクです。内容は、豊富です。シンプルの説明と内容の深さが良いです。エンジニアや高校生以上の方におすすめです。
高校生の授業で使いました。息子はバッチリ読んでいます。
絵が可愛く子供に向いてますし保護者や教師にも向いてます現にそのように述べられておりネットいじめ等についてもページが割かれていますとっかかりを作るのによい本です詳しく学びたい方にはそこまで向かないかもしれませんが全体を把握するためには使えます
カラフルなイラストでコンピュータの成り立ちや人工知能、ブロックチェーン技術といった最新の技術まで幅広く説明している本です。簡易な表現と分かりやすいイラストで説明しているので子供から大人まで読んでためになる本だと感じました。地味なポイントですが海外の情報サイトが一覧で載っているので、そこからさらに詳しくその技術について知ることもできます。
一昔前、我々（一部専門家等は除く）はテレビが映し出される技術的・社会的原理を特段理解せずにテレビを視聴していた。理解せずとも楽しめたし、視聴体験を他人と共有することもできた。そして今、我々（一部専門家等は除く）はパーソナルコンピュータがコンテンツを供給する技術的・社会的原理を特段理解せずにコンテンツを享受し、共有している。一方、テレビは限られた電波を牛耳る権利を与えられた者だけが運用と発展に寄与できたのとは対照的に、パーソナルコンピュータとそれを取り巻く周辺環境は個々人がやろうと思えばそれらの運用と発展に寄与することができる。少なくとも、一部の専門家だけの専売特許ではなくなっているのだ。では、運用と発展に関わりたい場合、何から始めればよいのだろうか。それは、一定の知識を得ることだろう（大半の人間は「一定の知識」を得ることなくコンテンツをただ浪費する側にまわる）。この知識のはじめの一歩が書かれているのが本書だ。原題の「Help Your Kids With 」とはこのような文脈における「はじめの一歩」とほぼ同義である。版元はマーケティングの一環として「図鑑」と訳したが、本書は図鑑というよりは腰を落ち着けて通読すべき教科書と言える。本来は小学校高学年から中学生くらいの子供が読んでおくべきだが、デジタルネイティブではない大人が読んでも益するところの大きい本である。たとえば、第7章「プログラミング言語」では、「Hello,World!」と画面に表示する簡単なプログラムを各言語で書くとどうなるかが示されている。プログラミングが言語である以上、言語間を比較することで初めて見えてくることがある。このあたりは子供よりも大人の方が興味をそそられるだろう。また、2020年にはプログラミングが小学校で必修化される。本書を読むと、プログラミングという手段には「コンピューテーショナル思考」という土台が必要であることがわかる。このことは、プログラミングを学ぶ子供のみならず、それを指導する大人も知っておかなければならない知識であろう。否が応でもコンピューテーショナルになっていく今の世の中において、本書に書かれているくらいの知識は最低限押さえておきたいものである。
256頁もあるカラー図鑑である。中身はコンピューターサイエンスとあるが、いわゆる学問としてのコンピューターサイエンスではなく、コンピューターやマイクロプロセッサを利用した製品、サービスなどを網羅的に説明する子供向けの図鑑だ。ハードウェア、プログラミング、ネットワーク、ソーシャルメディア、デジタル時代の課題まで網羅していると腰巻きで強調している。実際に中身を見ると、大人には簡単すぎる印象だが、これは知らなかった、あれも知らなかったというところが確かに見つかる。元マイクロソフト社長の成毛眞氏が推奨しているのも分かる気がした。網羅するために仕方のないところだが、少し残念なところも上げておこう。アプリケーションがオフィス関係に偏って紹介されていて、科学研究、工場機械制御などにも使われていることが抜けている。様々な言語を紹介しているが、各々の特徴、違いがあまり書かれていない。そこが大事だと思うのだが。Windowsとマッキントッシュの比較表があるが、これは正確ではない。ビジネスで使えるか、特定分野で使えるか、ソフトの継続性とかではWindowsでないといけない分野があるので、ここは公平とは言えないと思う（評者はMac Plus,Mac II、初代iPadを使用していた。今はMacとWin数台ずつ必要に応じて使っている。）この比較では趣味で使っている人からの見方に偏っていると思われる。第6章のプログラミングテクニックも面白い。アルゴリズムがとても大切だからである。ネットワークの所、世界のどこにでも接続できサービスのリクエストが出来ることなど、もう少し詳しくしてもよかったかと。ここはマジックの様な仕組みだから。子供でもわくわくするはずだ。評者にとって目からうろこなところは、第4章の「コンピューテショナル思考」だ。要するに課題を解決するのに、コンピューターが理解できる形に変換して、それを元にプログラムを書くと云うこと。内容はとてもよいのでここが3倍くらいあるとよいのにと思った。コンピューターが何かが想像できない人は、この辺の考え方が分からないのだと思う。少し手を広げすぎたので、少し浅くなりすぎている嫌いもあるが、何も知らない子供たちにとっての最初の本としては優れていると思う。綺麗な作りで手に取りやすく、親が子供へのプレゼントに買ってくれそうな本だし。足りない部分はこの本を読んだ後に自分で分かってくる様になると思う。そう気がつけば、もう少し上級の本を手に取るだろうから。
内容はかなり優しい図も多く、軽く眺めるには最適。
洋書の翻訳本です。元々の出版社が、図鑑と児童書で有名な英国DK社なので、ちょっと児童書っぽい。分かりやすいイラストと、分かりやすい文章。「ひょっとしたらフリガナつきのほうがよかったんじゃないの?」と思わなくもない。フリガナがないので、小学生にはちょっと難しい、中高生〜向きの日本語文章ですが、コンピュータサイエンスを分かりやすく紹介しているという意味では「小学生」が読んでもいい内容です。紙面構成は、日本でいうところの、中学校の社会のフルカラー資料集の「コンピュータサイエンス」版のような内容です。（キャサリン・ジョンソンやアラン・チューリング、ビル・ゲイツの写真が載っているところが、図鑑だからではあるのですが、資料集っぽい雰囲気です）コンピュータの歴史と未来、そしてコンピュータそのものとネットについての基礎知識をやさしく紹介してあります。ハードウェアとソフトウェア、WindowsとLinuxとmacOS。アルゴリズム、二進表記、各プログラミング原語、ディープネット、暗号通貨などなど。コンピュータの未来の部分に関しては、これから新しい技術も登場するでしょうし、プログラミング言語も進化していくはずですが、基礎知識と歴史の部分に関しては、古くなるということもないので、本著の「分かりやすい文章」が中高生（そしてもちろんコンピュータについて学びたい大人にも）にちょうどいい内容です。（広く浅く、コンピュータサイエンス全般について語る本なので、当たり前ですが、それぞれの分野の専門書には劣ります）
SEです。基本情報技術者試験に向けて、体系的かつビジュアルを用いて正確に情報通信技術を解説してくれる本を探している中、たどり着きました。＊＊＊【内容の多岐さ】：およそ広いが、身近な話題が多めハードウェアや論理演算、セキュリティから機械学習など、広い内容をカバーしています。しかし、ソーシャルメディアやゲーム、インターネットとの付き合い方といった内容についてページを多く割いており、あくまで子供や一般消費者がメインターゲットの本でした。具体的な人名、商品（サービス）名等も出てくるので、読んでいてイメージしやすいでしょう。【情報の深さ】：浅い「広く浅く紹介する」内容のため、それぞれの話題は深く掘り下げていません。しかし、「電子コンピュータの前はアナログの計算道具が使われていた」といった歴史をイラスト付きで教えてくれるのは本ならではと感じます。（「ノイマン型」とか「プログラム内蔵方式」とかの言葉（区別）は、それが誕生する以前を知らないと　「だから何？」と思ってしまうので……）【文章とビジュアルの量】：ビジュアルが多い基本的にほとんどがイラストです。写真も少しあります。デザイナーさんがきれいに版下を作ってくれたのでしょう。丁寧な仕事です。＊＊＊「基本情報技術者試験に向けて」という意味では、この本では情報不足でした。しかし、一般消費者に向けては丁度いいレベルと感じました。Googleで単語検索するだけでは知識が断片的になってしまいますが、この本では広く浅く体系的に整理されています。子供向けか？　と聞かれると……子供を意識して書かれているな、とは感じました。ただ、ウォーターフォール・アジャイル開発、ユーザー受け入れテストといった話題にも触れていて「それを子供が興味持つか！？」と笑いながらツッコミもしたので……可能なら本屋で内容を確認してからの購入や、図書館で借りることをおすすめします。
表紙左上部の【DK】のマークを見て『ビジュアルディクショナリー 英和大事典』（ISBN-10: 4528010038）と同じく「Dorling Kindersley Limited」から発行されたものと知りました。本（2019）年、創業45周年をむかえた「大人から子どもまで楽しめる“一生モノ”の図鑑を出版し、国際的に高い評価を受ける」出版社ですね。/ 本書も、その点で素晴らしい。カラフルで、見ているだけで楽しい。コンピュータサイエンスの世界を身近に感じられます。親子で楽しめる書籍だと思います。/ いわゆる知見のナイ者にとっては、単なる暗箱=ブラックボックスでしかないコンピュータが、どのように機能しているかを教示してくれる本です。成毛眞氏が「目からうろこ！」というとおり、おおいに啓蒙されます。
ゲームを題材にしているので、読みやすいと思います。この本を読めば、AIの仕組みがなんとなくわかるでしょう。
迅速な対応ありがとうございました。
強化学習の歴史やその仕組みが網羅されているだけでなく、説明の順序や挿絵など随所に、理解してもらえるような工夫（例えば論文の挿絵を引用するのではなく筆者独自のわかりやすい図に落としたり）が散りばめられている。今どこを説明しているのかわかるように図に対応して本文に番号が振られてるし、とにかく筆者の姿勢に感謝と感動を覚えるばかり。こういう本は某O本に影響されたような独特の回りくどい口調で、上から目線で語られることがほとんどのため、内容はもちろんのこと筆者の姿勢に感動してしまった。あえて難点を挙げるとしたら強化学習の基本的な仕組み（状態、行動、報酬）の説明があっさりしているので、事前知識がない人は置いていかれるかもしれないという心配だけ。でもここはYoutubeなりで補完すれば数時間で理解できる。本に書いている内容をこの本なしで理解しようと思ったら半年でも全然足りないと思うので、本を買う価値は有り余るほどありすぎる。Kindleに完全対応していてマーカーや単語検索、文字サイズの変更ができるのもありがたい。おかげでスマホでも問題なく読めるから電車などのちょっとした空き時間にコツコツ読み進められる。徹底した著者の読者視点がほんとに有り難い。ぜひこの姿勢が技術書のスタンダードになってほしい。
最近の話題まで俯瞰出来る内容になってて良かった。
"AI"という言葉を聞かない日がない今日この頃。その反面、言葉が独り歩きしているようで一体何ができていて何ができていないかはよく分からない。ゲームの世界でコンピュータが人間に勝利した黎明期から始まり、最近はどこまで進んでいるのか丁寧に解説しながら一般にイメージしがちななんでもできるAI(汎用AI)と現実のAIとの間のギャップが透けてきます。AIという世界を俯瞰してみる一助となる一冊。
ゲームを攻略するAIについて、歴史から技術的な背景まで詳しく分かりやすく説明されています。論文を読んで理解できる人には不要かもしれませんが、そんな人は極わずかではないでしょうか。チェス、将棋、囲碁のようなボードゲームのAIはすでにみなさんも目にしていると思いますが汎用ゲームAI（AIがゲームのルールなども自分で学習）が得意なゲーム、苦手なゲームなどの理由や使われている技術が興味深いものでした。また、StarctraftIIというストラテジゲームの攻略AIなど、ゲームを学ぶということはどういうことなのかが良く分かります。MineCraftを学ぶAIにもふれられており、ゲーム好きなら難しい内容も多いけど完走できると思います。
到着は思っていたより早く助かりました。ただ、本を開いた所染み付いたタバコの煙の臭いが...。本自体はそれなりにきれいだったので残念でした。
Java Webアプリケーション開発を前提にJenkinsの使い方を説明した本。JenkinsだけではなくてGitHub, Maven, JaCoCoとの連携を含めて説明している。開発に対する考え方の学習や自分の使い方への応用ができる人には有用な情報が詰まっている。一方で、ただ単にJenkinsの使い方だけ知りたい人には向いていないと思います。
実用性のある内容でした。
期待通りの内容です。
Jenkinsについてまだまだ勉強中ですが、仕事の効率化の為に購入しました。ちなみにこちらは2017/5/24の改訂版です。
2017年に改定されてるらしいが、それを加味しても情報が古い・Maven、Eclipse とか言ってる・章立てに工夫がなく冗長・態々本を買うまでもない簡単なところにページを大量に割き、web情報だけからでは嵌るような箇所にはほとんどページが割かれていないQiitaとかの記事の方が役に立つと思います
一からjenkinsを学ぼうとするには向かない本です。本の先頭から順をおって手を動かしても、スキップされている説明がかなりあります(pluginのインストール等)結果、ついていけずに何となくの理解になってしまいます。きちんと理解するにはわざわざ自分でネットで調べる必要がありますある程度jenkinsや、関連するツール(gitやらmavenやら)に慣れ親しんだ人が頭の中を整理するぶんにはよいのかもしれないが、というところです。
学生時代に読んだことがあったので、購入しました。本のタイトルにある通り、「学生、研究者のための、、」ですので理系で発表をわかりやすくしたい方にオススメです。
コントラスト（重要事項強調）、グルーピング（内容整理）、イラストレーション（図解）がポイント。多数の実例紹介。買って眺めて損はないです
当方、理系でも学生・研究者でもないんですが……ダメ例の修正過程がわかるというポイントにひかれて購入。自分のスライドかと思うような例の連続で、目からウロコぽろぽろがいっぱいでした。とはいえ、「ちょっと飛躍しすぎじゃない？」という過程スライドもあり、参考にはなったものの、いざ自分がこのようにスライドを直していけるかは大いに疑問です……ものによって、もうちょっと過程が細かくてもよかったかも。
パワポの勉強になる
プレゼンテーションスライドの教科書はプレゼンテーションZenのようなビジネス用のものがほとんどである。つまり、アカデミックなプレゼンのための教科書はあまりない。例えば、博士論文の審査でTEDのようなプレゼンをしたら100％審査に落ちる。とはいえ、博士論文審査のようなアカデミックな場だからといって文字が満載で統一感のないデザインのスライドでは審査員の方々にいらぬ負担を強いてしまうことになる。そもそも、アカデミックなプレゼンのスライドがゴチャゴチャしてしまう傾向にあるのは学問的な厳密性が損なわれてしまうのを恐れてしまうからではないだろうか。本書は後者のアカデミックな場に耐えうるスライドでなおかつ「見やすい」デザインを提示している。すべてのアカデミシャンにオススメしたい。
やりがちなだめな例を挙げながら、改善法を書いてあり分かりやすいです。
今の職場は研究所で、資料作りをする事が多いため、参考のため購入15年前に、自分の属する工場の制御システムのユーザーインターフェース（要はオペレータが操作する画面）を設計する際に、認知心理学に関係する書籍を読んで勉強した事があるが、それと同じような事が書いてあるしかも、綺麗にわかりやすく学生はもちろん、若い社会人にもお勧め
まぁまぁ参考になったが、同じ内容の繰り返しページが多すぎます。
期待した程ではなかったが、悪くはない。
いろいろなレビューがありますが、スライド作成に関する知識がある人も、そうでない人も、自分のスライド作成後、この本と何度も見比べてみると良いと思います。客観的にスライドの改善点を探す良いツールになると思います。
現在Chapter1の5ですが、Chapter0からChapter1になって途端に難易度が上がったように感じています…。理由1.使うデータが毎回異なるのでデータ構造の理解に時間を使うChapter1は使うデータが問題ごとに毎回異なるので、せめてデータがどういう構造になってるかを教えてほしい。tableauの操作理解に集中したいのにデータ構造の理解からスタートするので、tableauを操作している時間よりデータを理解するのに時間を取られる。求めているのはそこじゃない…。あとカラム名が英語なのも個人的には難易度が上がったところ。理由2.問題文がわかりにくい問題文のなかにワンポイントアドバイス的なのが含まれていることで、どこから問題文なのかがパッと見でわかりにくい。せめてそこは分けて欲しかった。なかなか進みませんが、とりあえずこのまま進めようとは思います。コンセプトとしてはすごく良いのですが…うーん……。
バリエーション豊かな様々な機能を、具体的に使うことができました。この機能はこういうときに使うのかとわかりました。さらに、色をつければいいとか、表示をどう変えればいいとか、この場合はこういうグラフで表すといいとか、どう進めていけばいいのかがわかったことが、一番いいと思ったところです。
新規のシートから作っていくので、何ができて何ができないのかよくわかりました。自分で考えてから、問題の答えをすぐに知れるので、一冊でかなりのスキル習得ができると思います。すべての手順と、最終的な結果の画面が大きく出ていて、操作しやすいです。
Tableau未経験者は買ってはいけません。Tableau使ったことがある人前提の本です。Tableauの本の中で一番安かったので、未経験者向けかなと間違えて購入してしまいました。未経験者NGと記載してほしいです。私は未経験者だったので本当にひどい目にあいました。特に0章は解説皆無で、結局ネットで調べる羽目に。。。購入する意味がなかった。また、1章以降も解説は少ないし、言葉足らずが多い。どの画面の話なのか記載がないため本当にてこずります。画面キャプチャも載ってるから分かりやすそうと思って買ったのですが、文字が小さくて読みづらく四苦八苦するだけでした。翔泳社のHPにデータソースがすべてアップされていますし、作者のHPに完成した分析結果が載ってますので、経験者はそれらから自分で調べて作成してマスターすればいいだけなのではないかと思いました。
実践的で、わかりやすい。一度教育を受けたことがあるが、この一冊でいろいろ忘れてたことが思い出せたし、漏れてる知識が次々出てきて、勉強になった。業務では同じようなデータで同じようなグラフ作成の繰り返しなので、いろいろなデータでいろいろなグラフを作れるのが良かった。粛々と進めていけば1週間で一周終了できるので、ちょうどいいボリューム。
かなり初心者向けの内容なので、業務で既にTableauをある程度使っている人にとっては物足りない内容かもしれません。
本にそって、なぞって操作するだけでなくて、自分で考えながら使うことの大切さを実感しました。Tableauを使っているなかで「あー、できそうなのにできない！」という状況に陥るのは私だけではないはず。その、あと少しでできない！という場面が集まってるので、一周終わるだけで「一段階レベルアップできた！」という体感がもてました。各問題で、どんなテクニックを使って解くのか、まとまっています。一周目では、それを隠して挑戦しました。二周目は、練習したい特定のテクニックの問題を解きました。苦手なテクニックも何問か使ってみたことで、使い方が腑に落ちてきています。また、すべての問題で、最終型の図が出ているので、ペラペラめくって、作りたい図の作成方法を知れたのも良かったです。
大変よく作りこまれた本です。実戦的なスキルが凝縮されていて初級者が理解を深めるのに役立ちますね。Tableauの特徴である、簡単な操作で高い表現力を出せることが、よく体感できます。実習なので、効果的に学べるでしょう。これはおすすめできます。チームメンバーにもやってもらおうと思います。他のレビューを見ると、レベルを確認せずに購入しただけ、という方がいらっしゃいますね。Amazonでスクショは何問も出てますし、演習本の中身を確認せずに購入するとは不思議ですね。しっかり書いてありますよ、基本知識や基本的な操作方法を身につけている人、かつ初級者向けって。
1トピックはほとんど見開き2ページで、操作手順は全然多くないのに、様々な可視化ができることに驚きます。簡単な操作で素早くグラフを作り変えて、データから次々と良いこと・悪いことを発見する、「データ分析」をする感覚がわかってきて嬉しいです。目からうろこの瞬間が何度も訪れました。
講習会やマニュアルより、自分で手を動かして考える問題形式の方がずっと身になると思いました。本当に使えるようになりますし、やりがいもあります。問題数が多くて、解答がダウンロードできるところも良かったです。
とても見やすいテキストでした。たまに覚え方やアドバイスが一言ついているのも良かったです。また、どれぐらい勉強したら良いかや、他の教材の紹介などもあり、とても助かりました。
6章以降のイメージデータが表示されない複数の端末で、削除してダウンロードしなおしたけど、表示されないデータが、おかしいのか？内容は良いだけにとても悲しい
とても詳しく記述されていました。納得の内容です。学習サイトのPing-tとの連携も受験者にとっては本当に助かります。
AWSの資格取得に凄く役立つ一冊です。内容はとても具体的に記載されており、しかも読みやすくなっておりました。資格取得を目指されているな是非御覧頂きたいです。
途中まで他の書籍よりわかりやすく良本かと思っていたのですが、途中から図表が表示されない状態です。残念です。
AWS認定資格を取得するために拝見致しました。Ping-tとの連動が凄くありがたかったです。
ping-tで演習しながら進められる点は良いが、語尾に「w」など、読んでいてストレスが溜まる書き方。まともな資格本として出品するなら、気にならないよう淡々と書いてほしい。
試験の基礎知識を得るのに役立ちます。
内容以前に5-3のDAXの説明以降、最後（12章）まで、ほぼ全ての図表が空白で表示されません。Fire HD、IOS、PC版のkindleで試しましたが、全て同様の状況です。端末から削除して、ダウンロードし直しても状況は変わりません。他のkindle本は問題ないので、本書籍のコンテンツの作り方の問題だと思います。
Ping-tと連動しているので分野ごとに学んだらすぐにアウトプットできるところがよかった。元々私は別の教材で問題集を一通りやっていたのですが、参考書は読んだことがなく、問題集を解くだけでは曖昧だった知識が補完されていき、痒いところに手が届く感覚で読み進められました。
各項目が、以下のような構造になっているため、学習が進めづらい。やりたいこと└SQL└R└Pythtonやりたいこと└SQL└R└Pythton非常に煩わしかった。あと、本のビジュアルと中身が合っていない。おそらく、従来あった逆引き時点的なイメージで購入される方も多いとおもうが、ライトな入門書である・・・読み応えはなし。コードもせめてnotebookで書かれていれば学習しやすかったが、pyファイルである。中身は悪くないとは思うけれど、学習するという視点では人に勧めづらい。他の方も書かれていたが、なにをもってAwsomeとするのか、ケースバイケースなのだが、初学者に対して、言い切っちゃダメだろう・・・というところも散見される。一通り学習して、抜け漏れがないかチェックするのには役立つかもしれないが、価格には満たないというのが私の感想。
他のレビューにあるよう、文面に傲慢さが感じられるが、内容は良い。
データ分析はモデリングなどに目がいきがちですが、実際にやるとテーブル結合・クレンジング・名寄せなど、データ前処理か非常に大変で、非常に苦労します。そういう背景があるため、データ前処理を勉強するのはとても有効です。誰でもモデリングできるAutoMLツールが流行ってきましたが、データ前処理は少なからず地道に手を動かす必要があります。AutoMLが流行ってきた今だからこそ、改めてデータ前処理を勉強することに価値があります。
機械学習の精度がなかなか上がらないため、まずは前処理を見直すため、よりよい手法の調査しようと思い、本書を購入した。大全と名がつくので、基本から高度なものまで様々なテクニックが記載されていることを期待していたが、初歩レベルのみの記載で少し期待値と違い残念な気持ちになった。ただ、前処理とは何かからはじまる人にはよいのかもと思い、星３つ。大全というか「はじめての前処理」が適切なんでは。
自身のような「(情報システムのプログラミング経験は豊富だが)分析のための前処理はうとい」人には非常に参考になると思います。エッセンスを吸収したらすぐに手放すつもりでしたが手元においておくことにしました。(笑)ただ、以下の様な点が気になったので次回作の期待を込めて☆1つ減らしました。(1)レビューされていない以下の様な単純なミスがあります。おそらく第三者のレビューはなかったのかと思います。そのせいか全体を通して表現の揺れやいいまわしが洗練されていない印象を受けました。(内容がよいだけに勿体無いなと) 『本書では次の4種類の補完方法について解説します。』→ 実際には6種類『カテゴリ化に対応していないので、★カテゴリ化★の方法をしっかり身につけましょう』 ★部分は「ダミー変数化」 が正しい(2)厳密でない例えば「pythonでは、ブール型はbool、カテゴリ型はcategory型が提供されている」という記載がありますがpythonにはcategory型は存在せずライブラリ(pandas)が提供する型です。こういった混乱を招く雑な表現が少なくありません。(3)コードの良し悪しの基準が恣意的 全体を通して「これは非AWESOME(もしくはAWESOME)なコード」という説明がなされていますが、判断基準が恣意的というか一貫性がないと感じました。 「計算量は多いけど簡潔で可読性が高いのでAWESOME」「簡潔でないが計算量が少ないのでAWESOME」という感じ。どっちやねん！と。笑(4)Awesomeが微妙な場合がある「改変が容易なのでAWESOME」と主張しているコードで何度も同じ列名をタイプしてたりします。この場合は、コードを関数化して列名を引数にして使い回すかつ汎用的(同じ処理を違う列でも適用できるようにする)にするのがAWESOMEですね。(5)冗長箇条書きや表形式にしたほうが簡潔に表現できることも文章で記述されているので無駄に長い。本書の内容とは関係ありませんが、上述したような指摘はプログラマの世界では「曖昧・冗長・一貫性がない」と批判されても仕方がない恥ずかしい事ですが、データサイエンティストという職業では重視されない(＝扱っているのが確率の世界なので厳密さを求められない=>曖昧さがむしろ「柔軟」として評価される)のかな？なんて思いました。次回作に期待します。個人的には「外れ値の扱い方」が薄かったのでそのあたりの考え方や方法論・ノウハウを学びたいと思いました。
発売前に予約して購入しました。購入目的は、python使いこなすためにヒントもらおうというざっくりしたものでした。ざっくりしてたので、ちょっと読み進めるのも苦労しましたが、、、python,R,SQLのいいところ、悪い所をプログラミング事例で学べて良かったです。今後は最適解を出すためにも使い分けを含めた、考え方、視野を取り入れて行く必要があるのだなと感じます。
レビューを見るとプログラマ視点のものが当然多いが、データの出し手である利用部門も読む価値があるのではないかと思う。ＡＩを用いたシステムの開発側にデータを丸投げするのでなく、どう使われるか理解してデータを提供できれば開発側の作業負荷軽減の効果等があるはずだから。そういう使い方の場合、この分厚い本の大半は読む必要がなくなるが、逆にカード部分を飛ばすならば、本書は非常に簡単に読めるので、ますます利用部門が読むハードルが下がるともいえる。コードを除き、プログラムを知らない一般の人が見てもそれほど難しいことは書いていないので、本書は、利用部門の担当者が、コーディング例以外を読むことは容易で意義があると考えます。ただし、プログラマ目線で見ると、本書に＂大全＂というタイトルにつけるのはちょっとという印象は否めない。ましてや"Law of Awesome Data Scientist "というのは、さすがにやりすぎである。
プログラムコードを動かそうとしてもなぜか動かない。コードが動かない原因のあたりはついているけれどもどう処理するのが一番ベストなのだろうか？そんな疑問に答えてくれるのが本書です。大抵の場合においては、エラーメッセージからググって、答えに近いサンプルコードを拾い出してくることになるけれども、本書ではそういった処理の方向性（小技）が体系的にまとまっています。ただし、一方で説明内容を詰め込み過ぎているきらいがあり、初心者には不親切なところもあるので、ある程度、コーディングの経験を積んだ実務者が利用するのがいいと思いました。
「地味で孤独な長い鍛錬の上に華は咲く」余り華のない領域なので書籍が少ないです。データ処理がスコープに入ってきて困ったときに読むと、とても分かった気持ちになれる良い本です。
製造プロセスデータの分析を主にやっております。前処理関連は本当にめんどくさいものです。理由はケースバイケースですが、大体・条件に応じてコードの使い分けを要する(joinまみれの横長か、unionまみれの縦長になる)・処理が下手だとすぐメモリアウト（うまければ明日から数百億行を処理しろと言われるので結局無理)・無茶ぶりに耐えられる人間が少ないが、敬遠される原因かなあと考えております。こうならないためには、まず・全データを用いてトライアルやらなくていいでしょう、お客様のフルデータだと月1000万円単位の使用料ですが払えるんですか・お客様の要求するレベルの自動データ分析には、最善でも月このくらいコストがかかります。みあいますか・お客様の追加要求は、予約Webページが5分待たされる程度の負荷をかけるのですがいいですねといった、演算コストを金銭的コストにして顧客に納得してもらう必要があります。それは書かれていませんので、顧客のエンジニアと話し合ってください。Awesomeなエンジニアがいないのであれば、さっさと手を引きましょう。
紹介文にもあるように、文系大学生向けのデータサイエンス教本。特に、オープンデータの実際の取得から、初歩の分析までの流れがめっちゃ丁寧に書かれてるので、「オープンデータとか実際の使い方がわからない」などど思っている人には良いかも。分析もExcelならなんとか使ったことあるという人向けなので、文系大学生だけじゃなく、今から学びたい社会人にも良いかも。
いろいろとaccessのvbaの本を買ってきましたが、公式テキストを買った方が圧倒的に学習パフォーマンスが高いように感じました。わかりやすく表などでまとめられている点も好感度が高いです。また、模試？みたいな問題集で理解度テストができるのもGOODです。
良い
ベーシック９割で突破の上、こちらのテキスト３週＋４０００円のWEB問題を２週して９５点で突破しました。重箱の隅をつつくようなえぐい問題が出ます。しかも半分以上は筆記です。公式のサンプル模擬試験ではかなり簡単な問題しか出ないように感じますが、本番では１個か２個くらいしか簡単なキーワード書きなさい問題は出なかったです。
3回目の受検で合格できました。500点→620点→750点と変遷しました。勉強期間は75日、勉強時間は90時間でした。accessの実務経験はありません。本試験では、確かにテキストには書いてあるけど、それほど重要そうではない箇所からの出題が結構あり、攻略に苦労しました。テキスト外からの出題も若干ありました。オブジェクトやプロパティ、メソッドは暗記してたけど、引数部分は覚えてなかったよ。しかし、本試験の問題ストックはそれほど多くないようで、分からなかった問題をしっかり復習すれば点数は伸びていくと思います。教材は本テキストのほかに、ベーシックのテキストと、非公式のオンライン対策問題集コード写経用に、office365のサブスクに1ヶ月だけ加入しました。スタンダードクラウン欲しさに、結局5万円以上費やしましたが、趣味だからよし。
内容的に試験対策はバッチリでした！
本日925点で合格。ちょっと本試験について情報少ないので提供しておきます。まず前提情報です。・私はExcelVBAスタンダードの資格はもってますが、プログラムはずぶの素人です。・Accessはベーシック試験はスルーしてスタンダードに直行しています。・Excelスタンダードの2倍の勉強時間を取りました。・勉強時間分配としてベーシックに5分の2，スタンダードに5分の3の割合です。■ベーシック範囲①マニュアル1巡目。関数などはすべてExcelにメモ。情報量が多くて読んでも一向に頭にはいらないがとりあえずExcelにメモ②作成したExcelデータを元にマナビティアプリ用単語帳(およそ合計150問)を作りひたすら暗記③マニュアル2巡目(事前に暗記しているので内容がどんどん頭に入ります)④原本 羚央著【新試験対応】VBAエキスパート試験 対策問題集 Access VBA ベーシック　の1-5章99円を1巡実施⑤ACCESSベーシックの模擬テスト実施＞925点だったためベーシックの勉強終了■スタンダード範囲①マニュアル1巡目。関数などはすべてExcelにメモ。ベーシック同様理解は2の次にExcelメモを取ることに集中②作成したExcelデータを元にマナビティアプリ用単語帳(およそ合計200問)を作りひたすら暗記③原本 羚央著【新試験対応】VBAエキスパート試験 対策問題集 Access VBA スタンダード　ライセンス購入約4000円＞＜④マニュアル2巡目。1章読むごとに原本 羚央著の対策問題集の該当章実施(事前に関数など暗記済みなので効率よく勉強がはかどります)⑤ベーシック範囲のマナビティ単語帳を復習⑥本誌の模擬テスト実施＞850点・・・。模擬試験よりも本試験は難しいという情報をみて危機感を覚える。本試験まで残り2日と半日⑦マニュアル3巡目。1章読むごとに原本 羚央著の対策問題集の該当章実施(マニュアルと対策問題集を確認する中でマナビティ用単語帳を100項目ほど追加。(スタンダードは合計約300の単語帳となる))⑧本試験＞９２５点こんな感じです。本試験は模擬試験に比べ難題は同数くらいですが、簡単な問題のレベルが若干高い印象。いかに取れるところで落とさないかが重要だと思いました！
自分はAccessに何回も挫折してますし、まだまだ学習中の身です。Excelについては、VBAスタンダード取得済み。本書は、Accessだけにとどまらず、Excelを使う上でも役に立つ内容が載っています。（配列・ユーザー定義型・コレクションなど）現状勉強する時間があまりとれないのですが、本書のコードを打ち込むだけでも、発見があり、面白いです。AccessやVBAについても本はたくさん持っていますが、「とりあえずこの通り打ってみよう」という気になるだけで、本書は優れていると思います。もちろんいずれ本資格取得を目指します。読んでいて楽しいので、（改定前の版を持っていますが）ベーシックも注文しました。
タイトルを工夫することで敷居を低くした本でしょうか。故に自分にはしばらくこの本の利用方法が分からず、買っただけになってました。機械学習を学び始めてから改めて読んでみたらこの本の意味が分かりました。
本書は前半が教科書的な解説で、後半が実践的な内容となっている。多くの機械学習入門と題される本が教科書的な説明に始終し、読後に「それで、その技術が何に使えるのか？」という点には何も示唆が無いことに対して、本書は教科書的な説明は最低限にし、実践、演習的な内容に多くのページを割いている点が注目すべき点である。まずは他のより教科書的な本を読んだ後、2冊目にこの本を選ぶといいと思う。巻末付録のPython入門は情報を厳選しており、チートシートとして◎
企業の売り上げに左右する機械学習について、開発工程とコードが書いてあり、わかりやすいと思いました。また、コードの説明も、細かく書いてあるので、理解しやすいと思いました。コードの説明についてわかりやすく、コードのひとまとまり単位で書いてあるせいか、実際にコードの実行するとなると、プログラミングが全くわからない人はおそらく、どうやってプログラムの実行させるのか路頭に迷う可能性があります。しかし、一度理解すれば、対応は出来るので、興味があればチャレンジしてもいいかと思います。
難しい！最後まで理解できませんでしたプログラマー向けですね
AIサービス開発ではなく、業務改善に近い内容でした。業務改善にAIを導入するためにも、どの業務で役立てるか、そのアイディアが必要になります。その前提として、AIでやれることはなんなのか、わかりやすく説明してくださっています。数学の知識を必要とされますので、挫折せずに取り組むためには、相当な覚悟を持って読み続けることが必要です。
本書内では、業務専門家に対して「AIの目利き」ができるようになるための本と記載されている。それであれば「4.3.9アルゴリズムの選択方法」のところが肝であると思われるが、1ページ程度しか記載がなく内容も非常に薄っぺらい。ただし、これから機械学習を学び始めるための第一歩としては、網羅性も高くとても良い本。タイトルと内容が合ってないかな。
巻末に学ぶ際に使用する導入や3つのライブラリについて記載があり、初心者でも取り組みやすくなっている。初心者が躓く「画面と違う」を減らそうとしてる作りに配慮を感じる。Python入門用のサイトも用意してあり、本書以外でも学ぶことが出来る。　説明とともに作りながらというよりは「勉強」する教材。一緒にやれないこともないが工程が多いため一度「知る」選択肢を取る人が多いと思われる。　正直、この値段でここまでの知識を得られるのかと思えるほど著者の知識を詰め込んでくれた一冊で、補足や少しそれた話も別サイトで教えてくれる親切さに驚きを隠せない。　私は機械学習がどのようなものか知りたく購入したので、機械学習を既に行っている人に対してお勧めできるかは判断しかねます。私と同じく「どのようなものか知りたい人」にとっては良書であると断言できる。　4章以降、難しく深い内容なのは理解できる。重要だから覚えてほしいところだからという理由なのも理解は出来るが・・・「理解するようにしてください」「覚えてください」と学校の授業のような口調が本書後半になるにつれ増えていく部分は好みが分かれそう。　補足サイトの記載にない誤字・脱字もあるが、それで詰まるという内容ではない。
ネットとかでAIが来る！って言われてるけど実際のところAIってなんなの？っていう疑問にひとつの回答をくれる本だと感じました。AI専門家の需要はおそらくこれからも伸びていくことでしょうが、すべてのビジネスマンがそれをすべて理解する必要は無く、また、そうしようとしても無理があります。そんな中で、AIについての概要だけでもつかめていれば、これからの時代にもうまく乗っかっていくことができるように思います。自分としてもなんとなくAI（というかその一部である機械学習）について、輪郭をつかめたような感覚があります。AIと言っても多岐にわたるので、本書で取り扱うのはその中のほんの一部分だと思いますが、この本で学んだことを足がかりとして、例えばPythonの知識を掘り下げたり、AI導入のもっと難しい本に進んでみたりすることができると思います。全部で４００ページ弱の本ですが、丁寧に書かれたコードが大部分ですので、思ったよりスピーディーに読みすすめることができました。
AI関連の本について2点挫折する理由があるとすると・数学の知識が必須である・突然知ってて当然というように知らない概念が出てくるというのが個人的にありましたがこの本の著者はそういったことが1っさい内容にこの本を完成させてくれています。幅広くて深い経験と知識がないとこのような書籍はできないと思います。そういう意味で1冊の技術書として読んでいて感動するレベルと言っていいほどかもしれません。
初学者です。JupiterLaboで書いてたら実践編でつまずきました！笑GoogleColaboratoryならちゃんと動きます！
体系的にまとめられているため、非常にわかりやすかったです。別の資格を取得する時も、同じシリーズを購入しようと思っています。
SAAを受ける際に購入しました。この本を3周したうえで、Udemyの問題集を進めていき、無事合格しました。私のように、この本だけで合格は厳しいと感じ、ほかの教材を使う人もいるかもしれませんが、この本を導入とすることで、AWSの全体像をつかむことができるので、第一歩としておすすめです。
解説として良い本ではあるのですが、内容が基礎的すぎてとてもじゃないけどSAAの試験対策にはなりません。また、2020年から改定されてないようですので、サービスの情報が古いです。
一通りの知識をつけるための導入書として読み始めています。動画学習などで登場した認識の薄い単語をこちらで索引から逆引きして理解を深める使い方をしています。問題数は少なめなので、別途問題集は必要かもしれません。
まだ内容を読んでいないのですが、問題集が多いようで、模擬問題が多い本が欲しいので良さそうです。
AWSの基本的な考え方や各サービスの特徴などがきちんとまとめられてますので、特にAWS触ったこともない初学者に向いてるいい本だと思います。ただ、SAAに合格するという目的に限定して言えば、これ１冊で合格するのは少々厳しいです。この本で全般的なことをざっと理解したあとに、各所で有償やら無償で公開されてる模擬試験をやりこむ必要があると思います。
773点で合格しました。この本を中心に勉強しました。Udemyの問題も一応少しやったのですが、レベルはこちらの本の模擬試験の方が近いかも。問題は色々解いた方が慣れる意味で良いと思うのでこの本+問題集を買うと良いかと思います。この本で分からなかったところをネットで調べたりしましたが基本この1冊をしっかり読み込めば大丈夫だと思います。
受験した試験:SAA-C02勉強期間3週間で753点で合格しました！本書で基本的な事を暗記して小岩で応用問題を解きまくりました。本書のみでの合格は不可能だと思いますが基本を学ぶにはとてもいい内容だと思いますのでしっかりと本書の内容を理解した後小岩やUdemyの問題を解くのがおすすめです。逆に急に小岩やUdemyをやり始めると挫折します。とてもいい本だと思うので皆さん本書を買って頑張って勉強してください！
初学者が試験範囲を理解するにはよいですが、発行年月日が2020年であり仕様変更により内容が誤っているケースがあります（S3の整合性など）本書だけでは確実に不合格ですので、udemyなど最新版の問題集をこなすことをおすすめします。
過去に違う資格試験をインプレスの本を利用して学習していたので信頼して購入しました。正直言って、この本は全体的に内容や説明が足りていないと感じました。AWSはサービスが非常に多く、知識量だけでも半端ないので、書籍化する為にボリュームを絞っているのでしょうが、解説を読んでも把握できない点も多く、hands-onも一切ありません。・EC2+AutoScaling+ELB・Cloudfront+WAF+S3編・ストレージ編・データベース編・セキュリティ編・サーバレス編・サービス自動化編など複数のカテゴリーに分けてハンズオンまで含めた内容にしないと実力を伴った理解は厳しいと思います。
VBAエキスパートの試験はExcelとAccessの2つのカテゴリーがあり、それぞれベーシック(初級)とスタンダード(中級)の難易度があります。Excelは田中亨氏、Accessは武藤玄氏が担当されており、公式テキストは両氏の性格が反映された内容になっています。本番の試験問題作成も恐らく各担当官が主導して作成されているのだと思います。VBA Excelの方がVBA Accessと比較して覚える事は少ない分だけテキストは作りやすいですし、何より売上も期待できるでしょう。どちらの担当官をやりたいかと言われたらほとんどの方がVBA Excelの方を選択するでしょう。VBAエキスパートの模擬試験はアオテンスキルチェックというサイトでCBT形式で行われます。試験結果が表示される時に、その模擬試験を受けた延べ人数も表示されるのですがその数がこちらです。Excelベーシック → 4332人Excelスタンダード → 3331人Accessベーシック → 135人Accessスタンダード → 未実装(旧版はローカルPC上で行う)(※2020.01.19現在)恐るべき結果です。VBA Accessを担当された武藤氏のご苦労が偲ばれます。武藤氏の他の著書群を見るとVBA Excel関連ばかりなので、田中氏とのジャンケンに負けてVBA Accessを担当される事になったのかな？とかいらぬ妄想を抱いてしまいます。私も業務担当を決めるジャンケンで負けたために大きく人生が翻弄された経験があるので、共感してしまう部分があるのです。(※ジャンケンのくだりはあくまで個人的な妄想であり、武藤氏の方が田中氏よりAccessに精通していたからだと思います！)私は時間と受験料を考えてベーシックはスルーし、各スタンダードを直行で受験し合格できました。それを踏まえて肝心のテキストの内容ですが、ベーシックをスルーしてスタンダードに直行したとしても、こちらのベーシックのテキストも勉強した方が良いです。40問前後で合格ライン7割だと12問までは不正解を許容できます。こちらのベーシックのテキストを未見で臨むと、4～5問は落とす可能性があります。Accessスタンダードは武藤氏が作成されたと思われる挑戦的な難問が多いので、ベーシック問題を落とすとかなり響きます。ベーシック問題も地味に難しいので「み●なの受験記」などを参考にして、実際に挙動確認されてから試験に臨む事を強くおススメします。ADO/DAO、ファイル操作のあたりはソースコードをほぼ暗記して、DoCmdや関数もできる限り頭に叩きこみ、SQLは命令の頭文字を繋げて無理矢理覚えました。こんな感じで14個の怪文を作って詰め込みです。SELECT Sum() AS FROM WHERE GROUP BY HAVING Sum()セサ()アフフェグバハビサ()SELECT FROM INNER/LEFT/RIGHT JOIN ON WHERE IS NULLセフイレラジオフェイヌALTER TABLE ADD/ALTER/DROP COLUMNアテ嗚呼ドコゴロ合わせにしようとしたのですが、無理に意味ある文にすると冗長で逆に分からなくなったので削ぎ落としました。テスティングセンターへ向かう道中、怪文を頭の中で連呼しながら最終調整しました。VBA Excelの方は試験問題もオーソドックスで攻略しやすいと思います。VBA Accessの方は勉強時間を2倍に増やしたにも関わらず、点数はVBA Excelよりも取れませんでした。ベーシックだけ受けるにしろ、スタンダード直行するにしろ、このテキストの隅々まで読んで頑張ってくださいませ。VBA Accessという資格はAccessとの闘いであり、なおかつ武藤氏との思考バトルなのかもしれません。
試験本番では、重箱の隅を突くような問題しか出ません。Excelの方とは問題の質が全く違います。ひどすぎる。もう文章全部太字にしとけ。全部丸暗記しろってか。
試験対策バッチリでした！
この本は参考書という感じで、一通り読んだ後に、忘れてしまった時に再度参照するという感じでの使い方が良いのではないでしょうか。ただ練習問題がないので、問題集が欲しいところです。Excelと違って、なかなか問題集がないのがAccessです。他のAccessのVBAの本を購入して、代用するのが良いのかなと思います。
ベーシックにもかかわらずExcelのスタンダード以上に覚えることが大量です。他の方もおっしゃるとおり一筋縄ではいかないという心構えでがんばります
ExcelVBAスタンダードを取得したので、スタンダードクラウンを目指して購入。そもそもエクセルより難しいという事もあると思いますが、単に説明不足なのでは？と思わざるを得ない部分もあり、わかりづらいと感じました。エクセルのようなインストール型の模擬問題がついていないという点が特に不満でした。
データベースの内部実装の詳細を解説してくれている一冊。前半は、従来のHDDを利用したデータベースにおける、ストレージのファイルフォーマットを考慮したCRUDの管理方法から、データベーステーブルにおけるBツリーなどのによる検索最適化の実装例や、ページキャッシュ（バッファ）の仕組み、トランザクション同時実行制御などが基本設計書レベルの粒度で記され、実装をイメージすることができる。さらに、従来のHDDに加えSSDに最適化を想定したデータベース、インメモリDBなども紹介され、SSDのストレージ特性と調和のあるイミュータブル（追記型）のLSMツリーにおけるデータ書き込み、検索効率化のための実装内容にも言及してくれており、データベースアーキテクチャの進歩を俯瞰することができる。後半は、データベースの分散処理に言及してくれている。いくつかの分散処理のアーキテクチャを例に挙げ、調停方法のアルゴリズムや、ノード障害やネットワーク障害時の対処や問題点、CAP定理に基づくレプリケーションノードにおけるデータレスポンスのトレードオフなどを解説してくれている。システム開発などで、ほぼ実装はブラックボックスに近くザックリした仕様特性で何気なしに選定して利用してたデータベースであるが、本書を読むことでかなり踏み込んだ実装内部の仕組みが見えてくる。これにより、今後のデータベース選定においても、利用するハードウェアや環境（分散環境）、アプリケーション特性を考慮して、データベースの実装特性と調和した選定をするために考慮すべき知見や観点を多く学べる著作だと感じた。ーーーーーーー以下内容メモ第一部：ストレージエンジン１章：基本事項の紹介と概要メモリベースDBMS　ディスクより高速アクセスが可能　システムクラッシュ、電源断でデータが失われる  > バックアップをディスク上に格納して永続性の実現：全てのDBが永続性の保障をしているわけでない  　バックアップはI/O回数削減のため、バッチ処理　OSによってメモリ管理が抽象化ディスクベースDBMS　データ参照、シリアライズ、フォーマット、解放領域管理、フラグメンテーションを手動で管理が必要***インメモリDBMSと大量量のページキャッシュを持つディスクベースDBMSと同等と言うのは公平な意見ではない。ページがメモリ内にキャッシュされていたいとしても、シリアライズのフォーマットとデータレイアウトによって追加のオーバヘッドが発生する。よってインメモリのデータストアで達成可能な最適化と同じレベルには達しないチェックポイント処理　ログレコード（データ更新内容をシーケンシャルで書き込まれたもの）はバッチ処理でバックアップに適用される。これが終了すると、特定の時点のデータベースのスナップショットがバックアップによって保持され、これまでの時点のログ内容は破棄できるようになる。これをチェックポイント処理という1.3 列指向DBMSと行指向DBMS行指向：　行単位でデータにアクセスする場合に有用：行全体を格納。　行ごとに隣接して格納　しかし、特定列アクセス（たとえば電話番号列のみアクセス）の場合は、すべての列が含まれているのでコストが高くなる。列指向：　垂直指向＞列単位で複数行をまとめている。　同じ列の値が、ディスク上で隣接して格納される。　列ごとの効率なクエリが有効になる。クエリの対象にならなかった列の破棄が不要　集計処理などの分析的なワークロードに適す。DBMSでは、データファイルと、インデックスファイルは分けられている　データファイル：データレコードを格納　インデックスファイル：レコードメタデータを格納最新のストレージシステムでは、レコード削除時に、データをページから明示的に削除はしない。削除マーカーで印だけつけて、ガーベージコレクションの際に回収されるデータレコードの順序が検索キー順に従っている場合、このインデックスはクラスタ化されているという。データの参照方法：　ファイルオフセットとして直接扱う　　＞ディスクシーク回数を削減できる　　＞メンテナンスプロセスの間にレコードが更新されたり再配置されるとポインタを更新する必要がある。　プライマリキーインデックスを介して行うストレージエンジンの共通した変動要素・バッファリング　ディスクに書き込む前に、一定量のデータをメモリ内に収集する・ミュータビリティ（可変）、イミュータブル（不変）　ストレージ構造がファイルの一部を読み取り、それらを更新し、更新の結果をファイル内の同じ場所に書き込むかどうかの定義　＞イミュータブルは変更不可なので、追記のみ　　コピーオンライト：変更済みのページは、レコードの更新された　　バージョンを保持したたままで、ファイル内の元の場所でなく、新しい場所に書き込まれます・オーダリング　ディスク上のページ、データレコードをキーの順序で格納するかどうかを定義　ソートされた結果で、近くのキーたちがディスク上の隣接したセグメントに格納　一定範囲のレコードを効率的にスキャンできるかも定義される。２章：Bツリーの基本・二分探索木　ツリーのバランシング：一部だけ長すぎるツリーは、線形探索に近くなってしまう  バランス：高さがlog2Nであるツリー  １６個のノード 16＝long2 4 (2^4)　　バランスのとりかた：回転ピボット  5  3  3  ->(３を中心に右回転)  2 5  2ディスク向けの実装に適したツリー・大きなファンアウト（ノードに許容される子の制限数）で隣接するキーの局所性を改善・ツリーの高さを低くたもち、ノードをたどる時のシークの回数を削減ディスクベースの構造・データ量が多すぎてデータセット全体をメモリ全体に保持できない時などにディスク上のデータ構造は利用される。任意の時点でメモリにキャッシュできるデータは一部　従来は、ディスクが回転するHDDに最適化したアルゴリズム　ランダムアクセスは、ディスクシークでコストが増大する　そのかわり、シーケンシャルアクセスは効率的　近年は、フラッシュドライブなどが登場して、新たなアルゴリズムも出る　SSDには、HDDのヘッドなど可動部分がない。　変更が加えられるのは、空白のメモリセルのみ。　空白ブロッックの含まれる複数のページには、シーケンシャルな書き込みがされる　SSDの場合、ランダム、シーケンシャルI/Oの違いがあまり強調されないディスク上の構造　ディスクの最小単位がブロック　＞レコード業が含まれていても、ブロック全体を取り出す必要がある。Bツリー　データはソートされている＞二分探索などのアルゴリズムが利用可能　約４０億のなかから検索対象キーを検出するのに約３２回の比較が必要　Bツリーのノードには数十〜数百の項目が格納＞この１レベル移動ごとにディスクシークのオーバヘッドがかかる。  ノードのファンアウトを大きくすることで、ツリーのバランスを保つための必要な変更コストを削減。　子ノードへのキーやポインタを単一ブロック、または連続した複数ブロックに格納して、シーク回数を減らす。　バランシング（スプリット、マージ）は、ノードが満杯、または空の時に行われる　計算量 logkM  k個のノードファンアウト数、M：項目の総数  *二分木はlog2N  分割とマージ　　分割：ノードに登録できる項目数がオーバフローした場合　　マージ：隣接したノードに保持されている値がわずかな場合　　　つまり、それらの利用率が閾値を下回った場合アンダーフローと呼ばれる３章：ファイルフォーマットデータをディスク上に効率的に格納するには、コンパクトで容易にシリアライズ、デシリアライズできるフォーマットを使用してエンコードが必要キー値：integer, data, stringなどの型をもち、バイナリ形式のまま表現可能多くのデータは固定長の値として表現マルチバイトの数値を扱うときは、エンコードとてコードの両方に、同じバイトオーダー（エンディアンネス）を使用することが重要エンディアンネスのバイト並び順・ビッグエンディアン：最上位バイトから始まり、上位から下位へバイトが続く・リトルエンディアン：最下位バイトから始まり、下位から上位へバイトが続くレコードは数値、文字型、ブール値のプリミティブ型とそれらの組み合わせただし、ネットワーク上でデータを転送するときや、ディスク上に格納するときは、シリアライズ（解釈可能なバイトの列に変換）の必要がある。シリアライズとは：構造を持ったオブジェクトには、メモリのアドレスのポインタが含まれるものがある。これらは、PC固有で有効のアドレスだったりするので、全てのマシンで普遍的に利用できるように明示的なデータ値に変換する。これをシリアライズという。読み取り後に、レコードで使用できるようにするには、デシリアライズが必要スロット化ページ可変長レコードの格納時には、空き領域の管理（削除された領域の回収）が主な問題になる。次のことを可能にする必要がある・オーバヘッドを最小に抑えながら可変長レコードを格納できる・削除されたレコードが使用していた領域を回収できる・実際の配置にかかわらず、ページ内のレコードを参照できる文字列、バイナリラージオブジェクト(BLOB)などの可変長レコードを効率的に格納にするには、スロット化ページ、またはスロットディレクトリの技術を使う　ページをスロット、またはセルのコレクションに編成し、ページの両端にある独立したメモリ領域にポインタとセルをそれぞれ配置する。　＞順序を維持するために必要なのは、セルをアドレスしているポインタの再編成のみで済む。レコードの削除はポインタを無効、または削除のみで済む  ＞領域の回収は、ページのデフラグと書き直しで回収できる。  ＞空いた領域は、利用可能領域リストで管理もする　　ファーストフィット、ベストフィット方式などで格納４章：Bツリーの実装ページヘッダ・マジックナンバー：ブロックがページを表すことを知らせたりするためのもの・兄弟リンク：ノード内の同レベルの前後の兄弟ノードへのリンク。ルートから辿らなくても済む・ノードハイキー：ノード内の扱う値を右ポインタの値を超えないようにする。＞ファンアウト数の制限・オーバーフローページ：空き領域がなかったデータの残りを格納Bツリー・パンくずリスト：どのノードを辿ったかの痕跡リスト・リバランシング：スプリットやマージなどはコストが多いので、要素を移動させる・ページのデフラグ：コンパクション、バキューム＞ガベージコレクション５章：トランザクション処理とリカバリACID特性の実現ページキャッシュ：永続ストレージとストレージエンジンとの仲介永続ストレージと同期されていないページのキャッシュとして機能バッファ管理　低速な永続ストレージ（ディスク）　高速なメインメモリ（RAM）  永続ストレージにアクセスする回数削減のためにキャッシュで利用  ストレージレイヤから再度同じページ要求があった場合は、キャッシュされたコピーを返すようにする。  メモリ内にキャッシュされたページは、他のプロセスがディスク上のデータを変更していないという前提のもと再利用できる＞仮想ディスク  仮想ディスク：ページのコピーがメモリにない場合ディスクにアクセス　　　同じ概念を表す別名：ページキャッシュ、バッファプール  キャッシュされてないページを読み込む＞ページイン　　キャッシュされたページに変更が加えられた場合、これらの変更がディスクにフラッシュして描き戻されるまで、そのページはダーティである　　キャッシュされたページの保持されるメモリ領域は、データセット全体より小さい＞ページキャッシュがいっぱいになる＞退避が必要ページキャッシュの主要機能・キャッシュされたページ内容をメモリ内に保持・ディスク上のページに対する変更をまとめてバッファリング　　そのキャッシュされたバージョンに対して変更を適用できる・要求されたページがメモリにない場合は、ページインして返す・キャッシュされているページ要求は、キャッシュされているバージョンを返す・領域が足りなくなったら、いずれかのページをディスクにフラッシュして退避させるバッファに加えられた変更は、最終的にディスクに描き戻されるまで、メモリ内に保持他プロセスは元のファイルの変更権限がないので、同期はメモリからディスクの一方通行＞カーネルのページキャッシュをアプリケーション特有にしたイメージ永続性：　データベースがクラッシュした場合、フラッシュされなかったデータは失われる。　フラッシュはチェックポイントプロセスと強調して動作する。チェックポイント：　ログ先行書き込み(WAL)とページキャッシュを制御し、連携する。　WALから廃棄できるのは、フラッシュされたキャッシュ済みのページに適用された操作に関連するログレコードのみです。ダーティページは、このプロセスが完了するまで退避できない。トレードオフ：・ディスクアクセスの回数を減らすために、フラッシュを先延ばし・迅速な退避を可能にするため、先取りしてページフラッシュする・退避させるページを最適な順序でフラッシュ・キャッシュサイズをメモリの制限内に維持・プライマリストレージに永続されていない時にデータを失うことを防止キャッシュのロック＞ピン留め　ピン留めされたページは、通常より長い時間メモリに保持することができる。＞ディスクアクセス回数削減　　　例：Bツリーの上部をメモリに常駐において、下部はノード数が多いのでメモリから除外ページ置換戦略　FIFO, LRU、CLOCK,LFU,WAL コミットされていないデータをログから再現し、クラッシュ前のDB状態に復元リカバリログファイル：　追記型：変更不可、書き込みはシーケンシャル　WALはログレコードで構成：シーケンス番号を持つ同期チェックポイント：　全てのダーティページを強制的にディスクにフラッシュするプロセス　＞プライマリのストレージ構造を完全に同期するフラッシュ処理のポリシ：steal:トランザクションのコミット前でもフラッシュを許容no-steal:コミット前はフラッシュを許容しないforce:コミット前に、トランザクションによって変更された全てのページをフラッシュno-force:全てディスクにフラッシュされていなくてもコミットを許容同時実行制御：トランザクション間の相互作用を処理する・楽観同時実況制御・マルチバージョン同時実行制御・悲観または保守的同時実行制御　直列化可能性・分離レベル　READ UNCOMMITTED:dirty read, non repeatable read, phantom read　READ COMMITTED: non repeatalbe read, phantom read　REPEATABLE READ: phantom read　SERIALIZABLE:６章：Bツリーの亜種各種Bツリーの実装紹介７章：ログ構造化ストレージイミュータブル構造：一度書き込まれたら２度と書き換えられない。その代わりに新しいレコードが新しいファイルに追加されます。>安全性の高さから人気が高まってきている。整合性はストレージ構造を修正できないという事実によって保証ストレージ構造の内部：イミュータブル：複数のコピーを保持でき、相対的に新しいコピーが古いコピーを上書き>ログ構造化マージツリー（LSMツリー）>追記型のストレージとマージによる調停　Bツリー＞ディスク上のデータレコードを探し、ファイル内のオフセット位置からページを更新　書き込み性能に最適化されているミュータブル：一般的に最新の値のみ保持  書き込み性能を犠牲にして実現LSMツリー　イミュータル構造では断片化を避けるためにシーケンシャルにデータレコードを配置できる >更新されたレコードが最初に書き込まれたレコードより大きな領域を必要とする場合に備えるために、予備領域を確保していくことはない。 ファイルはイミュータブルなので、挿入、更新、削除の操作で、当該レコードを探す必要はない。  >書き込みスループット向上  >読み込みより書き込みが多く行われるケースで役立つデータファイルとインデックスファイルの線形可能なメモリ内ビューを保持LSMツリー構造　ソートされたデータレコードがファイルの保持　イミュータブルのファイル内容をディスクに書き出すには、最初にそれらをバッファリングして、内容をソートする必要がある・メモリ上のコンポーネント＞ミュータブル、データレコードをバッファリング　　　　内容は、そのサイズが設定可能な閾値まで増大した時にディスクで永続化　　　　ここのデータを更新しても、ディスクアクセスは発生しない。I/Oコストも軽微・ディスク上のコンポーネント＞メモリにバッファリングされている内容をディスクにフラッシュすることで構築される。ディスク上のコンポーネントは読み取りのみ使用される  　バッファリングされた内容はディスクに永続化され、決して変更されないそのため、操作を単純化して考えることができる。　　＞メモリ上のテーブルに対する書き込み　　＞ディスク、メモリベースのテーブルに対する読み込み　　＞マージとファイルの削除２コンポーネントLSMツリーの実装：・ディスクコンポーネントが一つ：イミュータブルセグメントで構成　Bツリーで構成されている。ノードの使用率１００％で読み取り専用のページを持つ　メモリ上のツリーの内容は部分的にディスクにフラッシュされる　インメモリのサブツリーごとに対応するサブツリーがディスク上に検出され、メモリ上のセグメントとディスク上のサブツリーがマージされた内容が、ディスクの新しいセグメントに書き出される。　サブツリーのフラッシュが終了すると、用済みになったメモリ上のサブツリーと、ディスク上のサブツリーは破棄される。新しくマージしたツリーのみ新たに既存のツリーから検索可能になる。フラッシュの実装時に重要なこと：・フラッシュプロセスが開始されたら、即座に新規書き込みが、新規のメモリ上のツリーに向かうようにする。・サブツリーのフラッシュ中は、ディスク上のサブツリーとフラッシュ中のメモリ上のサブツリー両方読み取りアクセスが可能でなくてはならない。・フラッシュ後は、マージされた内容の公開、マージされなかったディスク上とメモリ上の内容の内容の破棄がアトミックに実行される必要がある。マルチコンポーネントLSMツリーの実装　ディスク上のテーブルを一つだけでなく、複数使用する＞フラッシュによってディスクにできた複数テーブルは、コンパクションによって、マージされる。インメモリテーブル フラッシュ＞定期的起動、サイズ閾値トリガなどで起動可能　・memtableの切り替えが必要＞新規memtableが割り当てられると、そこが新規書き込み先となる　・古いmemtableはフラッシュ中状態に　この2つのステップをアトミックに行う必要あり。  フラッシュ中のmemtalbeは完了まで引き続き読み込み可能　フラッシュ完了後、古いmemtableは破棄される更新と削除：挿入、更新、削除の際に、ディスク上のデータレコードの検索は不要データ削除は述語削除を使用する。＊会計伝票の赤伝、黒伝みたいなもの。マージイテレーション：memtableとディクス上のテーブルのマージ最小ヒープなどの優先度付きキューを使用してマージ調停：更新、削除などで、同じキーに対するデータレコードが異なるテーブルに保持されている場合がある。＞調停および競合の解決 タイムスタンプなどの比較で実現RUM予想：Read, Update, Memoryの各オーバヘッドを考慮に入れる予想これらのオーバヘッドのうち２つを削減すると、必然的に３つめのオーバーヘッドが悪化すると言われている。最適化では、3つの項目のうち、一つを犠牲にした場合のみ可能である理想：メモリと書き込みのオーバヘッドを抑える一方で、最小の読み込みコストを実現する。＞現実には達成不可能でトレードオフが必要。 Bツリー：読み取りに最適化されている　Bツリーに書き込みするには、ディスク上でレコードを検索する必要があり、同じページに対する後続の書き込みでは、ディスク上のページを複数更新しなければならないことがある。　LSMツリー：書き込み時ディスク検索不要　　そのかわり、冗長レコードを格納することで生じるオーバヘッドがある。　　デフォルトでは、読み込みにコストがかかる＞完全な結果を戻すには、複数テーブルのアクセスが必要なためSorted String Table：LSMツリーにおける、ディスク上のテーブルの実装Sorted String Table>SSTable : データレコードはソートされている。・通常インデクスファイル・データファイル:レコードキーが順に保持されるからなる。ブルームフィルタ：LSMツリーにおける読み込みコストは、ディスク上の複数のテーブルを検索するためテーブル検索を避ける方法として、そのキーの範囲をメタdー穢多に保持して、検索対象>のキーがテーブルに含まれているかどうかチェックする際に、ブルームフィルタを使用する>大きなビット配列と複数のハッシュ関数が使用される。スキップリスト：ソート済みのデータをメモリ内に保持する手段として、その単純さで注目されているLSMツリーとSSDは相性の良い組み合わせ：SSDのシーケンシャルなワークロードと、LSMツリーの追記型の書き込みが、同じ場所を上書きすることで発生する書き込み増幅を削減するのに有効。同じ場所上書きは、SSDパフォーマンスに悪影響を及ぼす--------第２部：分散システム８章：基本事項の紹介と概要9章：障害検出heart beat：ping:定期的なpingにおいて、応答が遅延し次のping送信以降に応答がずれ込む＞障害と認知される場合がある。>タイムアウトの慎重な選択に依存１０章：リーダー選出ブリーアルゴリズム：プロセスのランクを使用して新しいリーダーを識別　リーダーが変わる時、もっともランクが高いのが次のリーダー１１章：レプリケーションと一貫性フォールトトレランス：コンポーネントの障害があっても正しく動作し続けられるシステム＞単一障害点をなくし、冗長を持たせる。通常、冗長性はユーザに透過的CAP定理：一貫性(Consistency)、可用性(Availability)、分断耐性(Partition tolerance)のトレードオフについて議論したもの一貫性と分断耐性を備えたシステム：　CPシステムは、一貫性が失われた可能性のあるデータを提供する場合には、リクエストを失敗させる可用性と分断耐性を備えたシステム：　APシステムは、一貫性の条件を緩和し、リクエストに対し、一貫性が失われた可能性があるデータを提供する。一貫性モデル：　線形化可能性　逐次一貫性結果整合性モデル：　今日の多くのデータベース１２章：アンチエントロピーと情報散布ブロードキャスト：一つのプロセスから他の全てのプロセスに通知アンチエントロピー：定期的なpeer-to-peerの情婦交換、ピア同士は互いに接続しメッセージ交換ゴシップ：連携ブロードキャスト：メッセージを受信したプロセスが、ブロードキャストする立場になるブロードキャスト：もっとも単純なアプローチ　ノードが少ない時は十分機能するが、大規模クラスタではコストが高くなる。　一つのプロセスに過度に依存するので、信頼性が低くなる可能性あり。一部の更新が伝播に失敗することを前提とする。エントロピー：　システム内の無秩序さの度合いを表す性質。分散システムの場合＞ノードの状態が異なる程度を表すアンチエントロピー：　初期の配信で障害が発生した場合に、ノードを最新の状態に戻すために使用される。読み取り修復：　更新が欠落しているレプリカに、欠落している更新を送信＞ブロッキング、非同期操作として実装できる。ダイジェスト読み取り：　レプリカ同士でハッシュ値を交換して一致していれば同期していると判断１３章：分散トランザクション２相コミット注意すべき障害点・コミット可否の投票してノードから応答後に、コーディネータがコミッチ送信途中で障害　＞代替ノードがサイド投票してコミットする仕組みが必要・コミット可否の投票をしてノードから応答後に、コーディネータが障害　＞バックアップ用コーディネータを用意３相コミット　双方のタイムアウトが追加　提案、準備、コミットor中断の３ステップ　コーディネータ、ノードの障害があっても先に進むことができる。　コーディネータが障害が起きても、ノードが処理を続行　しかし、ネットワーク分断によって、ノードがタイムアウト後にコミットするものや、コーディネータと通信できずに、タイムアウト後動作中断するものが別れ、スプリットブレインに陥る場合がある＞3相コミットが広く使用されない理由SpannerCalvinデータベースパーティショニングルーティングキーから、ターゲットノードを見つける＞キーのハッシュを計算し、ハッシュ値からノードIDへのマッピングを使用１４章：合意ブロードキャストアトミックブロードキャスト　Virtual Synchrony  Zookeeper Atomic BroadcastPaxosRaftビザンチン合意以上。
2部に分かれていて、前半はストレージエンジンについて。Bツリーを基本とする多種のデータ構造と、それをストレージ上に配置する各種手法について。後半は分散システムについてで、通信から分散トランザクション、合意アルゴリズムについて。それぞれの要素について数多くの種類が説明されていて、基礎知識の無い私からするとデータベースマニアが書いた本という感じを受ける（褒めています）。あらゆる分野で先人の努力があってアルゴリズムが発達してきたことを感じられる素晴らしい本。余談だが、個別の議論については他分野とリンクする部分も多い。たとえばキャッシュに関する議論についてはCPUのデータキャッシュの議論と共通する部分があるし、スパニングツリーはネットワーク分野で標準化されている。こういった内容を狭く深く扱う本があれば読んでみたい（たとえばあらゆる分野のキャッシュを広く論じた「キャッシュ」みたいな本）。
この本の素晴らしい点はすでに挙げられている通り，DBMSというミドルウェアの実装について詳細に踏み込んで解説されている点です．膨大な参考文献をもとに体系的にまとめられている書籍は非常に貴重です．「監訳者まえがき」にある「データベースに関わる方々にとって，これからのスタンダードになるであろう "Database Internals"」という文は誇張ではありません．しかし邦訳本としてはやや難点があります．翻訳が洗練されておらず，翻訳ソフトにかけたような不自然さが残っている箇所が散見されます．例えば・p9: "インデックスのカーディナリティや交点のおおよそのサイズなど" - 原著では交点は intersection size と書かれていました．文脈からは結合操作の上界・下界のようなイメージを受けますが，交点という表現は聞いたことがないです．・p89 など "コンペアアンドスワップの操作を使用して" や "コンペアアンドスワップ命令で" etcいずれも同じ意味を指しているはずですが，言葉が定まりません．・p101 図5-5serializability ではなく serializable ではないでしょうか．これは原著で "The strongest isolation level is serializability" と書かれているので，それに合わせてしまったのかもしれません．しかし，前者は性質で，後者は分離レベルを指しているので，別物と考えたいです．・p105: "二相ロックは、ツーフェーズコミットと名前が似ていますが、"「ツーフェーズロックは，ツーフェーズコミットと〜」，あるいは「二相ロックは，二相コミットと〜」であれば自然に読めますが、訳文はよく分からない文になっています．このように，英文を直訳したまま，読み返さなかったのだろうか？という箇所が散見されます．原著でも「カラムストアとワイドカラムストアは別物だ」と述べていることから察せられるように，言葉の定義が重要な書籍です．原著の内容が難しく，翻訳の難易度が高かったことも察せられるだけに，結果として「予備知識の十分な人は勝手に読み替えて理解できるが，そうでない人は混乱してしまう」ような文章が登場してしまう点が残念です．
本書はデータベースの内部構造や基礎理論にフォーカスした書籍で、O'Reilly の『Database Internals』の邦訳です。タイトルの「データベース」は PostgreSQL 等の RDBMS に限らず、MongoDB や Cassandra などの NoSQL、Google の Spanner やそのクローンに代表される NewSQL / Distributed SQL も含めた、一般にデータベースと呼ばれるものについて言及しています。前半の第一部は一般的に DBMS と呼ばれるソフトウェアのアーキテクチャの説明から始まり、使われているデータ構造(Bツリーなど)とアルゴリズム、トランザクションやログ書き込み、各種ロックの特徴といった、データベースのストレージエンジンで使用されている要素技術の解説があります。後半の第二部は分散システムとはどういうものかといった基本の説明から始まり、分散システムで求められる仕組み(障害検出やリーダー選出、一貫性、合意プロトコルなど)と具体的な分散アルゴリズムについて解説されています。皆さん大好きな(?) Paxos も基本的な解説があります。コンピューターサイエンス寄りの本で、以下のような人は買って損をしないと思います。十年そこらで陳腐化するような内容ではないと思いますので時間をかけても読んでおきたい一冊です。・RDBMS に限らずデータベースの深い仕組みが知りたい・分散データベース／分散システムを利用するために基礎理論を知りたい・タネンバウム先生の分散システム本の内容をもう少し易しく理解したい・情報系の高等教育で学生としてコンピューターサイエンスを学んでいる・仕事や趣味でデータベースを取り扱っているデータの管理や永続化などの理論や分散システムの理論に踏み込んだ日本語の書籍はかなり少ないと思います(最近だと O'Reilly の「データ指向アプリケーションデザイン」くらい？)。データベースの観点からそれらを「日本語で体系立てて」学べるという点で貴重な書籍の一冊でもあります。RDBMS のインデックスのデータ構造にはよくBツリー(B+ツリー)が使用されますが、本書では実際のディスク上にB木のデータ構造をどのように格納すれば効率が良いかといったレイアウトの話、B木の実装で使われるテクニックや最適化手法の話まで細かく理解しやすい記載となっているのは印象的でした。また、後半の分散システムに関してはそれ自体がそもそも難しいと認識していますが、日本語での読みやすさと定訳のバランスに配慮されているように感じました。読みやすさは個人の偏見もあるかもしれませんが、翻訳の一貫性のなさ等は全体を通してあまり無かったようには感じます。個人的には大学時代に輪講でタネンバウム本を初見で読まされた時よりは辛くないと感じました。なお、タイトルからも察せられるように間違ってもデータベース初学者向けの入門書ではありません。教科書的なデータベースの書籍や分散システムの入門書(分散システム(第2版)(未来へつなぐデジタルシリーズ)とか)、イベントやカンファレンスの資料などで、先にある程度の知識の下地を作っておくと読む上での助けになると思われます。また、本書の「はじめに」にも記載がありますが DBMS へのクエリやその最適化は個々のソフトウェアに依存することから本書の対象外になっているため、この辺りは「プログラマのためのSQL」等の書籍や個々のデータベースソフトウェアの資料を参照するのが良いのかなと思います。
書籍冒頭の「監訳者まえがき」と「本書が対象とする範囲」に書かれているとおり、分散データベースにおけるキーテクノロジである、ストレージエンジンと分散トランザクションマネージャについてまとめられた書籍です。翻訳書でありがちな意味不明な訳もほとんどなく、とても読みやすい文章になっています。分散データベースにおけるキーテクノロジについて、1つ先の知識を得たい方におススメします。ただ、注意いただきたいのは、Oracleに代表される「従来型の原則非分散RDBMS」における、直近の仕事に役立つ書籍ではないことです。Oracleに関連する部分の説明はごく限られていますし、この部分についての解説はあまり丁寧ではありません（著者の力点は、「新しいデータベース」特有の技術にある）。
輪読会で３章あたりで（若い方の要望により）邦訳へ一時切り替えたのですが、開始数ページで「管理対象外メモリモデルをもつ言語」といった読解不能な句が出現し、英訳で確認すると、languages with an unmanaged memory model直訳すると「メモリモデルを一意に管理しないような言語」やや文意を補って具体的解釈をすると「ヒープや、スタックといったメモリモデルを自ら alloc と free で構築できる、例えばc/c++ のような言語」です。また、二ページほど進みますと、Most Significant Byte という単語に対し、「最上位バイト」という悪しくも慣習化された翻訳をいまだに使いつづけており、（Big Endian の int の時など「最上位バイトは、最上位でない。」といった矛盾命題を導きます。）直訳すれば、MSB は「最重要バイト」、LSB は「最瑣末バイト」であり、あるいは「最左バイト」「最右バイト」といった良い訳語を吟味し検討するのが、通常のプロの翻訳の仕事ですが、この訳者は全く仕事されておらず、人の手による翻訳の意味がありません。原著はやや文書がくどいですが、（同じことを何度も何度も５、６回は繰り返し、濃度はそれほどないですが）データベース管理プロトコルを考える上で、分散ネットワークを視点に入れた上で技術を抽象化し体系化した書籍は貴重であり、非常に読む価値の高いものだと感じます。追記 : 原著に関してややくどいところから、おかしいと感じていたのですが、文書の練り直し、文書校正などが、十分なレベルにまで施されていません。くどいばかりでなく、例えば英語にしましても、一般的な一流の書き手による英語ですと、「こうあって欲しいものだ」という願望の内容と「実際そうである」現実の内容を区別するには、仮定法などでニュアンスの違いを出すものですが、願望も実際も同じ時制で書かれていたり、本書で著者自ら課した制約を守らないなど、英語の書籍の中では、まともな文書として適切に校正された類のものではありません。例えば、「higher level という言葉は曖昧であるので今後本書では使わない」といった制約は同じページ内で、著者自身により約束が破られています。少し辛口に個人的に求めるレベルの書籍と比較して言いますと、アルゴリズムの説明において適切な例示のもと間接的には十分に説明してはいるものの、直接的説明を行う理論パートにおいて、時制や代名詞の記すところがおかしいなどにはじまり、暗黙の仮定について何も述べていなかったり、実装者にすぎない著者の理解が完成する前に書き連ねられたような文書が見受けられます。つまりはアルゴリズムの噛み砕き方がやや甘く、まとまりのない鸚鵡返しのような文書がところどころ続きます。いくつか知らないアルゴリズムがあり、包括的である点で希少な良い情報源ではありますが、どちらかといえば、分散データベース管理システム情報弱者のための「まとめサイト」といった色合いが強く、アルゴリズムに一応ふれてはいる程度で、名著と比べるとややふんわりしており、書籍としての、校正、整理度合いが物足りません。要点がくどい文書の中に散りばめられており、原著では速読が難しいのが難点です。
原著には目を通していないので翻訳の質には触れない(ただ、明らかに訳者が語彙の定義を把握しておらずまともに読めないのは事実である)本書は一見DBMSや分散DBの技術詳細を扱っているかのように見える書き方をしているが、実際には上っ面をただなぞっているだけである。特定のDBMSの実装の詳細に迫るような書き方ではなく、ただB木の誰でも知っているような仕組みについて解説したり、分散システムではネットワークが寸断されサイトがなんの判断もできなくなることがありますという常識的なことをくどく繰り返してなんか詳しく書いているふうに見せかけているだけであるというか本書の内容は、本書の本来の意図したレベルの内容を必要とする技術者なら「自分でDBMSを設計するとしたらどういう風にするか」「自分で分散システムを設計するとしたらどこに注意するか」を1時間も考えれば自力で全て導出できるようなことしか書かれていないはっきり言ってしまうが記述のレベルがかなり浅い。浅い内容を文体で深そうに見せかけているだけの書籍なので読む価値はあまりないまた、著者独自の哲学や技術思想が書かれているわけでもないので、すでに詳しい人が確認用に読む意味もあまりないと思う図書館で借りて読んだからまだ良かったが実際に購入していたら多分ブチ切れていたと思うレビュータイトルの通り最初からデータ指向アプリケーションデザインを読むか私はあまり読んだことがないが特定のDBMSの実装詳細を克明に記した本を読むほうがいいと思う
扱っているトピックはどれも奥深く、この本を通して深入りできるので、良書です。
Webアプリ開発で学ぶとあるように, APIを実装する中でRustを学ぶことができる。この手の切り口の書籍が増えてくれると, Rust初学者としてもありがたい。ただ, 所々タイポが見受けられるので, そこは注意して読み進める必要がある。- p100  - 誤「1つ目はコードの後半部分にあるcurrenct_user関数と関連する~」  - 正「1つ目はコードの後半部分にあるcreate_user関数と関連する~」- p134  - 誤  ```rust  let todo = repository  .update(  1,  UpdateTodo {  text: Some(text.clone()),  completed: Some(true),  },  .expect("failed update todo.");  ```  - 正  ```rust  let todo = repository  .update(  1,  UpdateTodo {  text: Some(text.clone()),  completed: Some(true),  })  .expect("failed update todo.");  ```
コードの変更点がUnified形式で説明されていたり、入門書にありがちなデザイン調整で無駄に紙面が割かれているところが残念ポイントです。コンテンツはKindle Unlimitedの読み放題タイトルなら良いかな、というレベルでしょうか。ちなみに2022年10月位に出版されたRustとWeb開発本なのでWebAssemblyに触れていることを期待しましたが、まったく触れられていませんでした。
5000時間程度のプログラミング言語経験をもつ人が、効率的に Rust 言語入門して、Rust 言語による Web アプリ開発入門を済ませた状態になるための本。ストイックな章立て・内容となっており、読み進めるのは骨が折れる。一方で Web 開発入門済みになるための必要な様々が詰め込まれた逸品であり、プロ向けの入門書籍となっている。
本の中身については、後日追加したいと思います。タイトルの通り、大きな袋で郵便受けに投函されていました。袋の中でカバーが大きくスライドし、その状態で扱われた為カバーがひしゃげた状態になっていました。破れていないので返品はしませんが、気分のいいものではありません。最近は電子版の購入が殆どのため紙本が新鮮です。この本は、サイズや量が自分好みで読むのが楽しみです。Rustは今の自分のマイブームで何としても身に着けたい言語です。
内容は悪くないけど、どこを編集したらいいのかわかりにくすぎる。絶対ミスタイプしないマンならなんとかできるかもしれないが。
初心者の方がこれを読んでなんとか出来るかは疑問です。いわゆる、「ちゃんとした」入門書です。そういう意味で、Web開発経験がある人がRustを学ぶ際に手に取ると良い本です。ほとんど最速でRustを使う為の最小限セットを学ぶことができます。
C, C++, Python, Ruby on Rails等の経験があります。Rustを勉強するのにちょうどいいと思い購入しました。本書ではトレイトの解説部分周辺で躓きました。おまじないのような処理の説明が一切ないため現時点でわからない＆今後理解できるのか不安になること、処理内容に対する解説がないためどこがどのように処理が進んでいるのか理解できないことなどで苦しく感じました。結局、トレイトはインターネットで調べることになってしまい、本書を買った意味が…となってしまいました。
最終章である6章から急に雑な演習問題が始まる。演習範囲も曖昧。
Excelでもピボットテーブルに特化した本。見やすく持ち運びも手頃な大きさ。ピボットテーブルの扱いは苦手な人が多いがこの本をもとに手を動かせば相当の実力がつくだろう。
ある程度のことはネットで調べればわかりますが本があるとやっぱり便利ですフルカラーで図も多いので解りやすく、ぱらっと見るだけで自分の知らない項目がわかり、知識の幅が広がるのが嬉しいですポケットサイズなので携帯しても、会社に置いていても邪魔にならず持っていると便利です
ピボットテーブルについては、なんとなくでやり進めてきたので、辞書代わりに入手。詰まった時にネットなどでちらっと見た記憶しかなく、いい機会なので一から学びなおしています。基礎的な事がきちんと書かれているので、なるほどと思う事も多くあります。特に、図面あっての説明などは理解しやすいです。業務の延長で、集計や統計なども必要になってきたお年頃なので、すぐ手に届くところに置いています。「できるポケット」系は、読みやすいので色々持っています。この内容だと初心者の方には難しいと思います、ある程度Excelを使いこなしている方向けですね。
マイクロソフトExcelでピポットテーブルを扱うためのハウツー本です。図面付きでわかり易いです。ただしExcel操作やピポットテーブルとは？についての知識が無いと理解は難しいですね。そこらの理解も進んでいない段階なら、よそで知識をつけてから手に取るのが良いでしょう
高校や大学の頃からパソコンの授業は結構この『できる』シリーズだったので使い慣れていてスッと入ってきます。今回は『ポケット』という小さいバージョンであるが問題なし！！ちょっと仕事で使うことが多くなってきたので、再び覚えようと奮闘中です。
昔からピボットテーブルは使っていたが、バージョンが上がり新しい機能を知ることができた。同様の書籍は多数ありますが、オールカラーの割にはお手頃かと思います。書籍の内容については、電話サポートもあるのは驚きです。ポケットサイズなので、仕方ないかもですが、全体的に字は小さいので、老眼には少々つらいです。
エクセルのピボットテーブルの解説書です。こうした書籍はほとんどがそうですが、１ページ目から読んでいくというよりは、自分が知りたい点を辞書のように調べてやり方を確認する、というのが適切な使い方と思います。個人的にはピボットテーブルがあまり得意でないので、その都度必要なことを調べて確認して実務に生かすというパターンです。カラーで見やすく、調べながら学んでいくにはちょうどいい書籍です。
エクセルtを使う際に一番の特徴というべき機能はピボットテーブルだと思うが、意外と使ったことが無い。大抵は簡単な数式、例えばVLOOKUPなどで抽出したりしてしまうのでそこまで作りこむことがない。しかしデータが多くなり、分析の視点が多様になるとそうはいかない。それを可能にするのがピボットテーブルだ。本書を手元に置き、演習用のデータをダウンロードする。結構、いろいろな表があるのでコレラを手本にするのも良いかもしれない。少し勉強した感じでは意外に簡単という印象だ。エクセルのバージョンによっては表示が違った印象を受けるが、実際には必要な項目自体は表示されている。意外とバージョンが変わっても戸惑わないようになっているようだ。ただ、いきなりエクセルを使うように言われてこの本をテキスト代わりにするのはハードルが高いかもしれない。本書の内容は詳細で多くの機能が紹介されているが、初めて使うという視点は省かれている。おそらくマスターブックという通り、ある程度エクセルがわかっている人が事典として使うことを想定しているようだ。というのも実は演習用のデータでわからないことがあって、本書を見ても項目が見つからなかった。単純に新規にピボットテーブルを作るにはどうしたら良いのかという疑問だった。単に初歩的過ぎただけのだが、それにこたえてくれたのは本書ではなく、エクセルのガイダンスだった。しかも動画付きだったのであっさり解決した。本書は盛りだくさんだし、それこそカーソルの使い方まで指示してくれるが、一番簡単なことは書いていない。もっともそれは他の参考書を読むかエクセル自体に応えてももらえば済むという割り切りなのだろう。
Excelで計算や集計統計を行う人は効率的におこなうための参考になると思う。逆にExcelで計算など行わない人にはふーんって思うだけの本になるかも知れません。とりあえずExcel使ったことある人もない人も手にしたら一通り流して見ないとやりたいこと、出来ることが見つからないかも知れません。読んでもわからない人向けなのか？電話サポートついているので、それは良いと思います。
私の職場では時々エクセルが試されるときがある。いちいちスマホで検索していたのだが、そんな時間さえ勿体無いのでマニュアルがあると有り難い。レッスンタイトルとサブタイトルまであるので探しやすい。手順も番号を振ってくれてるから理解しやすい。エクセルを載せてくれてるので名称で分からないときに探しやすい。
junitのテストって、単純な条件分岐なら簡単。でもテスト対象クラスがシステム日付を使っているとか、データベースのデータを使っている場合は、難しくなります。本書は、その難しいケースでテストする方法が解説されています。私はまだ、読んでる途中で理解できてないです。密度の高い本です！
他にJUnitの本があまりないからこれを買う以外ない。しかし5に対応してないのはちょっときつい。まず設定の仕方から違います。いろいろ事前設定の説明がありますが、2022年現在のeclipseなら、別途ダウンロードしなくても最初からJUnitは標準インストールされてます。これで基本的な考え方や使い方を覚えたらネットでJUnit5の情報を集めようと思います。
他のテスト入門（JUnitに関する）等を読んで、疑問に感じていたことがスッキリしました。広範囲且つ、そこそこ細かな所まで書かれているように思います。＃ 始めは、ページ数の割りに値段がトホホホと思っていたのですが、＃ ザックリ最後まで読んでそのような気持ちは飛んでいきました。ただ、要望というか苦言を述べさせて貰えば、他の方も感想で述べられているように、Part'1とPart'2に関しては、文字だけの正確な説明よりも、概念のｲﾒｰｼﾞ図とか、表とかを利用して、文字数を減らして欲しかったです。読むのが辛かった。ＴＴ推薦の言葉で新人エンジニアに渡せる本というのがありましたが、個人的にはナルホドなという感じです。＃ 目次で良さが伝わりません。＃ 疑う人は、本屋で立ち読みして欲しいです。評価は、前半の辛さを思い起こして☆４つにさせて貰いましたが、いい本を買ったと思っています。
他の方のレビューにもありますが、現在のJUnitの最新バージョンは5ですし、何より2012年出版の本なのでライブラリの使い方などはほとんど勉強にならないです。ただし、この本の中で紹介されている考え方や手法は現在も有効な普遍性を持っているものだと感じました。何となくユニットテストを書いてるほうがイケてる気がするから書いてる人は一度読んでみると造詣が深まると思います。（私は今まで書いてきたテストコード達を恥ずかしく思います）ライブラリのAPIこそ大きく変わってしまっていますが、JUnitに限ってはバージョン4と5の移行についてわかりやすく公式ドキュメントにまとまっているので、そこまで読み替えに時間はかからないと思います。
テストの自動化。Javaを使っているならJUnitで決まりでしょう。この一冊があればJUnitを網羅できます。今は大学に通っててそこまでテストコードを書くことはありませんが、その数回のテストコードを書く体験だけで楽さが体験できました。システム開発はプログラムを書き動かすだけではありません。テストが一番大事です。
教育で利用するのに最適。JMockitについての記載があればなお良かった。
単に、「テストコードをこう書くとこうなる。」といった書き方ではなく、「こういう状況のときにこういう目的で、この機能を使うことができます。こういう手順でテストコードを作成します。」といった書き方がされているので、読んだ後に「機能はわかったけど何に使うんだろう」という疑問に悩まされることがありません。JUnit4.10について書かれており、情報の鮮度についても問題ないと思います。また、JUnit4だけでなくテスト駆動開発、コードカバレッジ、Jenkins、Maven、Android開発などJUnit周辺のことについても書かれています。テストが難しい問題については、逃げずに「難しい」と書いてある点もよいと思います。GUIについてはAndroid開発に含めて書かれておりJavaFXなどは出てきませんが、JDK6の環境について書かれているのでやむを得ないかなとは思います。もう一点難をいえば、マルチスレッドプログラミングについては練習問題が1題あるだけで、一番間違いが起きやすく、かつ気づきにくい、クラスがスレッドセーフかどうかをテストする方法については言及がありませんでした。しかし、自分の使用する範囲では十分な内容であったので星は5つとします。
Androidアプリ開発のため、しばらくネットの記事を頼りに自己流でJUnitを活用してきましたが、基礎から体系的に学びたいと思い本書を購入して通読しました。JUnitに関して十分な内容が記載されており、またAndroidに関するトピックも含まれているため、個人的には満足な内容です。
JUnitを学ぼうと思っても、最新の情報がまとまった本というのはなかなかありませんでした。(あったとしても2006年とか2004年とかに刊行された少し古い本ばかり)それがようやく解消された1冊と言っても過言ではないかもしれません。むしろそれだけでも十二分に価値があると思います。JUnit4.10とEclipseを使ってわかりやすく書かれています。間、少し冗長だなぁと感じる部分もなくはなかったですが、全体的にとても読みやすくJUnitを勉強するには最適ではと思いました。和田卓人さんが書かれている、推薦の言葉もAmazonのプレビューで見れるので、購入を迷っている方はそちらも読んでみるといいかと思います。
この本に書かれているのはJUnit4についてである。JUnit5はJUnit4に似ても似つかない。改定されてから買った方がよい。
購入してかじり読みして、そのままにしていましたが、全部読み、本のまま、全てを再現してみたらとてもよくわかりました！他の本でイマイチな理解でしたが、オススメです。作者のPHP版も買って試したいと思いました。
初心者でも読みやすいと思うただ、深い内容は少ないのでもう1冊は必要。mac使用してるので少し足りないところありでした！
PHPのプログラミングを独習するにあたり、PHPの初心者本ではMySQLの仕組みや命令の書き方に関する解説が十分でなかったため購入しました。他の方のレビューでは「PHPに関する解説部分は不要だった」というコメントもありますが、確かにPHPの初歩部分にあたる解説にそれなりのページ数が割かれています。それは裏を返せばPHP学習のビギナーにはありがたいことで、しかも他のPHPの超初心者本にもなかなか載っていない、素人のつまずきやすい疑問点のフォローもあったりして、大変助かりました。読み進める中で、「あれ?これ何だっけ?」という疑問が発生した時、サッと振り返ることができるよう、前後の関連する解説に行き来することのできるページ参照も充実していて、そんな丁寧な心配りも嬉しい本です。
漠然と、自分の本やCDのデータベースを作って、友達にも公開したいと思っていた。将来は、レンタルサーバーに入れ、スマホアプリでどこでも検索できるように…まずは、無料のデータベースの準備で購入した。まったく初心者の私でも、この本だけでMySQLでデータベースは作れデータ入力できた。MySQLの初歩はとても分かりやすかったです。この本はMySQLに重点を置いたほんなので仕方ないですがPHPの説明はさわりだけでした。次はPHPで初心者向けで詳しい本を探しています。その後にスマホアプリを....
Ｋｉｎｄｌｅ版購入、書籍版と同じなので見にくい、つかいずらい。
## 概要MySQLの入門書となっている。書籍の内容は，2/3がMySQLのSQLの解説で，残りはPHPやPHPとの連携の解説をしている。MySQLはとても広く使われているRDBMSなので，それを基礎から解説しているのはよかった。ただし，こちらが想定していたものとちょっと違った。こちらはRDBMSでは設定ファイルだとか，付属するコマンドだとかが結構あって，そこがよくわからなくて困っていた。この本では， *MySQLのSQL* はかなり丁寧に詳しく解説しているのだが，MySQLの設定などについてはほとんど説明がない。SQLを実行するための最小限の設定の説明しかない。SQLを勉強したいという場合はよいかもしれないが，自分のようにMySQLの設定を知りたいという目的にはあまり参考にならなかった。また，丁寧に解説しているのはいいのだが，ひたすらSQLの説明だけあって，ちょっと味気ない。目的があって，こういうSQLはこういうときに使うのがいいとか，そういう実際の使われ方や事例も盛り込んでくれないと，イメージが付かないので退屈だ。## まとめMySQLのSQLをかなり丁寧に解説している。RDBMS初めてでSQLの勉強をする場合，役に立つと思う。ただし，MySQLの設定とか実際にどう使っていくのかについては物足りないので，別の本が必要になると感じた。パーマリンク: <https://senooken.jp/blog/2018/07/16>
「基礎から」には必要十分です。ページごとの情報量が適度なので、読みやすいです。細かい・深いところまで網羅した情報が欲しいなら別の本を。気になったエラー：本ではMAMPで設定した環境を前提にしていますが、自前で用意した環境だと MySQL のバージョンの違いで、サンプルコードが正しく動きません。出会ったのは「GROUP」のコード。MySQL の設定「ONLY_FULL_GROUP_BY」の有効・無効が MySQL バージョンによってデフォルトが異なるため、エラーに。設定方法は Google などで検索を。
社内の技術研修講師をやってます。この本を題材にやりましたが、タイトルのようにやたらとALTER TABLE文が多い実際実務でDB使用のプログラマであればALTER文はほとんど使わない。DB管理者でDBの構造変更も行う立場でもなければALTER TABLE文に遭遇することはない（DB管理者を過去やってました）。なぜかこの本にはALTER　TABLE文が鬼のように出てくる。講師として「あんまり(ALTER文は)使わないけどね」と苦笑いしながら講義してました。また、例えばストアドプロシージャ、ファンクションの内容もコード1行程度でとても実務レベルでの内容ではない。SELECTで結果セットからfetchして中身を取り出してまとめてreturnするような本格的な例題を書いてもらいたい。講師を困らせる中途半端な内容でした。次回は違う教材にします。
SQL の部分はいいけど、自分にはPHPは不要でした。結構ページ数があり、これ入れるなら薄くして安くして欲しかった。もしくはpythonが良かった。
初心者目線で書かれていて親切な文章でした。個人的に気に入った点は章末の練習問題で、結構考えさせられる問題が多いです。ただ注意点としては、一部注釈などはありますが基本的にWindowsを対象に書かれている点です。Macをお使いの方は、mysqlのパスの設定や、設定ファイルの違い（WindosOSはmy.iniだがmacOSはmy.cnf）等を別途調べる必要があると思います。巻末ではこれまで学習してきた内容を使って、掲示板を作成します。ハンズオン形式で学べるため理解しやすかったです。
「PHP本格入門」という書籍の後に挑戦しましたが、Laravel Sail の環境構築で躓きました。laravel.test Errorと表示され、sail upできませんでした。検索しても解決しないので、この機会にDockerから学ぶことに。Dockerの入門書をじっくり進め、ようやく解決。ゴリゴリ書きながら吸収しています。初学者には難しいですが、つまづいても焦らず理解できてない部分を基本まで立ち返りながら進めることで着実に力をつけてくれる一冊でした。ただ誤植が散見されるので、PHPに関する最低限の知識がないと厳しいと思います。
初学者向けであると書いていないのでもちろん初学者向けではないのだがLaravelを勉強する上で持っておくべき一冊であると思っています中級上級者向け
どういう問題に対して、どういう観点でどういう解決をするという説明があまりなく、何々するにはこう書きます。という風にいきなり手段についての記述がはじまり、背景や文脈の理解に難儀し置いてけぼり感を感じる箇所が多いです。また説明されている機能を実際に動かして結果をみせる記述も少ないので、ソースと睨めっこしながら、とにかく自分で動かしてみる必要がありますが、分量も500ページ以上あるので全てを読もうとするとかなりしんどい。複数の著者による共著のせいか書き方やネーミングに一貫性がなかったり...Laravel をある程度理解している人の知識の補完や調査をする時のインデックスとして使うのには良いかもしれません。Laravel を使って何ができるのか、そのために何を調べればよいのかといった際の参考にはなると思います。
最高です。php初心者ですが、内容が激ムズです。しかもページ数500越え。ですが、これだけマスターすればかなりレベルアップします。悲鳴をあげて本気で取り組んでいます。内容はとても濃いのでおすすめです。皆さんも一緒に頑張りましょう。
初心者は買うべきではない。検索が出来ず、目次(Contents)や索引(Index)も充実していないので、必要な情報になかなか当たらない。書いてあることに使えるものがありそうだが、体系的にあまり書かれていないので、何か問題があった時に目次から該当しそうな箇所を読んで、必要な情報が拾えればいいかなという印象。
まず、この本はlaravelの入門書ではないです。環境構築こそ丁寧に教えてもらえますが、テンプレートの書き方とかそもそも載っていません。なので実務でlaravelを使ったことがあったり、他のMVCフレームワークを知ってる人向けになるかと思います。それを踏まえると、ADRの概念やアーキテクチャ設計、はたまたテスト駆動開発など、一歩踏み込んだ内容が折り込まれているので、とても参考になります。ちょっと誤植が多めなのが気になりますが、laravelを使った開発としては参考になるものは多かったと思います。
とりあえず以前の版も含めてすべて買ってきていますが、良くも悪くも変わらないなと思います。PHPの基礎は学んでいてフレームワークは初めて触る、と言うような人だとちょっと難しめに感じるかも。細かいところの説明が足りてないというか、分かってるよね的な文章はあります（すべてを一から説明すると1000ページくらいになっちゃうので仕方ないと思いますけどね）。逆にCakePHPなど他のフレームワークはある程度触ったことあるけど、Laravelは初めて触るみたいな人にはすごく良い本です。Chapter9の「テスト」以降の章は実践的な手法が数多く記載されていて、すごく読み応えがあります。残念なのは、次のバージョン9がLTSなので、できればLTSでの出版だと嬉しかったな、とは思いました。バージョン9のリリースが延び延びなので、苦しかったのかもしれませんが。あとは、Laravel本体のみにフォーカスが当たってて、JetstreamやLivewireみたいなLaravelと組み合わせて使う優秀なライブラリに関する内容がほとんど触れられてないところも残念でした。まぁ、あれもこれもになっちゃうし取扱も難しいとは思うのですが、Laravelもリリースされて10年が経ち良くも悪くも熟成していると思うので、なんかオッと思わせるようなスパイス的な内容があると嬉しかったなぁ、とは思いました。
「Webアプリケーション開発 」とタイトルに入っていますが、内容はかなりいい加減なのでいくつかの点を指摘しておきます。・基本的なことが説明されていないDBとの接続設定や初期画面の表示、リダイレクトなどフレームワークを利用する上で必須となる事項の説明がありません。本書の内容ではサンプルを確認する以外のことはできないと考えてください。・環境構築開発を進める上で、読者としては本書の内容をすぐにでも確認したいはずなので、実行環境はなるべく容易にしておくべきですが、、、なぜかDockerとHomesteadでの構築となっています。両方に関して説明が不足しています。このままでは確認できないでしょう。以降の説明ではDockerでの環境で進められており、Homesteadのほうは放置されています。Homesteadを使わないのならDokcerの説明を充実されるべきでしょう。DockerでLaravelの環境を構築する場合、composerのメモリ不足が起きやすいですが、この点に関しても何も言及されていません。環境構築ができないままの読者も多いのではないでしょうか？・リファクタ最初に簡単なサンプルを作成して、その後でデザインパターンでのリファクタ、という流れの説明です。これはいいとしてもリファクタ後のクラスではコントラクタに引数が必要なコードになっています。つまりコントローラーからの呼び出しからコードを変更しなければならないはずですが、その点に関しても説明は一切ありません。サンプルコードを見て読者が判断するということでしょうか？最後まで説明してない時点で解説書とは言えないでしょう。他の本の併用が必要です。
版が違いますが、これも含めてテキストでなく画像取り込みというキチガイ書籍検索かけられない技術書とかゴミでしかございません
今年のノーベル賞受賞で話題となるのであろう気象予測、地震予測、経済／金融市場などの諸分野における予想の現状のまとめといった趣の本。ベイズ推定の有用性も取り上げられているが、特に立ち入った説明があるわけではない。具体的な推定法を期待して読む本ではなく、あくまで諸分野の推定に関するステータスを知りたい人向きと思われます。
筆者は野球や選挙の予測において実績を評価され、第一線で活躍している実務者です。予測とは難しい理論の話になりそうですが、本書は具体的な社会事象をベースに、予測がどのようなケースで有効/無効になるかを論じています。また、実際に予測者としてどのような原則でいるべきか、という姿勢についても言及されています。このような切り口の書籍は他になく、貴重な一冊といえます。
はやりのデータ科学に関する書として面白いとの書評があって購入、提灯記事の類ではなく、データ分析のできることできないことを書いた本。ただ何かを学ぶ書物ではない。また同じようなことを繰り返し書いているので冗長な気がする
色んな発見がある本です。投資に役に立つかなと思って最初は読んでましたが、途中から雑学の本だと思って読んでました。面白い知識などありますし、表紙がなかなかおしゃれなので仕事の休憩中などに読んで周りと差をつけましょう。一応勉強？になるのでニートの方でも読んでる時はニートとは呼ばないでしょう。
ビッグデータとか統計とかがブームです。おかげで私は会社の片隅でメシが食えています。が、どうも世間の方々は「すげえ技術を放り込めばコンピュータとかデータサイエンティストが勝手に疑いようのない正解を見つけ出してくれるはず」と思っているようです。いや、統計はその候補をわかりやすく表現するための手段であって、何が正解かはヒトが判断しなきゃならないんですよ。分析方法にしても人の目は捨てたもんじゃないし、それをコンピュータとうまく組み合わせる方法がないだけなんですよ。というある意味「当たり前」のことを、現代トップクラスのデータ分析屋さんが説得力をもって示してくれる本です。数式もプログラムもないけど、データ分析の本質の部分については丁寧に説明してくれています。ビッグデータへの夢を捨てるために読むもよし、夢を実現するために読むもよし。今のブームを使って一儲けしようという方にだけは、おすすめしません。
第一線で活躍している人の言葉でなるほどと思うことや新鮮味がある。それでいて嫌な重みがない。なお、数式はほぼないのでデータを扱う人の概念を知るための本と言える。
2004年の出版本ですが、カバーにも半透明のカバーがされており綺麗で気持ち良く読めました。
統計学の本のカテゴリとして読んでいる人が多いが、期を熟して著者が出した社会批判書である。本書の内容でベストセラーとなるのは、機を見て出されたことであろう。目論見があり、実際に売れて社会的な本として内容を1人でも多くの人の目に触れさせたのはさすが。解決策の無い社会問題が多いのに、ノイズが所狭しに増え続けている世の中で人として頑張って抵抗しましょうという感じ。
現代の社会には情報があふれすぎていて、「増え続ける情報に理解が追い付かない」（序章）。情報には「シグナル」という真実だけでなく、「ノイズ」も含まれている。データからパターンを読み取ることは簡単でも、それがノイズなのかシグナルなのかを区別することは難しい。本書全体を通じて著者が強調する点はこれに尽きる（まさに本のタイトルがこのことを示している）。ノイズが予測を難しくするのである。第4章では予測の成功例として「天気予報」をテーマに選んでいる。これはとても面白い。なぜなら、たいていの人は「天気予報なんか当てにならない」というイメージを抱いているだろうからだ。天気予報について書かれた多くの本と同じように、天気予報の難しさは天気が基本的に「カオス」であることが本書でも説明されている。それでも、コンピュータの処理能力が上がったおかげで天気予報の精度は著しく高まった。ただし、コンピュータの予測に「人間の判断」が組み合わさって良い天気予報になることを著者は強調している。文脈を無視した単純なモデルはあまり役に立たないようだ（「オッカムの剃刀」をやみくもに信奉してはならない）。気象学者と対照的に「予測を外す」のがエコノミストらしい（6章）。彼らの経済予測は当てずっぽうよりも精度が悪い。経済学者は「正しい予測をすることにインセンティブを持っていない」という著者の皮肉（？）は、ひょっとしたら正しいかもしれない。成功する予測者は「疑う余地のない理論、寸分の狂いのない測定といった観点から将来を考えない。これらは愚か者の幻想であり、自信過剰警報となる」（8章）。そして、「多くのエコノミストは、予測の精度を高めるために必要不可欠であるこの努力を怠り、自信過剰のバイアスを修正してこなかった」となかなか手厳しい。情報を知識に変えながら、物事を上手に予測するためにはどうすればよいのか？まず著者が強調するのは、現実に存在している不確実性を受け入れて、確率論的に考えることが大切だということだ。人は不確実性を嫌うので、これは口で言うほど簡単ではない。けれども、確実に将来を予測することはできない。そのような予測は自信過剰であるか、あるいは過剰適合に過ぎない。良い予測とは幅を持って示されるものである。また、「見たい物を見る」という人間の習性も予測の妨げになる。個人のバイアスを超えて物事を見ることが必要だ。そのためには、予測を常に検証して、その結果から予測を更新するというトライアル・アンド・エラーの姿勢が必要となる。これは「ベイズの定理」を使って物事を見るということだ。検証・更新を繰り返すほど、予測は正しくなっていく。「絶対確実」ではないからといって、予測が役に立たないというわけでは決してない。また、気象予測のように、昔と比べて精度が格段に向上してきた分野もある。他方で、社会には怪しげな――けれども自信たっぷりな「予測」にあふれている。予測そのものがノイズということである。そんな状況の中で、本書は情報を知識に変えるための有益な視点を提供してくれている。大部で少し怯むかもしれないけれど、ぜひ多くの人に読んでもらいたい一冊だ。
この本には、世の中に混在するデータからノイズを取り除き、シグナルの真の姿を見るために必要な手法や考え方が書かれている。世の中のデータには多くのノイズが含まれており、分析する際にそれらを除去しなければ正しい結果を得ることができない。そのために、統計学では様々な手法を用いて、ノイズを除去していく。それらの実例を身近な社会現象を題材にして書かれている。さらに、ベイズ統計学についても書かれており、普段の生活で私たちが自然と使っている考え方は、実はベイズ統計学に基づいたものであるということを気付かせてくれる。この本を読むことで、ニュースや現象の見方が変わるだろう。因果関係やノイズ, 疑似相関に騙されることなく様々な現象を観察できるようになる。また、翻訳本特有の日本語のニュアンスが変な箇所や、読みにくい文章が非常に少なく、本の内容に加えて読みやすさの点でも非常に満足できる買い物であった。
5.6から5.7へアップデートする機会があったので読んでみました。5.7で新規追加された機能だけではなくMySQLアーキテクチャそのものに関しても詳しく説明がされていて大変参考になりました。初級者の方には少し難しい内容ですので、ある程度クエリチューニングなどのデータベース運用経験を積んでから読んだ方が良さそうです。
MYSQL=クエリを書くとデータが返ってくるブラックボックスという認識から少し理解を深めたくて購入してみました。辞書感強めなので気になる項目をサラッと読んで、動かし、分からない事に当たったら又読む　程度の使い方で良いかも。全体的に図が少ないので理解するには自助努力必須な気がしますが、きっかけとしては丁度良い。
dbのアーキテクチャについて詳細に書かれた良書。めちゃくちゃ良い。awsの試験でinnodbが出てきたので、なんだっけ？と思い購入。めちゃくちゃ勉強になった
仕事でMySQLはよく使うので買いました。著者のブログはよく参考にしていたので、内容は想像通り充実していました
表紙に「どれだけ詳しいの！？」とある通り、MySQL 5.7で更新された箇所について網羅的かつ詳細に解説されています。文体がやや特徴的ではありますが、図や実例を多用して詳細な動作について行われている解説には説得力があります。当然のことながら、入門書ではなく既にMySQLの運用や利用経験があることが前提です。更新差分を説明する過程で過去のバージョンの動作を解説されていることもあり、5.6以前を利用中で当面バージョンアップをする予定がない場合も過去バージョンについての動作の詳細を理解することができる点で有用です。難点は、本書を読むと解説されている改良点が施されたバージョンではない現行バージョンが見劣りしてくることでしょうか。
読者の対象はMySQLをこれまである程度使いこなしてきてる人向けで、まったくMySQLに触れたことがないという人はまず別の本で基礎を学んでからでしょう。私は数年前までゲーム業界にいて、MySQL5.1あたりで深く利用するようになってました。かなりのアクセス数があり、レプリケーションだのパーティショニングだの色々苦労していたのですが、当時は結構手探りで場当たり的にやっていたように思います。MySQLも5.7になってかなり進化していて、この本を読んで当時の苦労もわりと簡単に対応できそうな気がしました。MySQLを使い込みたい人にはお勧めの1冊です。
これでもか、というくらい詳細に説明がなされています。結構5.6から仕様の変更があるので5.7に乗り換えるときにとても重宝してます。奥野さんの本はハズレがなく安心して買えます。
MySQL5.7の新機能について説明してある本です内容は簡単ではなく、読んでいて楽しい本とも言い難いですが今後もMySQLサーバを使ってサービスを提供しようとする技術者は読まなければいけない本です
まだ全部を読破してはいませんが、とても詳しく書いてあって良かったと思います。
## 概要MySQL 5.7の新機能を解説するためだけの本となっている。普通ソフトウェアの特定バージョンの機能にだけ特化した解説本など存在しない。しかし，MySQLに関しては5.6から5.7のバージョンアップで，大幅な機能改善が行われている。そのため，新機能や改善内容だけで一冊の本が成立するほどの，ボリュームとなっている。このあたりが，MySQLというソフトウェアの重要性，規模感を伺うことができる。当然ながら，MySQLの基本については知っており，既にある程度使っている人を対象としている。どんなものかと興味本位で手にとって読んでみたが，MySQLを触りたての自分には *はっきりいってまだ早すぎた* 。MySQL 5.7の新機能の解説では，レプリケーションや空間インデックス，JSONに興味を持った。特に，空間インデックスは従来はPostgreSQL (PostGIS) くらいしか対応しているDBがなく，この点がPostgreSQLの優位性でもあった。MySQLでもこれが導入されたので，今後のDBの選択肢が広がった。## まとめMySQL 5.7の新機能を解説しており，中上級者向けの本となっている。内容が詳しくてわかりやすく，図表も適宜配置され，著者の文体が自分には読みやすかったので，本として良かった。MySQLの理解が深まり，MySQL 5.7について知りたくなった場合，再読したい。パーマリンク: <https://senooken.jp/blog/2018/08/06>
スッキリわかるシリーズは説明が分かり易く、演習問題も豊富で良い。本書は問題演習のためのデータベースを用意してくれているのだが、データベースの中身が貧弱でSQLを触っている実感が湧きにくいのが少し残念。例えば注文履歴のテーブルに3つしかデータがなかったり、社員のテーブルに社員が2人しかいなかったりする。指示通りにSQL文を書くと出力結果がNULLになることもしばしば。ここさえ改善されれば文句なしの★5。最近新版が出たらしいが、そちらはデータベースも改訂されているのだろうか？
間違って購入してしまい買い直しました (ToT)重版や改訂版は最新版を掲載して欲しい、せめてKindle版だけでも。。
新人さんの教育に良いかと思いました。練習問題が多めなのもいいかと思います。
実用的な基本を学ぶことができます。
すぐに届いてよかったです
私は初学者ですが、説明は分かりやすくて、章ごとの練習問題もためになるものが多かったです。ただ、最後の練習ドリルの解答に誤りが多いと感じました。まだ途中ですが問い合わせをして既に4つ誤記が見つかりました。しかもしばらくたっても解答のPDFは修正されていないようです。
SQLについて、ほぼ知識のない状態で購入しました。しかし、SQLがどんなものか、という地点から始まり、読み終わる頃には複雑なものでなければ、ある程度SQLの読み書きができるようになると感じました。最後の方にドリルなどがついていますが、結構歯ごたえのある難易度です。dokoQLについては使いにくいなどの声もありますが、おまけ程度に考えている自分としてはそこまで不満はなかったです。その他気になった点は①kindle版は固定レイアウトのため、ハイライトやメモが使えない。②ドリルの回答が本書中で回収されない。回答は特典としてDLできるがちょっと面倒。③ドリルの回答に解説がないため、問題によっては不親切な印象。くらいでしょうか。特に①に関しては、現物であれば解決できる問題なのでこれから購入する方は、書籍での購入をお勧めします。
この本はSQL基礎について十分な知識を書かれていて理解することができます。悪いところは何もありません。ただ、知識を得るための本でしかありません。SQLというものはXAMPPというものを利用して無料のMySQLというデータベースサービスで実際に手を動かして理解するしかありません。いきなりデータベースを利用するのが怖い初学者には、YouTubeやUdemyの人気講師を検索して見つけてPHP,SQLの動きのコツをつかみ、さらに理解するために本書を読むことをお勧めします。
他の人がおっしゃるように説明は確かにとてもわかりやすいです。PHPとmySQLを用いてサイト製作を学校の課題で貸されたときに、PHPの知識はあまり自信がなかったのですがある程度はこの本で得たSQLの知識で補えました。このシリーズのjavaも読んでいるのですが、javaの本も、この本も、全体的に練習問題の問題文は意図がわからない部分がいくつかあり、解いてる段階で、どうコードを書いていいのかわからなかったことが度々ありました。また、海外からはdocosqlはVPNなしでは見られなかったので、そこは少し不便だと感じました。それ以外の点は大変満足だったので星4つとさせて頂きました。
とにかく分かりやすいです。Dokoqlに不具合があると投稿されている方がいるようですが、これはブラウザ対応に起因する問題だと思われます。私の場合、IEでは正常に使用できましたが、chromeでは他の方と同様の不具合が発生しました。古いwebアプリがchromeに対応してない場合がある、というのはITエンジニアにとっては常識です。
至って普通のドリルです。市販品なんで普通で当たり前。
とてもよくまとまっています　これに従ってやっていくと力が付きます良いと思います
テキストと一緒に使うと分かり易い
とにかく練習して使いこなすのには良いです。ただごく基礎の問題は解答必要ない方もいるレベルではあるかもしれませんが、解答くらいダウンロードだけでなくて、載せておいてくれてもいいのになとは思いました。確認してチェックをするにはPDFより印刷されている方が便利です。印刷すると66ページになるので…
学生時代に教科書で流れに沿ってやるだけで過ごしてきた為、仕事に実際に使おうとした所、あれ？なんだっけ？っとなっていたのでこちらのドリルを購入しました。この本は、基礎＞応用＞ドリル　と進むみたいですが、私はドリルだけ買いました。ドリルにはこの問題は基礎の〇Pみると書いてあるよーや応用〇Pにあるよーと書いてあるのでそこは見れなくて残念でしたが、問題だけ読んで記憶を読み戻しながら、わからなければネットで調べれるという使い方をしました。通常の教科書だけだと読めば「あーそうそう。」と思うだけになってしまいがちですが、ドリルで問題をやる事により、自分のスキルとして、ちゃんと身に着けた気がします。基礎・応用が頭にあって、忘れているだけならドリルだけでもいい気がします。（値段も高くないですし）
分かりやすく復習に最適です。
Excelの資格を取りました→これから就職します！という方が入職前にExcelを用いて実務の練習をしたいと思ったときに活用できるテキストではないかと思います。後半の応用編はけっこう難問が揃っているのでExcel好きなチャレンジャーにもオススメ。
他人が作ったコードを読み解くのに、ネット検索と併用して使っています。記号などでピンポイントで索引があるので痒いところに手が届くと思います。普通に頭から読むだけでも基本は身につくと思います。
過不足なくまとまっているよい本である。リファレンスブックの中には、コマンドをこれでもかと羅列してあるだけで、無駄に分厚く見ただけで読む気が失せるようなものがあるが、この書籍は無駄な部分が省かれており実践的な知識を効率よく得ることができる。過去にLPIC Level 3に合格し、業務でもLinuxサーバーの管理に携わっていたが、いまだにちょくちょく参照している。初心者から上級者まで、幅広い層の方にとって有益な内容である。
要点が非常に簡潔に記載されており、例として記載されているコードもそのまま使えます。少し調べたい時に重宝しています。良書です。
著者の経験が簡潔にまとめられた良書だと思います。大変参考になりました。
しばらくB Shellのコーディングから離れていたので、基礎を思い出すのには便利です
今まで訳も分からずにコマンドラインでの作業を行ってきましたが、この本のおかげでシェルの基本的な理解が進みました。普段あまり使わないコマンドや特殊パラメータの使い方も紹介されていて、非常に役に立っています。
リファレンスというタイトル通り、シェルコマンドの「辞書」です。最初から順を追って読んでいくような本ではありません。ものすごく基本的なコマンドの説明が後半に掲載されている一方で、その基本的なコマンドの理解を前提とした説明が前半部分に掲載されています。知らないコマンド、理解の浅いコマンドを調べたい時に利用できますが、ネットで調べた方が早いと思います。また、サンプルコードは、そのまま写経しても動作しないものがあります。インターネットを利用できる環境の人(ほぼ全ての現代人)にとっては、役に立たない本だと思います。
Book delivery early than expected. No damage and tear. Thanks!
業務で仕方なくOracleのPL/SQLを使用するときがあるので購入しました。　OracleのPL/SQLということで対して情報もなく、あっても読みにくい中、この本は網羅的に書かれておりおすすめできます。　お金のためにいやいやOraclePL/SQL書いている人もこの本を購入してさっさと仕事終わらせて、好きな言語を勉強しましょう！
他者のkindle版を酷評するレビューがありますが、悪質なコメントだと思います。本書が推奨する学習法は、無料のOracle試用版をダウンロードして、実際に入力しながら読み進める構成となっています。それは本書の表紙にも記載の通り、「現場主義」にマッチする内容です。確かに読書感覚で小さな画面の端末で読めば文字が擦り切れるのかもしれません。しかし、実際に入力しながらであればPC画面に表示することになるでしょう。内容的にも良書だと思います。
下記評価を修正します。キンドルHD10なら読めます。やはり書籍をPDF化したものはHD10程度大きいものが必要だと思います。内容は良いものでした。———————————————————————-本の内容でなく手抜きのkindle版で全くダメな代物である。そもそも本の内容は読めないのでコメントできない。これはkindleではない。悪質な自炊本をkindle本として売っているだけなのである。字が細かくかすれている。拡大すれば下が切れてしまう。お金を返していただきたいと思うくらいで最悪である。
内容的には良くかけており、例も良くとても助かってる。みんなも同じものを持っていた。
実業務レベルではないのですが、基本的な構文や処理をマスターする目的で使っていました。
PL/SQL初心者が読んでも安心の一冊です。すらすら読ませる構成で、実際に書きながら学習をすすめることができました。
まず、最低限SQLが書けることが前提で書かれています。主観としては「Oracle Silver DBA」程度の知識があるといちいちネットで調べなくとも本のみでスムーズに理解できると思います。上記のように事前知識がある程度必要ですが、その分無駄なく必要なことをきっちり書いてあり非常に読みやすかったです。私自身、PL/SQLの学習はほぼ初めてでしたが途中で詰まることなく各プログラムの動きを理解することができました。第13章以降にはパフォーマンス向上、ユーティリティパッケージの利用、権限についてなど、より業務に近い内容についても触れています。また、コラムや巻末の内容には11g、12cで追加された内容についての記述もあり、PL/SQLをより便利orセキュアに利用する内容となっています。題名通り、「入門」にはぴったりの本だと感じました。
仕事で初めてPL/SQLを使った開発に携わることになり、この本を買いました。今までSQLは多少描いていましたが、PL/SQLは初心者でした。始めは難しそうだなと思っていましたが、実際に読み始めると良い意味で予想をはるかに裏切ってくれました。一つ一つの章の説明がわかりやすく、サンプルを実際に実行して基礎を身に着けることができました。この本を読めば、後は調べるだけで何とか実務でもPL/SQLがかけるようになります。
図で説明していてわかりやすいです。少しずつですが勉強しています。
NFTって聞くんだけどいまひとつわからない。NFTとイーサリアムなどの仮想通貨の関係ってなに？みたいなレベルだったんだけど、本書でおおむねそのあたりは整理・理解できた。実装など技術的にもうちょっと知りたいところはあるけれど、そこは別枠でなんとかなりそうという印象にまではなったので、そういう意味では内容は十分満足のレベル。
フルカラーではありませんが、豊富な図解で初心者にわかりやすくまとまっています。とりあえず仕組みを理解したいという人にぴったりです。勉強になりました。
デジタル化やグローバル化と言われても、なかなか技術の進歩についていくことが難しいのが現状ですが、　NFTとはなんだろう、イメージがわからない、などという人にも入りやすい教本です。NFTを体系的に学ぶことができ、技術のしくみや課題、各業界のモデルケースなど、豊富な図解で解説されています。キーワードから探せる点も使いやすいです。
ちまたで話題のNFTの仕組みを知る、最初の一冊として適しています✪暗号資産との違いやマネーロンダリングの予防など知っておいて損はない？
NFTに興味がありましたが、知識がほぼゼロでしたので本書を読んでみました。今までNFTについては何となくしかわかっていなかったですが、NFTだけでなくこれからも広がっていくであろうデジタルの世界観がぼんやりと理解できました。図が多く説明が理解しやすかったです。数多くのシリーズがあるので、興味のある分野があったらまた読んでみようと思いました。
NFTの仕組みをわかりやすく説明した本です。図解しているので読みやすいです。
名前の通り図が多くNFTについて全く知らなかった自分ですが、この本を読んで大体のことを把握することができました基礎から書いてあるので私のような全く知識がないといった方にもおすすめします
ある程度NFTを知っている人には間違いなく物足りないが、全く知らない人がとっかかりとして読むにはとても読みやすい。　図も多いし、途中に実際にNFTに触れることのできるサイトの紹介もあるので実用的です。
わかりやすいのでいい勉強になります
「ポケット」と冠していますが実物を目にしてポケットに入れようと思う人はまず居ないでしょう。それなりに大きく、割と厚く、かなり重いです。実作業の傍ら、いつでもさっと手を伸ばせる所にあると捗ると思います。各命令ごとに一目でわかる各種DBへの対応表が付いているのが素晴らしいです。
いろいろなところで仕事をしていると場所によって使うDBが変わってくるので、更新の意味合いも込めて今回はスマホに入るよう電子で買ってみました。ADO,oo4oなど古いAPIの項はもうなくても良いのではないかと思います。今更VB6でもないでしょうし。それよりもSQLと各DBの型対応表といったSQLに特化した内容の方があると良いかと思いました。
以前の古いリファレンスを持っていましたが、各sqlで新たなコマンド等追加になったので購入しました。新たなコマンド等も追加されており満足しています。次の改訂版も出れば購入しようと思います。
四版がでた、ということでとりあえずkindle版を購入してみました。全体の印象は三版と同じですが、表題のように「脇の甘さ」が広がった印象を受けました。四版の目玉は「SQLite対応」です。なのでSQLiteもあわせて開発する、という向きにはいいのでしょうが、私のように特にSQLiteに思い入れがない向きは、もう少しそれぞれ既存の記述から、最新版の間の進化に愚直に追随してもらいたいところですが。。。。その部分が大変甘いです。以下二時間くらい読んだ結果です。[kindle版なので、ページ数は不明です...]「図表1-39 MySQLの日付型」にて、以下の二つ1.MySQL 5.6でサポートされたでマイクロ秒表記がない(TIME, DATETIME, TIMESTAMP)2.MySQl 5.6で非推奨、5.7で取り除かれたyear(2)の記述が三版のまま残っている3.PostgreSQL 9.2/MySQL 5.7でサポートされたjson型の記述なし。関連する関数も当然記載なし。。。。　利用頻度とこれからの新規開発を考えるとXML関連の記述をばっさりなくして、JSON型の記述にしてもいいのではないかと思います。4.ビューの説明(小ネタ)　「ビューはそれだけで完結しているオブジェクトなので、パラメータ値によって制御するといったことはできません。このような場合には、ストア゛ードプロシージャを作成することをお勧めします。」とのことですが、Accessだと、パラメータクエリをすすめる必要があるのでは?5.「1.7 ストアードプロシジャ」　Access 2010から利用可能になった、の記述があってもいいんじゃないかと。。。6.「1.8 トリガー」× Accessを除くデータベースで、トリガーを利用できます。○ 古いAccess(2010より前のバージョン)を除くデータベースで、トリガーを利用できます。7.COLUMN ROWNUMによる行制限「12c以前のOracleでは、SELECTにTOPやLIMITを指定することはできませんが、」12c以前というよりは、12cより前は行制限(Oracle 12cでOFFSET句とFETCH句がサポート)を簡単に実現する機能がなかったことをいいたい用ですが、TOPはMS SQL Serverですし、LIMITはMySQLのことなので、なんかピンボケな印象です。なのでよりよい表記はいかになると思います。「12cより前のOracleでは、SELECTに行制限の記述(OFFSET句やFETCH句)を指定することはできませんが、」8. WITH句　SQLiteは3.8.3からサポートしているのに未サポート扱い。。。。9. WITH再帰クエリー　SQLiteは3.8.3からさポートしているのに未サポート扱い。。。。10. WITH再帰クエリーでRECURSIVE指定できるのはPostgreSQLだけ(?!)　んなわけない。×「PostgreSQLの場合、再帰クエリーを実行する際には、WITHの後にRECURSIVEキーワードを指定する必要があります。他のデータベースではRECURSIVEを指定するとエラーになります。」>　そもそもSQL標準で定めた表記WITH RECURSIVEでRECURSIVEを指定するとエラーになるわけがない。>これは、PostgreSQLではRECURSIVEを表記しないとエラーになるが、>他のデータベースでは省略してもエラーにならないことの記述があり、それを読み間違えたと類推します。>>○「PostgreSQLの場合、再帰クエリーを実行する際には、WITHの後のRECURSIVEキーワードは省略できません。>他のデータベースではRECURSIVEを省略できます。」[2019-09-23 追記]本レビューの初出時は上記引用符のように書いていましたが、これは私が間違っていてOracle, SQL Server, Db2は現在の最新版でもエラーになります。私の頭の中にはFirebirdが基本となっていて、それで視野が狭くなっていました。すみません。著者のブログにもあったとおり、9.を含めて以下のように書くのが、この時点での正解です。〇「PostgreSQLの場合、再帰クエリーを実行する際には、WITHの後にRECURSIVEをキーワードを指定する必要があります。SQLiteでは、RECURSIVEを省略可能です。他のデータベースではRECURSIVEを指定するとエラーになります。」ちなみにFirebirdはSQLiteと同じ仕様で、この書籍がでた時点ではGAになっていなかったMySQL 8.0ではCTEがサポートされ、PostgreSQLと同じ仕様です。11. LIMIT句　IBM DB2 9.7 Fix Pack 2から、対応しています。(DB2_COMPATIBILITY_VECTORに定数"MYS"を設定する必要があり)等々もう一人ですべてのRDBMSの最新バージョンに追随するのは難しい規模になってきているのではないですかねぇ。というのが率直な感想です。
わかりやすくとても勉強になる本でした。
一般的に使われているDB全てにおけるSQL分法が全て網羅されています。手元に絶対置いときたいです。
急な配置転換で触ったことがないデータベースとSQL群を保守することになり、本書を購入しましたAPIや検索・集計用のアプリ経由ではなく、データベースそのものをSQLでガシガシ検索・更新していくスタイルの現場だったため、先人の遺した最強PL/pgSQLを読み解くのにかなり役立ちましたDB毎のコマンド差異についても多少言及されていて、ネットで調べたSQLがうまく動かない時のヒントにもなりました。
何を勘違いしたのかこの「ポケット」リファレンスに全てを求める人も多いようなので、あくまでも「ポケット」リファレンスが全てを網羅したリファレンスでは無いことを前提に。このサイズに収まるよう必要な事を必要最大限に記載した一冊で、机に1冊置いておいて損は無いです。初心者にもやさしく、SQLとは？というところから記載が始まるのは教育用資料としてもとてもありがたい。
これひとつで様々な方法をチェックできるのが良い。
何の為に電子書籍で購入したのか判りません。巻末のインデックスにはリンクが張られておらず、もちろんページ数も記載されないわけですから、まったく機能しません。kindleの機能で索引のキーワードで検索してもヒットしない場合もあります！騙されました。返品したい。
VBAではなくマクロの解説でした。
Accessは少し使ったことがあるけど、業務システムみたいに画面が色々変わるアプリはどうやって作ればいいのかわからない人とか、昔のAccessは使った事があり本格的な業務システム開発に関わっていてデータベースシステムの仕組みはよくわかっているけど、Accessでちょっと業務支援システム作ってよ、と言われてもどこから手を付ければいいのかわからない人が、手っ取り早くAccessでアプリを作れるようになる時にはとても役立つと思います。他部門からの急な応援要請に対応できたのはこの本のおかげです。ただし、マクロを利用した自動処理については説明があるけど、VBAについては説明がないし、外部DBを利用する方法の説明がないので、それらを学習する際のおすすめの書籍を紹介してくれるともっとよかったと思います。後、画面イメージがAccess2021の物なので、他のバージョンのAccessだと説明にあるアイコンがどこにあるのか分かりにくかったり、「Ctrlを押しながら」と書いてあるけど実際には「Shiftを押しながら」だったりなど誤記があり試行錯誤が必要だったりしました。総合評価は星４つにしました。
DXってずっとバズワードだと思ってたのですが、この本を読んでDXが何を目指してるのか理解できました。
事例もまじえ、とても勉強になりました。私の勤務する会社は労働集約型サービス業ですが、ヒントになる情報が点在してました。ありがとうございました。そして、八子社長の日本を変えていくとう志に感銘し応援します。
大企業〜中小企業までのDx事例が紹介されている。ただ、全て概観なので実務に応用するレベルの内容はほぼ無い。また、プラットフォーム構想など、構想倒れすることが多く、実際は失敗例に通ずる内容が、先進的なものとして紹介されているあたりは、ミスリードを生みかねないと思います。
クラウド黎明期にモバイルクラウドを提唱し、IOT黎明期にデジタルツインの重要性を提唱した八子知礼氏の10年かけて積み重ねたストーリーが、見事DX時代に結実したなと感慨深く拝見しました。「過去・現代・未来」ストーリーテリングの名手として、次なる未来は何を魅せるか？DXのその先にCX、SXを掲げた後半、興味は尽きる事なく、一気に最終話まで楽しく読ませて頂きました。次は2045年シンギュラリティ時代、また八子氏の提唱する内容を追いかけたいと思えた作品でした。
トランスフォーメーションを起こすときに大事なのは顧客や市場の視点にいかに立ち、その経験価値をいかに高めるかだと思います。そんなことを再度認識できる一冊です。
製造業に近い方はスッと内容が入ってくると思います。一方で馴染みのない方も読み進めるとことばひとつひとつがわかりやすく伝わるように工夫されておりようと思います！
DXの方向性として外販とあるが、いままでどれだけの会社が失敗してしてきてのか筆者は分かっているのだろうか？製造業はそれぞれの持ち味があり、それほど簡単ではない。筆者は多くの関連会社をもつ会社の出身であり、独立系の中小企業では参考にならない。人の問題やスキルのある人材の確保の難しさは特に中小企業では顕著であり、筆者はその経験は不足していると感じた。
世は万物流転。「ビッグデータ」と言う言葉が散々喧伝されたのは2010年代前半のこと。一昔前だ。兎に角、何かの役に立つかもしれないからデータは採っておけ。そういう「何がなんでもIoT」と言う時代は過ぎ去った。「データ主導」ではなく、目的ありきのデータ収集でなければ、活用化されることなく無駄骨になり、更には、維持管理するコスト増をいたずらに招くこととなる。そして目的は、部分最適より常にビジネス全体最適に重きを置くべきだ。理由は簡単な話。部分最適だけでは、工程のどこかで1点でも最適化漏れがあれば、そこがボトルネックとなる。その箇所に合わせて全ての工程がペースダウンしてしまうからだ。現代の社会では様々なモノゴトがネットワークで繋がって、データが相互にやりとりされることで成り立っている。一部分にこだわっていては問題は解決しない。そして、DX（デジタル・トランスフォーメーション）を、単純なデジタル活用や、今までのIT化の延長と混同してはいけない。DXの本質とは、企業やビジネスを様々な外圧や変化に耐えられる様に柔軟に変化出来る姿に「トランスフォーム（変革、変容）」することであり、「デジタル」は、その手段に過ぎない。デジタル技術を活用してビジネスモデルや商材、業務プロセス、企業カルチャー、そして企業のあり方そのものを変えることがDXなのだ。先行きが分かり難いVUCA（Volatility 〈変動性・不安定さ〉、Uncertainly 〈不確実性・不確定さ〉、Complexity〈複雑性〉、Ambiguity〈曖昧性・不明確さ〉）の時代だからこそ、「ダイナミック・ケイパビリティ（環境や状況が激しく変化する中で、企業がその変化に対応して自己を変革する能力）」を企業は備えるべきなのだ。と、まぁ、著者は、これまでの経験も踏まえ、DXに関する総論、各論、手法、具体例、さらには取り組むに当たって起こり得る問題や障害と、その解決策についてもあれこれ詳述する。その内容は実に細やかで真摯だ。また、著者が類推する、今後20年のトレンドを読む上での観点は、以下の5つに大別出来るそうだ。1.現実世界の仮想化2.仮想世界のリアル化3.業界の境目がなくなる4.リモート化が進行する5.SDGsとESG経営そして、幾つかの強調される言葉やツールも非道く印象的だ。「デジタルツイン」「魔のデッドロック」「境目」「バックキャスト」なかでも、あらゆるビジネスシーンでデジタルツインが実現すると「業界」という定義が無意味なものになる、と言う見方は実に興味深い。そして、DX化を進め、まず社内で活用し、そのデータ、システム、技術などを外販出来る様にまでなれば、新たなプラットフォームを生み出し、自らの事業領域を拡げることも可能となるのだということは、なかなかDX化を推し進めることが出来ない企業には僥倖だろう。人口減少の一途を辿る日本。だからこそDX化は必然だ。なぜデジタル化、どうしてDX化をすべきなのか。本書はそれをロジカルに教えてくれる。「唯一生き残るのは、変化に適応して変化するものである」（チャールズ・ダーウィン「種の起源」より）
類書との区別化ポイントはなく、事実の羅列。ネット検索して得られるレベルの情報ですのでお勧めしません。
読後の第一印象は、やさしい眼差しを持ったエッジが鋭い本、というものでした。DXというコトバはもはや「ハイプサイクル」的には（笑）、そろそろ「過剰な期待のピーク期」から下り始めてきているような素人的印象を持つのですが、そこにCX（Corporate Transformation）、SX（Social Transformation）までタイトルが付いています。しかし、DX、CX、SXについて論じているのは最終章54頁、全体の16.5%でしかありません。この配分に深い狙いがあると思いました。そこまでの8割についてはDXについて論じています。製造業を主体として、DX導入のノウハウを心構えから丁寧に書かれています。もちろんDXはコスト削減という矮小なものではなく、目的でもありません。大義があって、それがぶれずに進ませる覚悟が必要です。本書はその精神論を煽り立てることはせず、また「このままでは御社は取り残されて滅びますよ」的な危機感をあげつらう物言いもしていません。まことにやさしく、淡々と、そして誠実に語りかける書き方です。もしすぐにでも真似できるようなビジネスモデルであれば、「そもそもそこには大きな価値はない」と考えるべきだ、と筆者は説きます。その言葉に偽りはなく、本書では「境目課題発見フレームワーク」のノウハウを披露しています。ここでの境目とは、「いろいろなモノゴトの空間的・物理的な境界のこと」だと定義しており、「あらゆる問題点や課題は『モノゴトの境目』で発生している」と結論しています。この「境目」ですが、本書は前の方で出ている言葉なのです。63頁でこれからは業界の「境目」がなくなる、とさりげなく書いています。「境目」についての眼差しをあえて強調しないのは、おそらく狙いなのだと思いました。このようなリフレインは、他にも見られます。コマツや旭鉄工の事例は繰り返し出てきます。それが「コマツや旭鉄工はすごい」ということではなく、「これらの事例から貴方（御社）は何が見えますか」という問いかけになっています。柔らかい物言いでありながら厳しい問いかけです。さて、DXの収益性という議論では、ツールやデータを外販することが解決策として提示されています。大企業レベルであれば容易と思いますが、中小企業ではそれでもなお、障壁は高く感じます。このあたり、今一歩の言及があると良いかもしれません。さて、前述の「DX、CX、SX」についてですが、本書では「問い」を立てているところで留めています。それが「怖い」と思いました。そして筆者の眼差しは、CXとSXで何を為していくのかという方向性があるように思います。その先はもちろんもっと大きな「境目」を超えるNX（National Transformation）であり、WX（World Transformation）なのでしょう。その点で早くも次回作への期待が高まる一冊であるとと思いました。
本書には特筆すべきところが2つあります。一つは、本書がハンズオンを中心に構成されているところです。全15章のうち、実に9章がハンズオンです。開発というものは当然ながら、実際に手を動かしてエラーに遭遇しながらモノ作りをしないと身につかないものです。もう一つは、全体を貫く明快な書きぶりです。この手の本は見慣れないカタカナの用語で埋め尽くされてしまうきらいがありますが、本書では「サーバーレス」や「リソース」といった用語が、登場するたびごとにそのご利益とともに明確に説明されています。真の意味で初心者に寄り添った入門書だと言えます。なお、本書はAWSの解説書ではなく、あくまでクラウド開発を解説するための題材としてAWSを使っているので、本書で得られる基礎知識はGCPやAzureといった別のクラウドサービスにも容易に転用できますし、すぐに陳腐化することもないでしょう。
とにかくコードがエラーばかり吐くので対処が必要だった。
読んだ感想を箇条書きで書きます- 文体が親しみやすいです- AWSが全くわからなくても、雰囲気がつかめるようになります- ハンズオンなので、記憶に残りやすいです- 本当に必要な知識のみが、わかりやすい図とともに書いてあります
1998年に出版された「T字形ER データベース設計技法」（通称：黒本）にて公開された、事業解析を行い、その結果を以て情報システムのデータベース設計に結び付けるという手法について書かれています。後にTMと名前を変えて、それも少しづつの変遷を経て現在3.0となっています。もともと実務家であった氏がモデルを提唱し、都度その成り立ちを説明してきましたが、2003年の「データベース設計論 T字形ER」（通称：赤本）以来となる新刊です。実務として使い続ける人たちが居る中、新たに始める人に伝えるためにも新たな著書が欲しいと、「TMの会」の人々の強い要望に応えた形で登場しました。これまでの歴史を知らずに読むと第１章、第２章は戸惑うので、第３章から読み始めるのが良いと思います。時々挟まる「問わず語り」と、最後のTM事例集が面白かったです。この本を読んで興味を持った方は、是非既に実践している人を見つけて習うことから始めてください。
従来は「T字形ER法」と呼ばれていた大人気のデータ設計手法です。「TM」と名前を変えて何冊か本をだされていましたが、今回集大成として出版されました。この手法を実務で使われている方は必読です。知らない方にも多くの気づきがあるでしょう。佐藤正美氏のコンサルティングを受けたメンバが書かれた、付録「TM事例集」の「現場SEと斉藤正美氏との対話や気づきの物語」は特に面白かったです。
暫く、サーバー構築を実施していなかったので、基本を再認識できました。
結局ネットで全部調べて習得しましたが後からこの本を買っていたことに気が付き後悔しましたこれを読んでいればかなり時間短縮になったと思いますaccessやmysqlからデータベースを移行するのに役に立つ内容だと思いますとてもわかりやすく書かれています※この本に書かれているsqlserverオブジェクトエクスプローラーは2016にはあったかもしれませんが2019ではなくなっていてストアドプロシージャのデバッグができませんvisualstudioが必要です
データベース（ＳＱＬ）は単にデータをためて引き出すだけの機構ではない。それなら「テキストデータベース」で事足りる。ＳＱＬは、データ取得、アクセスの競合の処理をプログラム側ではなく、ＳＱＬに負担させることができる。この書籍では実用ＳＱＬにおけるコツ、実用上のトランザクションについて著されている。載っているコードをコピーして動かせるというような類の書籍は無いが、類書はあるし、実際、そんなコピーしたコードなど、データ構造が露骨に品質につながるデータベースプログラムでは使い物にならないだろう。
まさにSQLServerの教科書といえる本です。本文の説明も細かいですが、実務で迷いやすいポイントが囲み記事で紹介されてるのが、役に立ちます。例えばNull判定のオラクルとの違いとか。お薦めできる本です。買ってすぐに届いたのも助かりました。
AccessのデータベースをSQL Serverにアップグレードするため購入しました。インストールなどではまりそうなところは繰り返し解説されていてとても役立っています。開発編がVisualBasicなのが少し残念、だけどC#への変換は簡単なので問題ないです。すぐにざっとマスターするには十分だと思います。
作者のプログラミングスキル疑うレベルオブジェクト指向のいいところ、皆無です誤記が多すぎ作者の認識と実務の認識の差か
まだ上巻のみだがWebアプリケーションの仕組みやそこでのPHPの役割と言った基礎的なところから話をスタートしてくれており、非常に親切。またオブジェクト指向や例外処理といった初学者が詰まりやすいポイントに対しても「なぜ使うのか」「どうやって使うのか」といったことを踏まえて説明がなされており理解が捗る。本書のみでまったくの初心者が学習をスタートするのは厳しいが、(1)「他言語経験者」、もしくは(2)「すでにPHPのより基本的な入門書籍かドットインストール等を完了済」、であればオススメ出来る内容だと思う。下巻も購入したい。
2010年に発売されている「パーフェクトPHP」の様に、実践的な内容の書籍かと思い、上下どちらも読みましたが、期待外れでした。中身の薄いサンプルコードで、浅く機能を解説しているだけの書籍です。この書籍を読んでも、現場では活かせないでしょう。古い書籍ですが、「パーフェクトPHP」を公式ドキュメントなどで、補完しながら読み進めるのが、学習には一番良いでしょう。PHPUnitのテストなどは、公式ドキュメントがしっかりしているので、そちらで学習することをお勧めします。
上巻をほぼ読み終えたところです。最近ではPHPにについて詳しく、基礎的なレベルで出されている本が少ない中（主観です）、初心者がつまづきそうなことろを考慮された内容で、かつ詳しく解説されており大変参考になる内容でした。このボリュームであり著者の尽力に感謝致します。下巻にも取り掛かる予定です。（著者に方に）ありがとうございました。
PHPで初心者がつまりそうな箇所を実務的な経験をふまえ詳しく解説しています。タイトルの通り上巻だけでオブジェクト指向からDB連携まで網羅しています。個人的には、この本が一番基本を押さえていて分かりやすいと思いました。私は独習シリーズよりこちらの方が良いです。初心者には上巻だけで十分足りる内容です。下巻は必要に応じて購入すればよいでしょう。下巻は主にセキュリティやオブジェクト指向のより詳しい内容です。上巻の目次に下巻の目次も記載されています。また、出版社HPからサンプルソースもダウンロードできます。
ものすごいボリュームに気圧されますが、そのぶん最初に全体像を把握するにはうってつけ。ここからさらに深く、広く知識を得ていくのがおすすめです。
バージョンはphp 7.2である。型システムやstrictモード等を駆使し、堅実なPHPコードを書くためのベストプラクティスが書かれている。本書では何度も口酸っぱく緩やかな比較(==)について書かれているが、PHP8.0ではやっと緩やかな比較の挙動が修正されており、本書がPHP8.0リリース後に出ていたらと思うと、とても残念である。PHP本格入門[下]も購入するか迷っているが、不評なので[上]だけに留まっておくのも悪くないかも知れない。
AWSはじめましての方向けには非常に学びのある一冊かと思いますが、SAA取得レベルだと物足りなく感じるかもしれません。
2022年4月後半大きくUIなど変わったわけではないのですが、本内容と変化しているところが多いです。初心者としては無駄につまづく時間が発生しますので注意してください。
ネットワークの基礎的なことをあまり理解していなくても読めるように書かれているので、必要な部分以外は読み飛ばして読みましたが、AWSについて何も知らないレベルでも読める良い書籍だと思います。ただ基本的にGUIベースのみの説明なので、AWSのGUIが変わると参考にならない部分等も出てくるかもしれません・・・。
AWSで構築する場合、どの順番で組んでいくかが重要になります。あとから変更出来ない部分もあったりするので。この本の構築手順は分かり易いです。これまで、ゴチャゴチャとやっていたことが、整理できました。なお、AWS本共通の弱点は、執筆時と画面が変わってしまうこと。この本の画面もすでに実体はリニューアルされていますので、読み替えは必要ですが、そのくらいは乗り越えましょう。あとは、アプリの部分、シンプルにPHPだと裾野が広がるのでは、python、Ruby未経験者だと少し戸惑うかも。
この書籍を購入して、早速awsアカウントを作成し書籍に記載がある通りに設定を行いました。その印象としては、全体的によく書けていると思いました。オンプレミスで運用しているサーバをどのようにaws上でオンプレミスと同様なセキュリティを維持して構築するのかについて、この書籍に回答があると思いました。特に下記のawsの機能について、丁寧に説明されているので、理解できました。・第３章　安全に作業するための準備　AIMについて、理解できました。・第４章　仮想ネットワークを作ろう　VPCで守るべき領域を作成することがわかりました。・第５章　踏み台サーバーを用意しよう　Window10のPowershellにsshコマンドが用意されているのは、知りませんでした。　早速、現在使用しているオンプレミス環境のサーバでの作業手順でも利用しています。続いて第6章から第1２章まではメールサーバ作成でリージュンを変更しないといけないこととかで少し躓きましたがほぼ順調に設定できました。詳しく説明されていたので読み返すことで設定できました。問題は、第13章の「サンプルアプリを動かしてみよう」でした。一気にアプリケーションまで動作させて達成感に浸りたかったのですが、アプリケーション設定後にエラーが表示されて正常にユーザ登録が出来ませんでした。ユーザはMySQL上のテーブルに登録されているのは確認出来ましたが、認証メールが送付されて来なく、ログインが出来ない状態で止まりました。Ruby on Railsを全然知らないので、デバッグ方法もわからないためここで止まってしまいました。出直しとしては、使用しているRuby on Railsを理解して先に進めようと考えております。何にしても、良書と思いますが、最後まで辿り着けていないので、再度この書籍にしたがって問題点の発見を行なって行こうと考えています。
kindle版を購入しましたが表示が崩れているのでおすすめはできないです。
この通り構築すればAWSの基本の構築が頭に入ります。ただネットワークやサーバに全く知識がない人だと少し難しいかも知れません。VM触ったことある人なら問題なく構築できると思います。ただEC2を3台使うので料金には注意が必要です。
本格的なウェブ開発とあるが、本格的ではないです。これならブラックベルト観てやった方が勉強になります。
リソースを作りながら3回ぐらいほぼ通して読みました。すでに他のレビューで言われていますがかかる料金についての説明はないので、勉強が終わったらリソースは消しておきましょう。内容は基本的で、AWS入門者向けの本に書いてほしい内容はちゃんと書いてあると思います。ネットワーク基本用語が理解できてきた初心者が手に取るには一番でしょう。現在主流のECSが使われてないですが、EC2を理解してからECSを理解するというのは順序として良いと思います。
ポートフォリオのインフラにAWSを使いたかったので本書を購入しました。発売当日でまだレビューがなかったので不安ではありましたが、結果は大当たりでした。AWSの基本サービスが分かりやすく解説されているのは勿論、コンソール画面のどのボタンを押せばいいのか、すべて画像付きで懇切丁寧に教えてくれます。本書に従って進めていくだけで、堅牢な構成でAWSサーバーが構築できます。本書のおかげでモダンなWeb系自社開発企業に無事転職できたので、感謝の意を込めて星５とします。
ネット書店をテーマとして、一からトップダウンで概念モデルを作成し、ボトムアップで属性定義や論理モデルを作成していてモデリングの流れを掴みやすい内容だった。さらに、一度作成したモデルに対して、仕様変更が入った場合にはどのように考えて変更するかも含んでいる点も良かった。逆に物理モデルや物理実装(インデックスやビュー)の内容は少ないと感じた。マイナスだった点・表現はわかりやすく図も多く使われているが、　説明の流れが「図①から、Aを変更してBを変更して…、その結果図②となる」と説明の後に図を提示されるのでわかりづらい。　最初に図①②を書いてそれから変更点を説明してくれると１つ１つ確認しやすかったと思う。・途中でトップダウンとボトムアップの結果をマージしているが、　トップとボトムの差がテーブルや項目数の差のみで、ほぼそのままマージでき参考にならなかった。・CDの評価版ソフトや本書内のソフトの説明やUMLの説明など不要な内容が多い。　特にCDの評価版ソフトは今使えるのかは不明。・途中でコラムがあるが、章や節の区切りのタイミングでは無く文の途中に含まれており、　その含んでいる箇所の内容と必ずしも関係している内容では無いので、　読みづらく邪魔でしかなかった。この本ではビューはパフォーマンスにあまり影響がないと書かれているが、他の本では影響がある場合があると書かれていた。１つの本だけを信用するのは良くないことを学んだ。
データモデリングについてわかりやすい解説をしている本本の構成は、基礎編（理論編）と実践編となっており、基礎編ではモデリングの必要性や種類、そしてこの本で扱うIDEF1X形式をのべデータモデル以外、プロセスモデルなどの補完モデルについて述べています。実践編では、架空のネット書店について、エンティティの切り出し、属性項目、ボトムアップ分析を経て最後には物理実装まで扱っています。この本がすばらしいのは、基礎編でちゃんと理論的裏付けを行った後実践編で、架空の書店についてモデリングを行っていること。そして、実践編では、トップダウンモデリング、ボトムアップモデリングの両方を解説し、最後に実際のデータベースのテーブルへと落とし込むところまでを解説しています。それぞれの章には章のまとめがあり、何を理解していなければならないのかが明確でありわかりやすくまとまっています。モデリングの解説書の中には、偏った分析を主に行っているものもある中で、豊富な引用書籍を裏付けにした、網羅的でかつ、実践的でわかりやすいこの本は、手元の本も6版と版を重ねており、とても良い本ではないかと思います。　お勧めです。
データモデリング初心者の私でも充分理解でき、データモデリングのマニュアル本として、長く使えそうです。また、付録のツールもすぐれものです。
リレーショナルデータベースに始めて触れた時、フィールドをきちんと配置し参照を考えたテーブルを複数用意すると、多少複雑な検索条件でも、ＳＱＬ文一発で、検索結果が得られたのに非常に感動をしたことを思い出しました。今なおデータモデルの設計が甘い為に抽出したデータをプログラムで再加工していたり、なかなか美しいコーディングに行き着いてはいないので、本書を手に取るきっかけを得ました。本書にはERwinとER/Studioというモデリングツールの試用版が付録でついており本書内での演習に使えます。私自身は、もし使用版が非常に気に入ってしまうと、正規版がほしくなってしまうので、（ちょっと個人では買えそうにありません。私はフォトショップでいっぱいいっぱいです)試用版を試すことなくもっぱら読むことで概念をつかもうと心がけました。それでも、論理モデルを作成することの有用性は充分に実感することが出来ましたので、企業でERwinとER/Studioを導入する予定のある方、もしくは個人でも余裕のある方にとっては非常に有効に活用できるのではないかと思います。
データモデリングについて、特にＥＲＤについて丁寧に書かれています。初めてデータモデリングをする方が、モデリングの効果、必要性を理解し、ＥＲＤを描く事が出来る内容になっています。各章が独立しているので、後から調べたい部分を探す事が容易な構成になっているので、机の脇に立てかけて重宝しています。
丁寧に説明していてくれて、良いテキストだと思いました。
初版2010年8/5。全333ページ。以下目次。第1回：大規模WEBサービスの開発オリエンテーション第2回：大規模データ処理入門第3回：OSのキャッシュと分散第4回：DBのスケールアウト戦略第5回：大規模データ処理[実践]入門第6回：[課題]圧縮プログラミング第7回：アルゴリズムの実用化第8回：[課題]はてなキーワードリンクの実装第9回：全文検索技術に挑戦第10回：[課題]全文検索エンジンの作成第11回：大規模データ処理を支えるサーバ/インフラ入門第12回：スケーラビリティの確保に必要な考え方第13回：冗長性の確保、システムの安定化第14回：効率向上作戦第15回：Webサービスとネットワーク特別編：いまどきのWebサービス構築に求められる実践技術月間1500万人のユーザーを1000台のサーバーでさばいている(当時)はてなの大規模システムの開発と運用の裏側について書かれています。この本は、はてなインターンシップ講義内容を収録したとこと書き下ろしの回とで構成されています。1,7,8回,と特別編は書き下ろしであとは講義ベースの回になります。10回までが当時はてなに在籍していた伊藤氏の執筆担当で11回以降は田中氏の執筆担当になります。この本の良いところは、はてなの大規模システム運用の詳しい中身だけではなく、運用に関する技能ではなく技術の解説をしているがセオリーに偏らず実践も交えて書いてあるところだと思います。例えば、「セオリー的にはＸＸＸＸＸだけど、運用上はこうした方がうまく回っている。」というような話(e.x. DBのテーブルの正規化の話やJOIN排除の話)や、技術と運用面の問題だけではなくビジネス的な観点からの話もあり(e.x. サーバー台数と故障率 p.106、クラウド vs 自前インフラ p.235、その他いろいろ)、この本の内容を非常に濃厚なものにしています。一番お勧めは、第2回、その次は第3回、第12回と第13回です。全体的に言えるのは、まずOSの仕組みと照らし合わせてデータをなるべくできる限りメモリに載せることが重要(逆にディスクにアクセスすることの不利さも分かりやすく説明)で、そのためにどう設計するかという視点でDBなどを設計しているのが印象的でした。あと、全体的に「トレードオフ」の重要性(ここでも絶対解ではなく最適解の重要性)が全編にわたって書かれているとこは、「やっぱわかってるな」感が出てて好印象です。運用しているシステムの性質にも当然よるんでしょうけど、日本人は全般的にそういう考え方苦手だから。エンジニアや経済学者はお金だけではなく費やすリソース全部がコストだという考え方ができるんですが、日本のIT業界の場合は過度な完全主義を目指しがちなテクニシャンの集まりだし営業・販売などビジネスサイドの力が圧倒的に強く、全体最適で物を考えるとかそういうのは浸透しません。「もう少し柔軟で包括的なものの考え方が出来る人が増えればいいな〜」なんてことをこの本とはあまり関係ないけどフト思いました。
沢山の事例があるので、じっくり対策を練るときにヒントの一つになると思います。
大規模サービスとなると通常とは違ったノウハウが必要になってくるが、そういったノウハウについて書かれている本は少ないと思うので、一読しておくと役に立つと思う。主にインフラ・運用保守的なことを中心に書かれているが、アプリの実装方法についてもデータ圧縮やディスクI/Oを減らす等のリソースの効率運用を目的とした内容として触れられている。大規模サービスに限った話ではないが、WEBアプリなどのサービスを開発する場合は運用保守の事まで考えて作る。サービスをのせるインフラにも気を配る。などアプリ開発者が忘れてしまいがちな大切なことを改めて教えられた。ただ、セキュリティなどについての話がなかったのが残念。著者たちの実体験から学んだ実践的なノウハウばかりなので、読んでいてなるほど、と思わされることも多く、大規模サービスでなくても活かせるテクニックも含まれていたと思う。また各所で必要な数値を具体的に書いてあったりするので感覚値・規模感といったものも知ることが出来た。
大規模サービスに関する本が少ない中、幅広く説明している本です。分散処理についても書いてありますが、概要だけなので、深く知るには別の本や論文を読む必要があります。といっても、この手の入門書が少ないので、買う価値はあります。
中古ですが状態もよく、発送も早かったです。自分で頼んでおいてなんですが、内容がちんぷんかんぷんで、☆一つ減で・・・
ハード的な内容もおもしろいのですが、数値をこう圧縮して工夫しているとか、検索のアルゴリズムを改善しているなどのアプリケーション上の工夫がとても参考になりました。普通に実装することから、１ステップの手間でここまで改善するのかと目からウロコの内容のものがあり、いろいろ考え方の応用ができそうです。
非常に面白く、一気に読めました。特にインフラの章は分かりやすくまとまっており、エンタープライズシステムのSEがWebサービスの企業に転職したい、といった場合に読むと有用だと思います。それにしても、学生にこれだけの内容をやらせているのですから、はてなさんの新人は優秀だなと感じます。普通の文系出身でなんとなくSEになったという新入社員には、難しく感じるかもしれません。
インフラの基礎を理解した人が上のレベルに行くのに最適かと思います。知識として知らないと、なかなか思いつかないベストプラクティスが沢山あります。
まとまりがない。ただつらつらと書き、初心者レベルのコマンド紹介抽象すぎる表現
２０１０年の本。二人の著者は株式会社はてなの執行役員である。はてなのインターンシップ講義がベース。　曰く・・・　大規模データの扱いで難しい点のひとつは、メモリ内で計算できないこと。ディスクからデータを検索するとなるとかなり遅くなる。　複数のファイルシステムがあり、その下にデバイスドライバがある。デバイスドライバが実際にハードディスクなどを操作する。複数のファイルシステムの上にはＶＦＳ（Virtual File System）がある。ファイルシステムはいろいろな関数をもっている。ＶＦＳはそのインタフェースを統一する。ＶＦＳはページキャッシュの仕組みをもつ。どんなファイルシステムを使ってどんなディスクを読みだしても必ず同じ仕組でキャッシュされる。ＶＦＳはファイルシステムを抽象化する。　レプリケーション機能は、マスタ（データベース・サーバ）を決めて、マスタを追いかけるスレーブを決めてやると、マスタに書き込んだ内容をスレーブがポーリングして同じ内容を自分自身に反映させる機能。参照アクセスならスレーブが対応すればいいので参照アクセスを分散化させやすい。　全文検索はgrep型、Suffix型、転置インデックス型の３つ。grep型は検索対象のドキュメントを先頭から全部読んでいくアーキテクチャ。Suffix型は検索可能な形で検索対象全文を持つ。ドキュメントを検索可能な形でもって、すべてをメモリに展開する。転置インデックス型はドキュメント全体ではなく、単語（term）とドキュメントを紐付ける。転置インデックスをドキュメントとは別に事前に作っておかねばならない。転置インデックスは、どのtermがどのドキュメントに現れるか、という対応関係を示すデータベース。　みたいな話。
まだ読了半ばですが、グラフィックスプログラミングやJavaScriptはもちろんのことですが、三角関数やベクトル、行列の使い方が非常にわかりやすい。サイン、コサインと云った学校ではちんぷんかんぷんだったんですが、この歳になって目から鱗状態で、はまってしまいました。今からCanvas2Dとかの説明領域に入りますが、先が楽しみです。
数学の知識(サイン、コサイン、ベクトルなど)をどうゲームに活かすか、よくわかる本でした。しかし、本に書いてあることを全て写経すればゲームが動くかというと、そうではありません。この本に書いてあるのは、コーディングする際の要点を抜粋したものであり、「他の細かい部分はサンプルコードを見て学んでね」というスタイルです。サンプルコードをパッと見ただけでは、どこが追加されているのかが分かりづらいため、余計な時間をかなり食ってしまいました…(やり遂げると、それはそれで力はつくんですけどね)要は、僕のスタイルには合わなかったということです。ゲームのコードがどんな感じなのか知りたい人にはお勧めできる本です。オブジェクト指向で書かれているので、コードもきれいに纏まっているほうでした。
オブジェクトを動かす上で根本的な理解の助けになりました。いままでpixi.jsやcreate.jsなどライブラリにまかせていた部分が大きかったので、イージングの実装や、単位ベクトルなど、仕組みを自分で実装してみることで、今後応用の効く知識が得られたかと思います。数学的にも中学の数学が理解できているレベルであれば、簡単に理解できました。また、特にベクトルの概念を正しく理解することで、２Dのゲームはだいたい作れるようになるんじゃないかと。ここからステップアップしてwebGLや物理計算などにすすめると思いますので、javascriptでグラフィックス表現やモーション演出を始めた初心者におすすめの一冊です。
他のレビュアーさんも記載されていましたがコードをいくら入力していってもゲームが作れるわけでもなく、各コードのアウトプットがほとんどない、図解を載せていてもその図解につながるような書き方もされていません、２倍楽しい？何が？という印象しかない本でした、コードを入力していて多少の勉強にはなった？とは思いますが勉強のために買うものでなく辞書として買うような本と思います。
まだ途中だが、以下はよいと思った・同様のロジックのコードを複数の言語で見せてくれる・コードをオンラインで実際に動かせる環境を用意してくれてる実務などで役に立つシーンはあまり想像できないが、専門的に勉強したことがなくとりあえず仕事で使ってるけど言語の背景が知りたい人には向いているのでは
高評価のレビューが多かったので買ってみましたが、プログラミング言語の個別の要素ごとに比較している本で、少なくとも各章で論じられているものが何か予め分かっていないと理解が難しい本です。特にオブジェクト指向の項は異なる2つの見解が併記されていて、実際にオブジェクト指向の言語の経験がない限り、この本の説明の仕方では何が言いたいのか分からないままで終わってしまいそうです。オブジェクト指向と言うかクラスと言うものは要するにレコード(構造体)と機能(関数)をひとつにまとめたもの、というのが、ようやくたどり着いた自分の理解ですが、どうもこの本ではそうした意識が希薄なようです。もしプログラミング言語を比較して論じる本を書くのであれば、普通だったら、Cを軸とする各言語の歴史的な経緯、またCを源流とする言語とはパラダイムを異とする関数型言語の流れ(但しCの流れを汲む言語でもラムダ式などの関数型言語の要素を取り入れているものは多いようです)でまとめるのが自然だと思うし、その方が話としても分かり易くて面白いはずだと思いますが、そういった本はなぜか無いようです。
プログラミングの勉強をする中で、ふと「プログラミングのこの文法がなぜ誕生したのかわかれば、その存在意義がわかり、使いこなせるようになる気がする」という思いが湧き、それに応えてくれる本を探したところ本書を見つけました。私は大学院で社会学系統のことを学んでおり、そのときに特定の理論や考え方が生まれた背景や歴史、発想の根幹にあることをつかみ、応用していくことの大切さを経験的に感じていました。それはどんな分野にも通ずると考え、プログラミングの勉強にも同じことが言えるのではと思い至りました。著者のホームページで本書を執筆した動機を説明したパワーポイントを読むことができましたが、まさに私自身が別の分野で感じていたことが書かれており、購入を決めました。読んでみると、私の限られたプログラミング経験ではスッキリ理解できないところもありましたが、とても面白く読むことができました。例えば、goto文でまかなえるところをif文・while文・for文なのを導入するのはコードを読みやすくするためだということがわかり、それらを適切に使わないことは罪深いことだと感じられてきました。この罪深さの感覚はプログラミングするうえで役に立つものだと感じます。他のところでも同様の効果があったように思います。現在では当たり前になっていることも、初めて生み出された時は開発者もユーザーも感動があったはずで、そのことに想いを馳せることで、その事柄を深く理解し使いこなせるようになると思います。そういう意味で、とても良い本でした。欠点を上がるとすれば、例えば私はJAVAしかわからないので、JAVAに存在しない事柄や、他のプログラミング言語が出てくると、読むのが苦痛になり、読み飛ばしてしまったところです。しかしこれは仕方ないことかなと思いました。あとは好みの問題かもしれませんが、「これが生まれたことで、こんな楽になった！！」「これは開発者のこんな想いが込められている！！」みたいな熱量というか、当時の臨場感というか、そういうのをもう少し押し出した方が読んでいて面白かったのではないかと思いました。
各言語の構文の特性、誕生した背景などを読むことができました。実践活用とは別に雑学的な内容として読むのがいいと思いました。振り返ると、オブジェクト指向の特性が20年以上も前に定義され、使い続けられている点は感心しました。
読了。冒頭でプログラミング言語の技術について、【複数言語の比較】と【歴史】の縦横の視点から把握するコンセプトを掲げ、それを見事に実現していると思う。メモリ、型、文字コード、構文木、オーダー等々。情報技術の学習経験が無い人間にとっては、むやみに独学しようにも、Wikipediaを長時間かけて読んでも理解が難しい（読む前の自分）ような概念が、非常に分かりやすく説明されている。そしてそういう重要な概念が、少ない文字数で簡潔にたくさん解説されているので、効率が非常に良い。たとえば変数のメモリ上での扱いやら浮動小数点型やら、プログラミング初学者向けの本やチュートリアルでは腑に落ちていなかったことが、一番分かりやすく書いてあった。ほとんどGOTO文で書けることを、楽に書くために色々な制御構文がある、というような概念は、どの初心者本にも書いていなかった。そういう認識を持って各言語を勉強すると、初心者でも理解の効率が全然違ってきそうで、そういう意味で読んで良かった。今後も、数々の概念を柔軟に使いこなせるようになるまで、数か月か数年かおきに何度か読み返すと思う。すでに情報技術の基礎を習得している人にとっては、無用かもしれない。ただ、ここまで初心者がストレスなく理解できるように解説できる人はそうそういないと思うので、その辺は熟練者にも参考になるかも？
半世紀以上に渡るプログラミング言語の歴史を、進化論みたいな語り口で努めて平易な言葉で説いてくれています。Ｃ言語で四半世紀以上を食いつないできた私のような人間には、その後でメジャーになったクラスやオブジェクトや動的型付け等が、正直なかなか馴染めないのですが、この本のおかげでそんなアレルギーも少しは解消できました。本書はプログラミング初学者が読むには、ちょっと内容的に辛い本だと思います。何かひとつでも習熟した言語があれば、それを理解や比較対象の軸として、興味深く読み進められます。直接本書の趣旨とは関係のないコラムが、特に私にとっては秀逸でした。「膨大な情報に心が折れそうになったときにどうするか」について、短文ではありますが、処方箋が書かれています。このコラムを読むだけでも、(少なくとも私にとっては)この本の値段の価値はありました。プログラマには教養書としてオススメです。
現在主流のプログラミング言語を使う上で、当たり前とみなされている各種の機能や概念を丹念に掘り下げ、歴史的経緯まで踏まえて基礎から説明している本です。平易で無駄のない文書はとても読みやすいですし、補足の注釈も含めて過不足なく、最高のバランスで成り立っています。特筆すべきは「第8章 型」で、ここまでわかりやすい説明を他に知りません。計算機科学の専門教育を受けていないプログラミング中級者が、基礎を勉強しなおすのにおすすめです。
VBAを独学で学んだ状態の人に、次の言語C#やpython等を覚えてもらう前にデータ構造や例外処理や並列処理を学んでもらおうとこの本を買ったが、どの部分も基本的な項目の説明がかなり欠けておりステップアップしたい人のためにならない本だと判断した。本文中のperlやjavascriptやrubyやpythonのコード例を理解できる位ならそれは多数の言語をこなしてきたということでありそのような人がこれまでデータ構造や例外処理や並列処理に全く関わってこなかったなどということがあるだろうか。役に立たない本だった。
ハードウェア・アーキテクチャやコンパイラ構成法に興味が持てると思います。プログラマでない人はこれを読んだ後でより専門的な本に進むとよさそうです。
レビューで絶賛されていたのでどんなにいい本かと思って買ったら期待したほどではなかった。期待せずに買っていたら星３ぐらいだったかもしれない。この本の中で使われている言い回しとか例えは本当の意味で本質的ではない。たとえばクラスについて「クラスは人間が決めた約束事に過ぎない」と言っているところなどはこの人は本当にわかっているのだろうかと心配になった。偏見かもしれないが日本人が書いたこういう類の本で本質を見事にとらえた説明というのはほとんど目にしたことがない。技術に習熟するのと概念を理解するのは別物なんだなと改めて感じた読書だった。
これまでに読んだブロックチェーン関連書籍の中で一番わかりやすかったです。他の本を読んだがいまいち理解できなかった・・という方に特におすすめします。
ブロックチェーンの概要から始まり暗号化や合意形成など、順に掘り下げていく感じです。著者がソラミツの方というのもあってか、プライベートチェーンにもページが割かれています。中央銀行デジタル通貨（CBDC）など、2020年上半期ぐらいまでの時事ネタも良かったです。また、触りですがクライアントを立ち上げ手を動かす部分もありました。ただ、タイトルの"絵で見てわかる～"というのはあまり当てにしない方がいいです。個人的には"読んでわかる～"といった感じでした。
ブロックチェーンに関連する言葉の定義、仕組み、技術が無駄のない文章で説明されていて非常にわかりやすい。また説明と共に多くの挿絵があり、理解を深められる。
超わかりにくかった。図解も多いわけでもないし、分かりにくい買って後悔。
序盤はわかりやすかったのですが、急にC++のコードや解説もなく専門用語が出てきたりします。ブロックチェーン技術全体を無理やり限りあるページに端折って詰め込んだ感じ。ある程度知ってる人がおさらいを目的として読むにはいいかも知れない。自分のような初心者は、分厚くても解説の丁寧なオライリーの方がいいかもと感じました。
グーグルやツイッターなどのビッグデータを解析して、それを民衆の政治的無意識として参照しようと提唱しています。実際にはスパムとの戦いの歴史なので、そう上手くいくかは疑問ですが。無意識とは理性による熟議の限界を指摘したものでもあります。
これは、大変刺激的な論考である。すでに現代社会は複雑化し過ぎていて、誰もその実像を捉えることができない。人々は、自分が何を欲しているかも、分かっていない。そういう時代に、理性によるコミュニケーションが民主主義をより確かなものにするという熟議的な民主主義観が、原理的にはすでに機能不全に陥っているという問題を指摘する。そして、ジャン・ジャック・ルソーの『社会契約論』における「一般意志」の、現代的な読み換えこそが必要であり、また情報技術の発展により、その読み換えの条件が整いつつあるとする。それは、情報技術の発展により熟議やコミュニケーションが可能となるというのではなく、個人の無意識が膨大な量で記録されているという意味においてである。たとえば、ツイッターやFBなどにおいてである。しかも、それは国家による監視ではなく、人々の自発的行為によって。そこで、著者が主張する「一般意志」とは無意識の総体であり、動物的な生に寄り添ったものだ。ずっと以前に『社会契約論』を斜め読みした時には、この「一般意志」の意味が良く分からず、また、ルソーが一方で民主主義の基礎を解きながら、同時に全体主義の（ナチズムの）基礎にも連なったとされる、その矛盾的な性格が理解不能だったのだが、この著者の読み解きには「なるほど」と感じた。また、最近の社会思想を概観して見せる切り口は鮮やかであもる。ただ、そこで描かれる「民主主義2.0」や「国家2.0」という概念には、現時点で全面的に同意することはできないのだが・・・。ところで本書の最後に、「国家2.0」では国家は水道のような役割になると予測されている。誰もが、水道に依拠して暮らすが、だからといって国民代表を水道局に送り込もうとは考えないだろう、という表現でもって、である。この表現を読んだ時、文脈は異なるが、どうしてもレーニンの『国家と革命』における「国家を郵便のように組織する」という表現を想起してしまう。レーニンの場合は、プロレタリア革命によって階級対立が死滅する時、国家の階級的な性格は同時に死滅していく、ということを含意していたのであり、東の言いたいこととは随分異なっているのだが、それでもそうした表現の類似性に逢着した点が興味深かった。もう一つ面白かったのは、現代では情報を縮小することに付加価値がある、という指摘だ。以前の常識では、より大量の情報を提供することに価値があったが、現代では情報が氾濫し過ぎて、そのままでは誰も利用できない。グーグルが提供しているのは、その大量の情報をそぎ落とし、必要な情報だけに縮小する付加価値なのである。言われてみれば、なるほど、である。まだ消化不良だが、チャレンジングな論考であることには疑いがない。
原理としての一般意志2.0は、切れ味鋭く、光り輝いた思想に見えるが、その実践としての民主主義2.0となると、その切れ味は鈍り、輝きも薄れてしまっているというのが率直な感想だ。今の時代、「社会」や「世界」といった物語が失われ、個々人がその興味関心の範囲に閉じこもる「島宇宙化」が進展し、政治や世の中にコミットする人やコミットの量は極めて限定的だ。仮にコミットする人がいたとしても、「ネトウヨ」が象徴的だが、互いの態度変容の可能性を前提とした言語コミュニケーションによる「熟議」の可能性は乏しい。日本では、少なくともここ30年は、いわゆる言論人を中心に、コミュニティの再生、熟議の必要性が叫ばれてきたが、その叫びは虚しく響くばかりで、それどころか、市井の人々は、それらの言論が流布されればされるほど、そこから距離を置いてきたように、私には見える。そのような時代に政治や公共をどのように運用していくかという問題意識のもと、人々の社会に対する関心や熟議への意欲に頼ることのない新たな主権概念を提示したのが、一般意志2.0だ。まず、一般意志とは、特殊意志の「差異の総和」として集約されたものであり、その過程で人民はコミュニケーションを取ることなく独立に意志を表明する(部分的結社の禁止)というルソーの考え方に着想を得る。そのうえで、現代の情報技術の発展、すなわち、グーグルやツイッターにおいて、個人が意図することなく検索したり呟いたりしたことがデータベースに集約・整理されるという環境が整ったことで、その着想が実装可能なものになったというのだ。すなわち、一般意志2.0とは、インターネット上に蓄積された人々の行為や欲望の履歴に関するデータベースであるという。そして、この一般意志2.0に従って運営されるのが統治形態としての民主主義2.0である。ここまでは、かなりラディカルな思想だ。何の意図も知識もなく行われた検索や呟き、しかも相互のコミュニケーション(例えば議論など)を経ることもない単なるデータベースに社会の運用を委ねるというのだから、極めて非常識なものだが、しかし、島宇宙化や熟議の困難性といった先に述べたような問題意識に対しては極めてクリティカルな処方箋だと思う。ただ、この一般意志2.0が具体的な統治形態としての民主主義2.0に落とし込まれると、いささか凡庸なものに堕してしまっている。筆者が民主主義2.0の具体例として示しているのは、政治討論は、視聴者のコメントを討論者が参照し、その制約を受けながら行うべきというものや、公共事業を行う場合は、人々の行動履歴や事業の必要性に関連する発言といったネット上のデータベースに縛られる必要があるといったものだ。無論、これらはあくまでも例示に過ぎず、より精緻で決定的な手法の可能性が開かれていることは理解する。しかし、私が問題にしたいのは、具体例の凡庸さではなく、民主主義2.0においては、主権者であるはずのネット上のデータベースはあくまで政策決定の要素の一つに過ぎず、それをどう考慮するかは、相変わらず統治者による熟議に委ねられているという理論の部分だ。すなわち、一般意志2.0において主権はネット上のデータベースにあるとされながら、民主主義2.0にとして実装に落とし込まれた途端、主権者たるデータベースは、旧来の熟議型民主主義、すなわち民主主義1.0の下僕に成り下がっているのだ！もちろん、筆者が指摘するように、戦争はじめ近代における数々の残虐行為の背景には独裁があり、その抑制のためにはなお熟議が必要なのだというのも理解できる。主権はデータベースにあると言っても、現実に政治を運用するのが人であってみれば、その恣意的な利用も懸念されるし、一般意志2.0の思想が今の現実の統治形態にそのまま落とし込めるとも思えない。しかし、熟議の困難さを今の政治や公共の閉塞の決定的な要因として捉える当初の問題認識からすれば、最終的な決定を熟議に委ねるという民主主義2.0の結論は、最後の最後で腰折れした感が否めない。せめて、熟議は必要だとしても、それを必要悪として捉え、いかにその力を極小化させるかについての言及が欲しかったと思う。本書が書かれて10年近くが経つので、筆者が今現在どのように考えているか、関心を持つところだが、最近の筆者の小論を読むと、昨今の言論状況に対して無力感を滲ませている。その原因は、私からすると、民主主義2.0において熟議の可能性を残存させたものの、やはりその可能性が断ち切られたことにあるのではないかと勝手に推察するが、いずれにしろ、一般意志2.0の切れ味、輝きへの憧れは捨てきれないので、筆者の思考の新たな展開に期待したい。
一般意思の新しい解釈をもたらした『ヒキコモリ』の政治学。ルソーを非コミュニケーション的人物とし、グーグルのシステムを加えた新たな、政治哲学の本。いささか新自由主義的なのが個人的には玉に瑕だが、新自由主義も立派な政治思想なので星には影響を与えていません。宇野氏との対談集は『弱いつながり』を読むと深い理解を得られました。
いやあ、これはすごい考えでした。読中もむむぅと唸りがとまりませんでした。どういうものかというと、、、「民主主義後進国から民主主義先進国への一発逆転。ユビキタスコンピューティングとソーシャルメディアに浸透された、まったく新しい統治制度の創出」(P.7)私の理解でいうと、法案審議や国会中継をニコニコ動画（風なもの）を見ながらやるべし、というなんともドラスティックな話です。ポイントは副題のある通り、ルソー、フロイト、グーグルです。・・・ルソーの一般意志というのは東氏曰く、「つねに正しく、つねに公共の利益に向かう」ものであり、私的な利害の総和ではないという。ん？既に実現不可能な概念を突き付けられた感があります。別の言い方では、個々人の利害の総和から「相殺しあう」ものを除いたうえでのこる「差異の和」だそうです。よくわかりませんね笑結局、彼は一般意志を算術的なベクトルの和のようなものと措定しています。とりあえずこれはこれでおいておくとします。・・・次にフロイト。ここでは無意識の重要性について力説し、実は一般意志は無意識（欲望）の集積であると言っているように見えます。そしてそのような無意識的欲望はツイッターなど、オープン過ぎて他者性を感じない環境に発露すると言っているようです。本来「正しい」一般意志がそんなSNSの欲望垂れ流しのつぶやきの和でよいのか分かりませんが、SNSが無意識的発言の集積たりえることは何となくわかります。故にか、名称は一般意志2.0、ネット時代の無意識的欲望のつぶやきの集積、といったところでしょうか。でも、まあ不思議、かつてのルソーの一般意志は全くの想像の産物でしたが、現代の情報化社会では一般意志2.0は現実に想像に難くありません。・・・そしてグーグル。検索のサジェスト機能が示すようにグーグルは大量の検索データを集積しています。東氏はこのような大量のデータベースがキーになると考えているようです。今でいうところの所謂ビッグデータから人々の無意識的欲望を形にすることを要求しているように私は理解しました。つまり、一般意志2.0のインフラとしてグーグルが持つようなデータベース（ビッグデータ）が措定されます。上記をあわせると、当初に書いたニコニコ動画方式の法案審議、みたいなものをやりましょうぜ、ということを主張しているようです。イメージは審議中にモニターに意見やコメントがどわーっと流れてくるやつです。・・・まずこの方式の良い点。これまでの定石？であった密室での決定を衆目に晒すことを可能にします。政治って年取ったおっさんがこそこそ勝手に決めているというイメージありますよね。そこにニコニコ動画式に審議の内容に対する感想が流れてくる。国民の無意識の総体ないし欲望がここで可視化されます。勿論、ビックデータから導かれる無意識的意識的欲望の数々ですから、政治家は言わば国の「理性」としてそうした欲望との対峙も要求されます。少なくとも完全無視はできません。またこの専門化した情報化社会で、政治参加のコストを圧倒的に下げてくれる可能性があります。市民運動とか、政治家になるとか、もう普通出来ないじゃないですか（時間も金もキャリア？も浪費する？＝コストかかる）。というか、国会で何をやっているかなんて、多くの国民は分からないわけです。でも内容を説明されれば感想くらいは言えますよね。税金が上がると言われれば即刻やめてというでしょうが、将来のためと言われればちょっと考えてしまう。こうして我々が意識的・無意識的につぶやいたコメントが政治家と対峙することで、国民は無意識的に政治参加することになります。・・・他方「衆愚」に陥る可能性は否めません。ただ、何をもって「衆愚」とするかはまた難しいところ。この専門化した社会、絶対的価値観がなくなった今、どこまで「選良」（エリート・官僚・政治家）の決断が正しいと言えましょう。何かの専門家がコメンテーターとしてワイドショーに出ていたりしますが、その筋の専門家でもほかの事では素人同然なのです（あるある）。むしろ相対的無意識的欲望こそが意思決定に叶うものかもしれません（ちょっと怖いけど）。また筆者はやや希望観測的に、人間の動物的共感というワードを提示します。利害は別として、苦しんでいる人がいたら、憐みの感情を「無意識」的に持ってしまう、と。つまりこういうことかしら。国会中継をニコニコ動画でやっていて、実際の政治家も四苦八苦しながら流れるコメントを受けた発言をする。1視聴者に過ぎない私は審議と関係あることないこと取り敢えず政治家のオッサンにネガティブになりそうな投稿を繰り返す（無意識的欲求？金満政治家に対するルサンチマン？それもまた無意識か？）。それでも必死に答弁を頑張る政治家を見ているうちに、すこし応援したくなってきて、徐々に攻撃から応援、さらに審議の内容を知りたいという欲求に転じるとか？私の理解であっているかは分かりませんが、このような形で、動物的な無意識的欲求をベースに（ニコニコ動画式）、ガラス張りの劇場で政治家の討議・熟議が理性的に果たされる、そしていざとなれば人間の共感が発露されどうにかうまくいくのでは、という感じか。こういう形で政治を展開されてはどうでしょうという提案だと思います。なお作品ではほかにもアレント、ハーバーマス、ロールス、ノージックなどを援用しつつ議論をまとめてゆきます。・・・ということで非常に刺激的な本でした。「夢を語ろうと思う」というセリフにたがわず、確かに実現するためには多くの決め事を決着する必要があります（ビッグデータからコメントを生成するアルゴリズムをどうするか、当該システム構築する企業は私企業でいいのか公社化がよいのか等）。だから今の体たらくの政治では何も決められずおよそ実現は難しそうですよね笑。それでも現状の政治を良しとせず、それを具体的にこう変えるべきだと語った点は非常に素晴らしいことと思いました。当初は眉唾物で読み始めましたが読後は「ありかも」という感想を抱きました。日本の政治を憂う方、民主主義ってどうなのと感じる方、現代思想が好きな方等々にお勧めできる作品だと思います。
哲学を哲学という名前でうまく名指せない時代であることを前提に。著者の言論行為の本気が、語りの形式から感じられます。論者が軽い語り口をとることは、知性を低く見積もられてしまう危険性をはらみます。哲学を深く意識してしまった人がとる作戦としては、捨て身に近いと思いますが、バズらせることが成功となる現代性を感じます。バズらなければ多くの人に伝わらない。伝わる人には放っておいても伝わるが、なかなか伝わらない人に伝えなければならない！（池田晶子さんの文章にも同じ気概を感じました。）大胆にも「無意識」を導入し、また、人間の身体性を「動物的」と表現するなど、現代思想の用語に無為に頼らないことが貫かれており、自然にじわじわっと言葉が入ってきます。（メディア論として読んでしまうと、「統計は大事だよ、もっと活用しようよ」で終わってしまうので注意。）でも、よくよく読むと本当にコワいほど切り込んで来ます。たとえば、こんな感じかなと。「考えない奴はもう無理に考えなくていいよ。統計情報さえ差し出してくれたら、飢え死にしない程度には政治と行政の最適化はやっとくから。」「うすうす気づいているとは思うけど、努力しない君の夢は実現することはないし、無限の可能性とか世界を変えたりとかは単なる君の幻想だから。」「でも絶望する必要はないよ。君はこれからも生きていけるし、君が望めば誰かとのコミュニケーション、いくらでもどうぞ。（AI相手かもしれないけど、、、）」「そうやって閉じこもるのも楽でいいけど、たまにはダイナミックな何かを見てみない？いやいや自己実現じゃなくて、たぶんサーフィン的な面白さの何か。」そして、いろんなことが高解像度で判明している現代の状況において、一切の欺瞞を許さずに組み立てられているように感じられます。（たとえば、人間の欲望と格差、生命と技術のせめぎ合いと市場性、国家と国民と社会、つまらない根性論？などで批判を加えても論理破綻がない。）コワい本です。10年後にまた読んでみたいです。
著者自身は「エッセイ」と断言しているが、明確な「政治思想」を提示し得ている。刊行後10年経っても内容は古びていないが、願わくば、改訂版・増訂版を読んでみたい！
ルソーの一般意志の概念が現代の高度情報社会では目に見えるものになった。これを筆者は一般意志2.0と名付け、現代の政治の場（熟議の場）に投影したら民主主義のレベルアップにつながるのではないかという主張が面白かった。
小堀桂一郎先生の「国民の総意」とはルソーの説く「一般意志」であり、現在の有権者の多数による全体意志とは別物である、との言葉に引掛かり、手頃な本を探していたところ、この本に出会いました。作者は、哲学者で旺盛な執筆活動をしているようです。ルソーは「社会契約論」で一般意志をときました。国家、民族、地域などの人間集団には、「公」に属する一般意志があり、それは、その人間集団の規範的な統一体として把握できる主権の所在であり、全体意志を超越する。個々人の利害の多数を占める全体意志は時代や状況によってコロコロと移り変わりますが、一般意志は討議、政治などによる意識的な合意ではなく、それらの基底をなす情念あふれる集合的な意識である。東さんは、ルソーの一般意思を「一般意志1.0」として、現代は、インターネット上に統合的に格納される膨大な情報を集団的無意識として捉え直し、これを「一般意志2.0」と名付けました。ICT社会の可能性を示唆した考えとしては、こんなのもアリかなと思いましたが、現実性、実現性については、「夢」レベルです。
一般意志はルソーが『社会契約論』で使った用語の日本語訳で、この本での著者の主張は「一般意志とはデータベースのことだ」(p.93)「一般意志は熟議を必要としない。」(p.88)ということのようです(「データベース」は今風に言えばビッグデータになるかと思います)。結局のところ、大袈裟に「構想」という程もない、「熟議」に代わる意思決定の手段が語られているだけのようでなので、お金を出して買うほどの本ではなさそうです。それでもアメリカでの話の「政府2.0」(p.113)やノージック(p.258)の本のことは、この本で初めて知ったことで、個人的には興味深かったので買って損をしたという感じでもありません。で星の数は、p.276-7に登場する「彼」の「夢」が叶う未来社会を構想する続編を東先生が上梓してくれることを信じて星3つにさせていただきます。と書きましたが、東先生のテレビでの発言がネットに載っていたのを見て、上に書いたような続編の可能性が無いことを悟ったので今更ですが星2にします。というか、その後更に、たまたま買った『不安な個人、立ちすくむ国家』という本に載っていた東先生の対談を読んで続編の可能性がまったく無いことが良く分かったので星1つにさせていただきます。ちなみに東先生は「電子国民投票」(p.203)に前向きではないようで、確かに全ての案件を国民投票にかけるのは勘弁して欲しいと思いますが、少なくとも代表(または代理人)の選出については、コストと即時性、更には民主主義を形骸化から救い実効性あるものにするために絶対押し進めるべきだと自分は信じます。なぜなら19世紀的な選挙システムへの固執こそが日本の衰退それ自体に他ならないからです。
Web 上には Fluentd を使用してみたという情報は多くあるものの、詳細情報を調べようとすると、個別のユースケースに特化した情報のみで網羅的な情報を確認することが難しくなっています。この本は、Fluentd を少し使ってみてもっとチューニングしたい、複雑なトラブルシューティングに備えたい、プラグインを開発したい、という方に最適な本だと感じました。特に 6 章、9 章は本番環境で使用されたい方は必見だと思いますし、12 章は豊富なソースコード例が載っておりプラグイン開発をされたい方には有意義な章となっていました。辞書的にも使えますし、しっかり読み込んで Fluentd を網羅的に確認したいというモチベーションの方には最適な本だと思います。
仕事の参考にさせていただきました。ヘルプサイトと言うと専門的なイメージがありますがやさしい解説のおかげで誰にでもできそうに思いました。
プロダクトマネージャーしている私としてはとても参考になった。ヘルプサイトのコンテンツを設計しようとしている人にはオススメします。ヘルプサイト自体の構築や便利なCMSなどの話は出てきません。最後はgitを使っての公開や管理方法まで丁寧に説明されています。
著者はサイボウズでヘルプ運用チームを率いていて、そのノウハウを惜しげもなく公開しているという内容。ヘルプサイトといってもつまりウェブサイト構築なので、Web開発でいつもやっていることも含まれているが、良いヘルプサイトに欠かせない要素（役に立つ、探しやすい、正しい、分かりやすい）を漏れなく実装するためのコツは間違いなく役に立つ。また、ヘルプサイトの役割として、製品の改善ポイントが見つかるというのは見逃していた。ヘルプサイトのアクセス数や検索キーワードから、製品のユーザーが困りがちなところが分かって、製品にフィードバックすることができるそうだ。Markdownで記事を書いてHTML化、文章のチェック（NGワード、誤字脱字、リンク切れ）、翻訳支援等を自動化しているそうで、具体的に使用しているツールと構成が知りたい。
とても詳しいです。情報もアップデートされていて信頼の置ける内容でした。入門書レベルではありません。
JIS の話ばかりで、一番必要な、Unicode について舐める程度で、まるで参考にならない。
テキストはとても分かりやすく大満足です。なんなら、色んな分野で「できるシリーズ」出して欲しいくらい。ただ電話無料サポートは当たり外れがあります。返してくださる方の人間性が出るといいますか。ここに電話やメールして聞くより、ネットで調べた方が親切でした。これは私感ですので悪しからず。
見やすく解りやすい内容です。再確認に良いです。
Excelで大量のデータをデータベースとして使用するための教科書です。データベースとは何か？についても書かれています。AcccessなどのRDBMSを学ぶ前の人にもわかりやすいです。Excelがデータとして扱える最大件数は1,048,576 件なので、データ件数がそれ以上に至らなければデータベースとしてAccessの出番は無いようです。私が購入したのはKindle版なのですが、画面をタップして表示されるメニュー画面左上の「三」のようなボタンをクリックすると、画面右に目次が表示されるので、任意のレッスンにジャンプできます。各レッスンには対応したダウンロードファイルを使い、レッスン１からレッスン７０までハンズオンで学習できます。また、Kindle版は固定レイアウト型なのですが、拡大しても見やすいので助かってます。画面の拡大・縮小は人差し指と親指で画面を広げたり、縮めたりするとできます。画面をダブルタップすると普通の画面に戻ります。固定レイアウト型は検索やハイライトはできませんが、私にはこれで十分です。ちなみに使用しているのはFire HD（８インチ）です。次はパワークエリに挑戦したいです。
第1章がデータベースとはなにか第2章がテーブルの使い方第3章でデータ入力の基本といった感じで、全くの1から顧客リストや売上リストなどのデータベースを作りたい人向けでしょう。コピペの仕方まで載っています。この本の対象は概ねこんな感じです・エクセルがパソコンに入っている・エクセルへの入力ができる・エクセルで顧客管理などのデータベースを作成できたら楽だなと思っている・新入社員などで入社までにエクセルできますって言えるようになりたいエクセル持っていなくても形式は違うけどgoogleスプレッドシートでも同様に練習できますパソコンに慣れている人ならば基礎知識、もしくはネット検索で済ませられるところですが初心者の人、本で学習したい人にはもってこいだと思います。テレワークなどでオンライン化が進んだけどエクセルがよくわからない人は買ったほうがいいでしょう。最終的には、データ分析（といってもSUMIFとか、COUNTIF関数）ができるようになります。エクセルを使ったことがあって極めたい人にはおすすめしません。初心者さんは、練習用のファイルもダウンロードできるため、エクセル本にありがちなやり方は分かるけど、実際計算する数字がないという罠も回避できます。
私は普段、Excelは表計算や申請書（フォーマット）として使っています。データベースと言えば「アクセス」のイメージなのですが、Excelでもデータベースを扱えるようです。ただし、『数万件規模のデータならアクセスの方が良い』と本書では書かれています。アクセスは敷居が高いので、今の所使うつもりはありません。この本は基本的な事：データベースの基礎知識準備：データ入力のルールなど実践：データベースの活用方法と分けられており、わかりやすく書かれています。使いこなしている人にとっては当たり前の内容かもしれませんが、初心者には非常にわかりやすい1冊になっています。私は仕事柄、エクセルは簡単な表計算（集計など）でしか使ったことがありませんが、データベースとして活用できるなら、効率的にデータを管理できそうです。PDFのダウンロードやスマホでの動画視聴サービスもあり、手厚い1冊だと思います。エクセルの『超』初心者用ではありませんが、エクセルをデータベースとして活用したい人の入門にはちょうどよいのではないでしょうか。
データベースと聞くと難しそうな気がしますが、要するにエクセルで表形式に入れるデータから、必要な情報を抜き出したり、データの傾向や関係性を分析したりする方法を学ぶ本です。本のサイズがＡ４より少し小さいくらいの大きさなので、文字が大きくて見やすいです。また、エクセルの画面のキャプチャもたくさんあるので、実際にどの様な画面になれば良いのかが一目でわかって理解し易いです。内容は、７１のレッスンに分かれていて、１レッスンづつ進める様になっています。１～８レッスンまでが基本編で、エクセルの表にデータを入力する時の基本的な設定方法やコツが解説されています。いままで普通にエクセルの入力をした事のある人なら、難なく理解できるレベルです。９～３０レッスンまでが準備編で、各セルのデータの意味の持たせ方や、無駄な入力や作業を避けるためのテクニックなどが開設されています。ここまで学ぶと、そこそこエクセルを使いこなせる人って事になります。ＩＴ系では無い普通の事務の人なら、ここまでできれば、年配のオジサンたちからはヒーロー扱いされるレベルだと思います。３１～７１レッスンまでが実践編です。ここまでくると、市販の会計ソフトや販売管理ソフトなんかと同じような仕事がエクセル上で実現できます。難しい市販ソフトの画面と違って、ただのエクセルの表ですので、セルに入力する情報に意味付けするだけで、こんな事が出来るのかとびっくりします。毎年ちゃんとデータを保存しておけば、昨年と比べてどれだけ売り上げが伸びたかとか、売れ筋の傾向分析なんかも、ただのエクセル表から簡単にできます。ここまでくれば、ヒーローを超えて、神扱いしてもらえるでしょう。但し、関数やマクロの説明は省略してあるので、そのあたりを学ぶには、別のテキストが必要です。むしろ、このテキストを読みこなせば、次のステップの本が欲しくなるのは当然ですね。
pythonやアクセスを使うということも検討したりするのですがpythonでエクセル操作を行うくらいで止まっています。やはり、自分以外のメンバーが関わるときはエクセルで完結している方が面倒が少ないです。最後の章のパワークエリが本当に便利なのでここの活用は絶対覚えた方がいいと思います。リレーショナルデータベースが作れれば、会計帳簿くらい簡単ですしお勧めです。データを切り出して自分用の分析手法として役立てればかなり便利です。
普段のエクセルは単純な集計作業に利用していたので、まさかデータベース的な使い方ができるとは知りませんでした。なので、テーブルやフィールド、レコードのデータベース的な概念を知らない方はその辺の知識も入れといたほうがいいかも。私はデータベースソフトをかじっていたのでその辺りはすんなり飲み込めました。フィールドの種類の設定の仕方や抽出方法を学んでいけば、普段手作業で埋めている部分を自動化でき、効率的な集計は勿論、データの転用も用意になるものなので、学んでおいて損はないです。但し、データベース構築前にある程度どのような物を作りたいのか設計しておかないと、煩雑で非効率なデータベースになってしまうので要注意。エクセルもデータベースも初心者の方にはちょっと敷居が高いかなと思います。
Excelでデータベース。ある意味理にかなっていると思います。データを直接的に扱え、直で入力して、配置する。修正も容易です。何より慣れ親しんでいる。かく言う私もエクセル歴はもう20年に及ぶと思います。マスターしてはいませんがそこそこ使える方かと。というか毎日使いますよね。本書は入門初心者向けではなく、そういう普段からエクセルを使う人がよりデータベースとしてエクセルを使いこなすためのTIPSが豊富に書かれています。これを一通り読み、試すことでエクセル力が上がり、仕事にこれまで以上に使えることになるでしょう。あ、決して難しいものではないです。vlookupやif関数などを少しでも使えればすぐできるレベルです。無料の電子版や電話サポートが付いているのも評価が高いですね。
エクセルのデータ入力からデータ分析までを学べる本です。フルカラーで300ページ余り、しっかり学べますね。独学ではなく基礎から最短で学ぶにはかなり有用です。しかも無料の電子版付きだし動画解説も観られるし無料電話サポートもあるときたら、パソコン教室要らずです。基本編、準備編、実践編と分かれており、実践編が充実しています。すごい。1章・エクセルで効率的にデータを管理しよう、2章・データをテーブルに変換して扱いやすくしよう3章・性格で効率的なデータの入力方法を知ろう、4章・既存のデータを取り込んで活用しよう5章・表記を統一してデータベースの信頼性を高めよう、6章・データベースから特定のデータを自在に取り出そう7章・データを思い通りに並べ替えよう、8章・フィルター機能で目的のデータを取り出そう9章・条件付き書式でデータの傾向を可視化しよう、10章・目的に沿った方法でデータを分析しよう11章・ピボットテーブルで集計表を作成しよう、12章・大量の外部データを効率的に処理しようかなり充実しています。侮れません。しっかりきっちり基礎から学びなおしたいあなたにも最適です。
営業事務で名刺やリード情報の管理業務が上手くいっていないためこちらの書籍を購入。対談形式で展開している箇所などもあり最後までスッと読むことができました。中でも、見込み管理が「おもてなし」につながるという話は目からウロコでした。この本を読んだことにより、フロントオフィスを設計することが業務効率化だけではなく、その先のお客さんのためにもなると知ることができたので★5です。
2022年11月25日に日本でレビュー済み 日ごろからすべての物事はゴールまでのデザインが必要と考えていますが、この本にはどのタイミングでその素材が必要かという本質が書かれていました。営業職、マネジメント層にお勧めの一冊です。
どの企業も抱えるフロントオフィス「無駄」の削減。本書では、その削減方法とそれにより解決できることが明確に書かれてあるから「営業部門の仕組化」を実践しやすい！特に第2章と第5章はとても参考になる。「見込み客」を追わないのは、管理機能を作りだけで解決できることも多くあるので本当にもったいない！気付いてからではもう遅い。本気で営業のDXに挑む企業のための必読書。
簡単で分かりやすくまとめられた本だなど思いました。何かしないといけないと思っている方（経営者さんが多いのでしょうか？）におすすめの入門書的な感じ。ツールをいれるだけではうまくいかず効率的な営業ができるわけじゃなくて、社内の課題やチベーションなど、様々な課題があります。それには設計図が必要で、それの具体的な方法が書いてあります。導入についても社内ので説得が必要！という点でもどう説得するか勉強できそうです。
前作の「バックオフィス最適化マップ」を読んで、社内浸透に役立ったので著者の次作に期待して購入。実際には営業活動を担当はしていないが、ITを活用することで「トップ営業マンに依存する」状態から抜け出す必要性があることが理解できた
商品説明にあった「名刺やリード情報はもらって終わり……。」ってまさに私がそうで、もっと効率的にできたらなと悩んでいました。自分だけだとメモしてそのままになってしまっていました。会社で仕組みとして構築してほしい、提案してみようと思いました。第2章が特に勉強になりました。
上司がチームのみんなにこれ読んでみてと渡されたのをきっかけに読んでみました。リード客を獲得することに模索してなかなか既存の顧客様の整理に手をつけられずにいたので、改めて落ち着いてまずするべきことは何かを考える時間を取る良いきっかけになりました。最後にQRコードが付いてあり、読み込むとフロントオフィスの設計図のテンプレートがもらえました。こちらも活用し、やるべきことを明白にしてより良い営業活動を行おうと思います。
タイトルに惹かれて買いました。大事な箇所にはあらかじめ赤線が引いてあるので、とても読みやすく、分かりやすかったです。
営業の仕組み化って後回しになってしまいがちだけど、この本を読んでどうすればいいのかがイメージ出来ました。入門書的な感覚で分かりやすく、身構えずに読めます。
営業知識が浅い人から深い人まで、わかりやすく事例が挙げられていてとても理解しやすかったです。ポイントにははじめからわかりやすく赤線が引いてあるのも良かったです。読みやすくすぐに読むことができました。これからのITによる営業の仕組み化はかならず持っておくべき知識ですよね。
Python初心者から次のステップへ進もうとしていたのだが、中級者向けの本が難しく、挫折していた。この本により、足場固めができて、次のレベルに進めそうである。著者に感謝したい。
ゲームプログラムを作ろうと思い、最新の技術を勉強するために購入した。
本書は、Pythonのプログラミング言語仕様の基本から、パッケージや環境構築などチーム開発の実践に必要な知識までを解説する。細かい点まで解説されていたり、どの公式リファレンスを読めばいいかということも書かれているので、仕事などである程度実践の機会があり、ちゃんと学んでステップアップしたい方には有用だと思う。ただ、本書だけでは実践につなげる課題が少ないのと、淡々とした説明でモチベーションアップにはつながらないため、1から学ぼうとするには向いていない。どちらかというと、リファレンス的な使い方になると思う。あと、各章に章のまとめがあるが、あっさりしていてあとで振り返りがしづらく、まとめの意味があまりなかったので、もう少しポイントを載せてくれていたら良かった。■内容に関してピックアップ・特定のメソッドの引数や戻り値を調べたいときは、組み込み関数 help() にそのメソッドを直接渡すと便利。・変数名には local_number のように小文字、定数名はCONST_NUMBER のように大文字を使うことが推奨。・Pythonのfor文は、変数のスコープをブロック内に限定しないため、通常の変数への代入と同じ扱いになる。・Python 3.8では、{} でくくった変数や式に = を付けると、評価結果と同時にその変数や式を文字列で表示してくれる機能が追加されており、デバッグなどで重宝する。・イテラブルなオブジェクトのうち、集合とリストやタプルとの違いは、集合は要素の重複を許さず、要素の順番を保持しない。・return 文が実行されたりされなかったりする一貫性のない関数は保守性が低くなるため、return 文を使う関数では、 return 文が常に実行されるようにし、戻り値を明示する。・インスタンスメソッドをあたかもインスタンス変数のように扱う機能をプロパティと呼び、@property が付いたメソッドは値の取得時に呼び出されるため getter と呼ばれる。・Pythonのクラス機構は多重継承をサポートしており、クラスを定義する際に、基底クラスをカンマ（,）区切りで複数並べると、多重継承になる。・ジェネレータ(yield)を使うと、リストやタプルに比べ次の要素が求められるたびに新たな要素を生成して返すため、逐次処理などのパフォーマンスが向上する。・Pythonで並行処理を実現するための選択肢として、マルチスレッドを使う方法、マルチプロセスを使う方法、イベントループを使う方法がある。・gitignore の作成にはgitignore.ioというサービスを使うと便利。
Python初心者向けで、実例がとても豊富で便利です。構成は、・文法の説明・実例のコードと解説と注意点となっておりシンプルです。目次から目的の機能を探して読み、実例コードを参考にすると言った利用方法がベストな使い方でしょう。理論的な入門が苦手で、すぐに試してみたい方には最適な本だと思います。
初心者向けすぎず読みやすい。1点難があるとすると、PowerShellでDockerを実行する際の注意事項が記載されておらず、手間取った。MacOS主体で話が進むため、Windowsを使用している人には少しわかりにくい点がある。
最初の1/3くらいは、pythonをある程度かじった人なら知っていて十分理解できる簡単な内容ですが、後半になるほど、中級者以上向けの「なんとなく存在は知っていたけれど、あまり使い方がわからずスルーしていた機能」がわかりやすく説明されています。トリッキーなテクニックに関する説明はほとんどないですが、百科事典的な使い方をすることにより、技術の底上げに役立つことでしょう。
プログラミング初心者が読む本というよりも、他の言語を勉強した事がある人がPythonを勉強するために読む本だと思います。言語についての基本から詳細な部分まで書かれているのでサンプルコードを入力しながら読んで行くことで学びを深める事ができると思います。
文法などがほとんどだが、初心者が熟読すればとても役立つと思う。この本で足りないところは、多数の本を買うよりネットで調べれば良いと思う。
この本の良い点は1. 文章が非常にシンプルに書かれていてわかりやすいこと2. サンプルコードとコメントが丁寧で何をしているのかが明確3. 文章が単純に書かれているので詳細な解説は省かれているが、公式ドキュメントへのリンクが記載されている。ちょっとわからないなと思ったことは自分で調べて理解が深まる。本書は基本的なPythonの言語機能の解説から始まり、より高度な機能の解説をしてくれています。実際に動かせるようにサンプルコードもコメント付きで丁寧に解説されています。サンプルコードの量で言えばほぼ全てのページに書いてあるくらいの量があるので、解説されていることについては実際にコードで確認することが可能です。本書の最も優れている点は、Pythonの言語機能の解説にとどまらず、それを使って実際に小さいアプリケーションを作るところです。開発に必要な仮想環境の用意の仕方や、CircleCIを利用したCIの設定も含めて丁寧に解説がある素晴らしい本でしたこのレビューを書いている2020/02時点で、私は仕事・(Pythonを触り始め2〜3年目くらいです。業務としてやっていることは主にJupyter Notebookを使った可視化や機械学習のモデル作成になります。モデル作成の検証をするだけ問題がないのですが、いざそれを自動化しようとしたりアプリに組み込んだりしようとすると必要になるのは「開発をする技術」です。実際に開発をしようとすると勝手が違い、戸惑いや引っかかってしまうポイントがPythonでもたくさんあります。また、実際に開発していく中でこういうことできたらもっと楽に開発できるのにということもありました。多くのことがこの本で解説されていて、これからの開発をもっと生産的にできるようになれるんだという自信をくれました。この本は再びPythonという言語の面白さ、開発することの楽しさを分かりやすい解説とコードを通じて教えてくれる、「実践に入門」することを導いてくれる。そんな、素敵な入門書となっていました。
Pythonは言語仕様がツギハギっぽくて毛嫌いしていたが、本書を読むことで少し嫌いではなくなった。ディレクトリ階層がそのままモジュールと名前空間の階層になるのはシンプルで好きになところ。Pythonを浅く中途半端に知っているプログラマがPythonへの理解を深めるには良い書籍と思う。記載内容について問題点は特に見つからず。
SQLの勉強に使用しました。手でSQLをひたすら書くので体で覚えます。若干、誤記や問題に前提が抜けている箇所があるので注意が必要です。
演習ソフトが付いていて、ゲーム感覚でSQLが学べます。この本のおかげで仕事でSQLが多少書けるようになりました。ソフトがメインで、本はおまけな気がします。本の解説自体は普通です。でも、実際に演習出来るソフトが優秀です。実行時に「正解のSQLの実行結果」「入力したSQLの実行結果」が比較して出てくるので間違えた時にどこに原因があるかがおおよそわかるようになってます。最後の章だけ急に難易度が上がりましたが、そこは解けなくてもまあ大丈夫な気がします。「不親切」と言ってる人がいますので具体的に反論します。>計算ドリルのように何度も書いて身体で覚えるというコンセプトはいいのですが、問題の出し方が不親切です。例えばSQLで取り出した項目が何なのか分かりやすい様に名前をつけるのですが、その名前の指定がないにも関わらず自分で勝手につけると間違いになります。問題がアバウトで答えを覚えないと正解になりません。他には身長が高い人を取り出してとありますが、その基準が書いてない。180cm以上とか指定して欲しい。また消費税が5%のままです。これ、そもそも読者が自力で解くことを想定していない例題に限った話なので、この指摘は不適切かと。>解説だけならまだしも、問題文からして不親切。>カラムの順序が問題文と解説とで違っている。読んだの結構前ですが、覚えがありません。少なくとも演習ソフトには誤植はなかったはず。>しかも例文だけでは理解できない演習問題に対して解説がない。一部の問題にしか解説がなく基本的に答えが載ってるだけでしたが、それでまったく不便は感じませんでした。
計算ドリルのように何度も書いて身体で覚えるというコンセプトはいいのですが、問題の出し方が不親切です。例えばSQLで取り出した項目が何なのか分かりやすい様に名前をつけるのですが、その名前の指定がないにも関わらず自分で勝手につけると間違いになります。問題がアバウトで答えを覚えないと正解になりません。他には身長が高い人を取り出してとありますが、その基準が書いてない。180cm以上とか指定して欲しい。また消費税が5%のままです。
この本の前の版の読者だが、改訂版が出たということで、もっと多くの人に読んでほしい、非常におススメの本なのでレビューを書きたい。実際に手を動かしてSQLを学ぶドリル本だが、とにかく秀逸なのが、「書き順」の指南である。RDBと正しく「会話」するための書き順がその考え方とともに解説されている。これをきちんと考えながら繰り返していくと、本が終わるころには、以前の力量では書けるとも思えないような比較的長いSQLが、半ば自動的に書けるようになってしまう。頭の中でSQLがまとまらず、必要に迫られたとき、その都度SQLプロンプトで試行錯誤しながら、なんとなくツギハギのSQLを書いている、そんな状態の人に、特にお勧めしたい。自信が付き、なんとなしに感じていた不安がなくなるはずだ。
解説だけならまだしも、問題文からして不親切。カラムの順序が問題文と解説とで違っている。しかも例文だけでは理解できない演習問題に対して解説がない。この本の特徴は、「書き順」の導入なのだが、正直言って、「書き順」のページはあまり役に立たない。書き順を載せたばっかりに、解説が薄くなってしまっては本末転倒である。他のドリル本との唯一の優位点は、小売業のデータベースを意識している点である。私は他のドリル本を強くオススメする。
金をドブにすてました
SQL Serverのエディタの操作性も併せて知りたかったですがそういうことは殆ど書いてないです図解で表現すれば簡単にわかりそうなことを文章でダラダラ書いてるのでわかりづらいです笑
仕事で使うDBMSがSQL Serverなので、方言を学びたくて読んだ本。Transact-SQLを使うと想像していたよりもいろいろなことができることがわかった。充実の一冊。
現状、SQLServerでの開発で最も実践的な書籍と思われ、中級者向け。業務システムの開発現場でヒントになる具体的なサンプルコードもあってお勧め。
SQL Serverの定番本といえば、松本さんの「SQL Server 20xxの教科書」と長岡さんの「SQL Server 20xxデータベース構築・管理ガイド」(それぞれxxには年度の数値がはいる。最新はそれぞれ2016)が有名ですが、それに加わる「第三の教科書」が本書です。店頭で見て、私にはなにかしっくりきて、その場で衝動買いしてしまいました。なんか構成と内容が私にあうんですよね。本発売時点の最新GAである2017に対応していますし、2010年にでた2008R2以降の機能差分などもわかりやすいですし、ストアドや、DBにアクセスするコードサンプルも必要十分なものがそろっているイメージです。他の二冊とともに、定期的に更新してほしい一冊です。
ノック３５でis_deletedが重複するためエラーになります。
・良い点：前処理を含め、簡単なデータ分析の一連の流れが体験できるなかなかイメージしづらい分野でもあると思うので、最初の一歩としては一読の価値があります。章ごとに実際の顧客をイメージした(簡易な)問題設定がされており、それに対する回答を導くために分析を行っていく。(実際はどうか分からないけど)ただモデルに突っ込むだけでなく、「顧客に対して説明可能であること」にも重きを置いており好感が持てます。(※モデルの詳細な説明はないので理論の補充は次なる一冊が必要になる)＝＝＝・悪い点：とにかくコードが冗長だったり、読みづらいforやifの深めのネストも散見されますが、それはデータ分析に慣れていない初学者によりゴリゴリどの位置のデータをどう弄っているのかイメージさせるため・・・、と推測しています。しかし、なによりまずはコーディングルールを統一した方が良さそうです。スペースとか、''とか""とか、そういう簡単なとこだけでもサンプル改変する方がいいと思われます。
「実践データ分析」という本題の通り、現場で実際に用いるようなデータをどのように加工するかに焦点を当てた本。欠損値があったり言葉の揺らぎがあったりと言った「加工前のデータ」からpythonを用いて前処理、分析をしていく一連の流れをいくつかのユースケースで実装していくようになっている。純粋なpythonの学習をしたい人にはコードの揺らぎ等もあり、おすすめできないが、実際の現場で活用を検討している人には参考になることが多い。100本ノックと言いながら、最初から通して100本をこなすような本ではないかも。やりたいことに合わせて、10本ずつ進めるのが良いか。ただ、少しずつやりたいことに合わせてコードを改変していき、都度実行して答えが確認できる、という意味では良い練習ができる。読みづらいコードがいくつかあるので、もう少しコード内にコメントは欲しかったかな・・。その辺りを自分なりに書き換えてみて、ちょっと違うコードで同じ内容を実装することも良い練習になりましたが。
Kindleでやすかったので買ってみましたが、みにくいです。あと正誤表pdfというものがありますが、そこに載っていない実際とは違うちょっとした動きをする箇所がありわかりずらいです。
基礎なのだと思いますが勉強になりました。
まだ半分ほど読み進めたところなので、読了していないのですが、不満があります。DataframeにForループを適用するような処理がしばしば。配列のまま処理すれば１,2行くらいで出来て、しかも高速なのに、わざわざforループを回し、行ごとの処理をします。流石に知らないとは思えないので、Forループのほうが理解しやすいと思ってのことなのか。（私個人としては、ぜんぜんそうとは思えません）分析も、適切とは言い難いところもありました。例えば、入会から退会までの差分で会員の継続期間を取る処理、まだ退会してない会員は次月に退会するとして処理するというのは違和感でした。カプランマイヤーを使ってでの"イベント"を"退会"に、現時点で退会してない場合は”打ち切り”扱いとして、起点を揃えて解析するのが筋かなと。
課題内容は実際の業務に利用が可能であり、実践的な内容である。ただし、コードの解説が若干不親切であるため星４つ。例えば関数の引数や変数が何のために用いられるかコメントが無いために、自身で推測していく必要がある。
ライブラリ由来の不具合でプログラムが作動しないことがあり（MeCabなど）それについてはこの本には書かれていないので、必要に応じてGoogle先生のお世話になりましょう。このくらい乗り越えなれないとデータ分析はものにできないという事でしょう。何事も経験。
Pandasを使ってのデータ加工、分析、機械学習（教師なし、教師あり）、最適化、画像処理、言語処理と、盛りだくさんですが、却って中途半端と言えなくもない。タイトルから想定する、泥臭い、現場寄りのデータ分析の独学書を期待する者としては、Pandasを使ったデータ加工、分析だけで1冊使っても良かったと思います。内容自体は優れている。
Pythonは５年ほど書いてますが、データ分析初心者です。取り扱っている内容が、データのクレンジングや前処理、機械学習、最適化、シミュレーションなど、幅広く、でも深入りしすぎない程度に扱ってくれており、大変充実していました。コードの解説も、あまり下手に「うつくしすぎる」コードを使わずに説明してくれており、直感的に理解できるようになっていると思います。ただ、ちょっと誤植が多いのが気になりました。そこを妥協するととても良い本です。
子供に試験に買いました。
説明が概要と詳細で二回の説明になっている。但し、概要が冗長で詳しすぎるので詳細が煩わしくなるが、詳細を読みきらなければ動作が完了しないことが多々ある。概要と詳細の位置づけを要領よくすべきだ。実際の作業で出るエラーに対する解説が不親切で理解し難い。
基礎編ではAccessの基本的な操作がメインで学習する事が出来たが、応用編である本著ではAccessの機能を少し掘り下げる形で学習を進める形となる。説明の丁寧さはさすがと言うべきか、独りよがりな説明で学習者が置いてけぼりになるような事は無く、「応用編だから説明しなくても分かるでしょ。」という事も無い。Accessから少し遠ざかっていた方にも、応用編ながらRDBの説明や基礎的な説明は少しながらされている為、ブランクがある方にも学習がしやすい本だと思う。これ一冊でAccessの全てを理解するのは難しいが、更に発展的な解説書へ進む為の足がかりにはなると思う。
Access2003当時から使用しておりましたが、2019とバージョンアップしましたので応用編で復習しました。一通り学習して理解できました、独習の皆様には是非お勧めしたい本です。
拡大しないと見えないし、使えない。また、すぐキャンセルしようと思ったが、キャンセルもできないのはおかしい。
ハッシュの解説から始まり暗号資産(仮想通貨)でのブロックチェーンの使われ方が平易に語られています。特に、一定程度の無駄(により生まれるコスト)等がその信頼性・安全性の源泉になっていることから、ブロックチェーンを他のシステムにどう組み込むのが有効なのかという点について、筆者が逡巡している点が印象的でした。ブロックチェーンのメリットとデメリットを知るには良い本だと思います。他方で、暗号資産以外のシステムへの具体的な適用例の解にはあまり触れられておらず、この点を求める方には問題提起だけで終わる消化不良な本になるかもしれません。また、すでに一通り暗号資産・ブロックチェーン関連の本を一通り読んでいる方も、すでに知っている内容が多いかもしれません。
インターネットに知識がなくともブロックチェーンの思想や構造を理解できます。
本書は、入門者がブロックチェーンについて取りあえずちゃんと受け答えができるレベルの知識を提供する。ざっくり言えば、「ブロックチェーンで何となく良さそうだけど、どんなもんなの？」という疑問に答えてくれる。ビジネスへの適用を考えたときの課題も1章使って説明しており、「ブロックチェーンは何に向かないか」がわかる。技術についての解説もあるが、ハッシュや暗号について知らない人でも読めるくらいなので、その点は深堀りしていない。前提知識なしに漠然と期待感を持っている場合には、本書の読後には、おそらくブロックチェーンについてややネガティブに感じるのではないか。それを踏まえて、初めてこの技術をどう活用するかが議論できるのだと思う。何らかの形でブロックチェーンの検討に関わるなら、基礎知識として読んだ方がいい一冊。以下特徴と課題に関するメモ。■ブロックチェーンの特徴・強み・ブロックチェーンの特徴→１：分散型データベースである ２：非中央集権型である ３：書き込み専用・改ざん困難である。・分散型のため、単一障害点（ＳＰＯＦ：single point of failure）がなくなる。・特定の管理者による不正や改ざんを許さない（ただし参加者による不正の手法は存在する）。・参加者全員の間に何の信頼もないネットワークでも、信頼できる取引や決済ができるしくみを生成できる。・前ブロックのハッシュ値が今のブロックのブロックヘッダに組み込まれるため、一つを改ざんしたらそれに紐づくチェーンを全て遡って改ざん必要になり、非常に困難となる。■ブロックチェーンの弱み・課題・頻繁にシステムに変更を加える用途に、ブロックチェーンは向かない（一度動き出すと、変更が非常に難しくなる）。・データの秘匿用途にはまったく向かない（参加者全員で検証が必要）。・処理効率だけを考えるなら、中央集権型のシステムのほうが優れている。・システム稼働直後からのすべてのデータを記録し、そして消さないため、長期的にデータ容量が膨れ上がる。・ブロックチェーンの各参加者に処理を担当してもらうためのインセンティブ設計が難しい（ビットコイン等の暗号資産の分野で浸透したのは、通貨というインセンティブが出しやすい）・システム運用に大量の電力消費・コストが必要になる（しかも社会的には無駄な作業）。
仕事で急遽ブロックチェーンの勉強をしなけれなならなくなったのですが、この本一冊で十分理解できました。週末の１日を使えば読めますので、忙しいサラリーマンには最適の本です。
インターネットの衝撃と同じものを感じさせるもてはやされかた。その実態を知ろうと購入したが、理解不十分。そんなに化ける技術かな？
本題の「ブロックチェーン」にたどり着くまでの説明が長いのですがその部分こそが、私のような素人に必要な情報でした結果的に、よく理解することができました
ビットコインとかブロックチェーンとかは良く目にするので向学のために何冊か買いましたが、ビットコインは元々のサトシ・ナカモトのホワイトペーパーが9ページしかない、と良く書かれているにもかかわらず、いくつもの要素から構成されていることもあって、なかなか理解が進まなかったのですが、このブルーバックスの一冊はブルーバックスらしい、予備知識を必要としない縦書きの一般向けの解説書でありながら、技術的な勘所を押さえた、分かりやすいだけでなくワクワク感もする素晴らしい本です。この本を読んでから厚くて詳しい技術的な解説書を読めば理解が捗りそうです。それから特にこの本をブロックチェーンの必読書としてお薦めしたい理由は、予備知識を必要としない分かりやすさやワクワク感だけではなく、眉唾な宣伝しか書かれていない有りがちな本とは違ってブロックチェーンの冷静な評価・展望が語られているところです。ちなみに他の方のレビューにあるとおり、本題というか書名のブロックチェーンの話に入るまでのハッシュ関数などについての前段が長めですが、自分はここを読んでようやくハッシュ関数とかハッシュ値がどういったものなのか分かったので、自分としては全く問題ないと思います。
ブロックチェーン技術について技術雑誌で知っている程度の初学者ですもう少し深く知りたいと思い本書を読んでみました本書は読者の理解を促すために構成と内容が工夫されていて一気に読み終えることができます　コンピュータやネットワークについて或る程度の知識は必要ですが　例えば１６進数やコマンドプロンプト画面，ファイルの圧縮と解凍，暗号，データベースなど　それも言葉の意味程度に理解しているだけで良く　技術内容を深く理解している必要はありませんそして「あとがき」では学習をさらに進める為の推薦図書の一覧が掲載されていますのでブロックチェーン技術を一層深める為にも参考になると思います　ブロックチェーン技術について著者は　「相互に信頼していない人同士で構成されたネットワークで、信用が生み出せる」　「これは画期的である」　と「終章」の中で述べています
管理者不在のしくみ。データの変更や改ざんが不可能な「データ蓄積システム」。
ざっくりと、ブロックチェーンとは？どういう仕組みで、何のことで、どういう風に使われていて、現状と今後について、なんとなく知りたいというレベルには、ちょうどよい感じがしました。ただ、ハッシュとか、公開鍵の解説などもありましたが、これらはこの本だけで理解するのはむつかしいかと思います。どういった読者を対象にしたのかわかりませんが、この辺の部分は知らない人にはむつかしいし、知っている人には邪魔だし、もっと減らしてもよかったのではないかと思います。結局、ブロックチェーンは流行りだし可能性はあるかもしれないけどまだまだどうなるかわからない問題だらけの状態だということはよく分かりました。個人的にはやはりコインチェックなどの仮想通貨には手を出そうとは思いませんでした。ちょっと前にエストニア政府がブロックチェーンを改良したもので電子政府を作ってずいぶんうまくいっているような話の本を読みましたが、そいういう世界の情勢などについてはこの本にはなくて、ちょっと残念でした。
GISの概念等を他の本で勉強した後に、いざGISを扱うぞ！となった時に読むべき本かと思います。これ一冊で簡単な操作は一通りできるようになります。
会社のできる人たちは、サクサクとQGISを使いこなしているので、良い本ないですか？と聞いて、教わった本や借りた本でも、チンプンカンプン。そんな時に、この本をAmazonで発見。価格はお高めでしたが「専門書あるある」と覚悟を決めて、購入。先日届きましたが、解りやすい！！モノの数分で、やりたいことが出来るようになりました。まだまだ覚えることはありますが、こんなにスムーズに出来た書籍は初めてです。QGISを扱う職場に1冊は置いておくべき書籍だと思います。でも、会社の人には教えません！笑
ほかの方も書かれていますが、Q-GIS関連の本ではこれがベストだと思います。最初からこれを買っておけば良かった後悔してます。この本のおかげでようやくQ-GISが使えるようになりました。
初めの一歩としては、とても分かりやすいと思います。
ＧＩＳは長く取っ掛かりにくいソフトウェアと思っていましたが、この本を入手して以来、あっという間に使えるようになりました。さっさと買えば良かったと後悔。絶対買いの本です。
他の書籍も３冊ほど購入したが不親切だったり中途半端だったりのものばかり。少し高いがこの書籍を購入してしまおう。この書籍は実務にそって大変しっかりとした内容のもので、とてもおススメできる。QGIS入門なら一択だと思う。強くお勧めする。
本の内容自体は求めていた内容であるが、商品到着後開封した際、既に帯がヨレヨレ、破損箇所も見受けられ、新品を疑う状態で届いた事が残念。安価な書籍では無いだけに憤りを感じる。パッキングせずに封筒に入れて輸送したら、封筒の中でどのような状態になるか想像願いたい。書籍梱包基準検討願いたい。
林業をテーマにしていますが、QGISの基本について、網羅的な解説があります。しかも、わかりやすい。商圏分析など応用技術は書かれていませんが、それはその分野の専門書に任せるとして、QGISを導入するに当たって必携図書と思います。
QGISからQFieldへの変換方法が詳しく記載されているものと思い購入しました。しかし、QGISのみの説明でQFieldへの変換に触れていませんでした残念です。
教員です。次期指導要領で地理必修化、さらにGISや防災教育も明確に盛り込まれるので今からきちんと勉強しておきたいというニーズに応えられる内容だと思います。ただし、高い。あとは、本にある内容をスムーズにこなすためにはそれなりのスペックのパソコンが必要。私も頑張って勉強します。一緒に勉強しましょう！
船井総研が研究しており、他者との違いや活用シーンが明確なので分かりやすい。SFAや社内基盤導入または見直しを考えている企業は読んだほうが良い。
Zohoに関する書籍が少ない中、Zohoでどういったことができるのかを把握できる内容となっている。今後のビジネスにおいては、将来的な成長や競争力強化のためにDXを推進することが重要であると考えるが、どう進めていけば分からない中堅・中小企業も多いことが想定される。IT化のノウハウがある企業では、BPRを行い、それに合ったソフトウェアを比較・選定し、PoCを実施するといった手順を踏んでいくことができるが、中堅・中小企業ではなかなかこのプロセスまでは実行できないのではないかと考えられる。その点、Zohoでは、ビジネスプロセスが網羅されており、安価で導入することができることから、特にIT化が進んでいない中堅・中小企業では比較的に容易に、アジャイル的にトライ＆エラーをすることで、業務改革を進めていける有効なツールではないかと感じたところである。なお、本書でも述べられているが、エンジニアを対象とした技術書ではなく、システムを「つくられせる人」を対象としている点には注意が必要である。現時点では、Zohoの技術に関する書籍はほとんどなく、今後、実際に構築するためのノウハウに関する書籍が出てくることも期待したい。
Zohoを取り上げているがどういった事に対して、何を使うのかの説明がありツールの選定などの意見出しには役に立つ部分が多いかと思うがそれ以外の使い方、より効果的に効率的にとなった時に本を読んだだけでは足りない場合も大いにあると思う。まずやってみる。という人には向いている本。
ＤＸをしなければと思う反面、もう遅いのかと思っていたが、この本は読みやすく、読み手の立場によって刺さるポイント、今は読み飛ばすポイントが掴みやすい、今は読み飛ばすポイントが多いが今後、必用になるであろう章などは読み返すと思った
ＤＸのツールの説明書かと思ったが、どちらかというとＤＸに本腰を入れたいが、何をどうすればが分からない人が読んで導入する。ここのハードルと導入した後の効果的な使い方、この両方が必用だと思うが、この本は導入済の企業でどの様に使うと良いかまで書いてあったりするので、どちらかというとＤＸチャレンジしているが、どうすれば良いかわからない壁にあたった営業組織の人が読むべきでは無いかと感じた。
これから就職活動する若い人達もこの本を読む事でＩＴツールを用いて何が出来て、何を必用としているのかみたいなぼんやりとした内容が理解出来ると思う。ただし実際に使ってみないとという部分は過分にあるが使う為には費用が必用であり、使う為の組織や企業があってなので、あくまでも知識の上積みと言う所でならとても読み進めやすい
導入を迷っている企業には良い内容の本だと思うし、ツールの説明もZohoについて記載がされているただ、この通り行ったからと言って果たして成功するのかどうか、この通り行う為にはどうしたらよいか使う人全てがこの深さで内容を理解する必要があると思う。ＤＸの成果をビジネスの日常にする為にはまだハードルが高いと感じる
Zohoを用いてビジネスが加速したという事、導入までに必要な事などは形式で書いてありわかりやすいただ、定常化するまでに導入までにカスタムにどれだけのコストを必用としたのかなどが見えなかった完成した物を使えば加速する事はわかったが、導入までのコストなどが記載が無くて、そこが知りたい所でもあったので続編というか、それを知る為には問合せしてねという事か
本書は、DXの考え方からDXに不可欠なクラウド導入の必要性、そしてDXに最適なクラウドZohoの全貌と具体的な活用事例まで、幅広くかつ具体性のある内容だと感じました。特にZohoはCRM顧客管理／SFA営業管理／MAマーケティングオートメーションをはじめとする45ものアプリからなるクラウドサービスだが、この本はその数多くのアプリを体系的にわかりやすくまとめてある印象でした。（自社で使いたい、使えるだろうとイメージしやすいように整理されている）Zohoは、これまで世界180ヵ国で販売され、25万社•7500万ユーザに使われているらしいが、日本マーケットにはまだまだこれから導入が進んでいくのだろうという印象。世界的に売れているクラウドサービスから学ぶことも多くあり、世界と比べDX化が遅れている日本企業はクラウド導入や活用事例としても参考になると思います。また、日本書籍でここまでZohoのことを詳しく記載している本は無いため、企業の経営者はもちろんのこと、IT部門だけでなく、ユーザ部門、マーケティング部門も現場でZoho（CRM/SFA/MA）を使える必読書だと思います。
多種多様な分析の本や色々な本があるが、何をつかってどうやっての前になぜ整理する必要があるか、どう使うのかなどが分かった気がする。この本の知識と自分の経験でまず必要だと思った所から使ってみるにはハードルが低く感じる様な書き方がされている。ＤＸと言う大きなくくりはわからないが、部分的には説明出来る様な気がする
1回読めば良いかなと言った感じでした。
最初に、本書はある程度のTableau用語やTableau機能がわかっている経験者が、自分を取り巻くデータ活用業務の状況について一歩先に踏み出すためには大変有益な図書の1つであると思います。特にTableauの表現力に遊ばれて何となく「それっぽい」VIZを日々量産している人には、前半のビジュアル分析から分析プラットフォームあたりまでのパートは実践的で有用なものも多いと思います。そして筆者Youtubeチャンネルにて、各DAYごとのフォローアップ動画が公開されています。一部の読者と本の内容をベースに議論しています。是非こちらも見るべきです。本の文字では伝わってきにくい大切なことが良く分かります。（KTは活字より動画向きのような笑）さて・・・日本のTableau界隈では抜群の知名度と一種のカリスマ性をもった筆者の産み出す待望の一冊ということで、（私も含めた）KTシンパには期待値の高いものだったと思う。それがゆえに、甘い評価も多いのではないか、と想像するところである。自身もKTが本を出すという事実だけで、細かいことは気にせずに予約した1人である。そんな期待値が高い一冊だっただけに、読み終えてもやっとした感じが消えなかった。以下、具体的な感想。前半のビジュアル分析パートについては、本書の構成の中ではエモく楽しい方で、かつ部分部分ではTableauユーザにとっては大変実践的な内容である。（しかし一般論として網羅的に語っているように思いつつも、結局はTableauの操作や機能ありきの説明になっていて問題提起や解決策が非常に狭義に感じる。）中半DAY3の分析プラットフォームのパートは、実名こそ出てこないがTableau Serverを感じさせる内容であるが具体的製品事例は出てこないので抽象的であり内容が薄い。（実際に該当頁数も薄い）また分析プラットフォームとあるが、実際には分析結果のシェアリングプラットフォームの話になっており、そもそも「分析自体を行うプラットフォーム」のことには言及がないので物足りないです。後半DAY4のデータとは何か？については、レガシーな情報システム系の話から昨今の最新データベースの話あたりがツラツラと書かれているんですが、若干中だるみ感があって、もう少しデータドリブンの極意というテーマと絡めた言及したいことの説明が欲しいと感じた次第。章の後半4-4のデータの正しい知識を身に着ける、については実践的で役立つ内容でした。その他気になることとして・いくらかの文章に違和感あります。（てにをは的な誤りも散見。）・師匠（Master）と弟子（Apprentice）の対話形式なのだが、ほぼMasterが一方的に語り続ける内容であるので、もう少し弟子の会話を挟んで対話らしくした方が読みやすいのでは？と思う。・せっかくのカラー印刷を活用した「配色の例」について印刷の都合なのか「？」状態。　（P.146）赤い丸と記載されてますが茶色では？　（P.156）この印刷具合で「椅子が最も濃い」と判別することは困難　（P.207とP.208）色弱の人が見えている例でP.208の方が見やすいとあるがP.207の方が見やすい　（P.220）グラフ中段、家電だけ極端に彩度が薄く・・・とあるが、印刷物では極端に薄くない色々書きましたが、1人のKTファンとしての叱咤激励をこめた正直な感想でした。以上。
この本では、データドリブンとは何か、またどのように分析を進め、レポートしていくかを説いています。個人的に不満な点は2つです。1つ目は、扱うトピックについて問題点や内容が整理されることなく、ひたすら会話形式でのやり取りのみが続く点です。狭い事象を取り上げて話を展開している感が強く、それに対して特定の主義主張が展開されるということの繰り返しで、地図も無く知らない道を歩かされているように思いました。2つ目は「でもTabeleauならそれができるんだよ」という結論ありきのストーリー作りです（そしてこれが1つ目の問題点を大きくしているとも思います）。データドリブン文化を組織にどう持ち込むかというのがこの本の1つのビックトピックだと思うのですが、Tabeleauの機能と対応するストーリー作りが意識されているせいか、データドリブン文化の醸成という割と大きな話と、データ分析の実務的な話（欠損値処理や、名義尺度・感覚尺度といったデータの種類）がTabeleauの話を触媒に不自然に混ざり合います。。読者に何を学ばせたいのかメッセージ性を感じることができず残念に思いました。
パダワンとして、頑張ります
こんな本を、どれほど待っていた事だろうか。世の中の技術書は、BIならBIだけ、DWHならDWHだけ、データマネジメントならそこだけと、特化した本が多い。しかし、現実の推進はこれらを組み合わせた総合戦だし、そもそも、データドリブンによって何が起こるのか、どのような経営的価値があるのかなど、技術書では論じられない事が多い。本書では、そうした総合戦の模様を実にうまく表現している。分析プラットフォームの三種の神器といわれるETL、DWH、BIの存在。そして分析プラットフォームはそれだけでは完結せず、データカタログなどの整備が重要であること。そうしたデータマネジメントの概念が「世の中に存在すること」を未知な我々に示してくれると同時に、「データサイエンス」という注目度の高い概念がどこに位置するのかも示してくれる。いうなれば、理想的なデータプラットフォームとは何か、の地図を示してくれるのである。そして、それを平易な言葉で説いてくれている。誰向けに書かれたか、といえば、本書の主人公が営業企画部であるである事から明らかである。まさに、推進、またはプラットフォームの利用者に向けたメッセージなのだ。データドリブンの推進を始める人には、まずこの本を、推進チーム全員で読む事をおすすめしたい。この本の世界観、用語が共通認識になった時、異なる組織で同じ世界を見て、そこに走っていけるようになるだろう。
「どうやってデータ分析をするのか？」について、技術面だけでなく、考え方や組織やデータの観点からも1冊にまとまっており、まずこれを読めば一通り網羅できる点がありがたい。プログラミングやデータ分析ツールの技術的な説明に偏らず、かといって方法論や事例だけ並べても困るわけで、必要な説明の取捨選択ができている。紹介する製品（BIツール）はTableauのみ言及されているが、データの可視化に関する説明は他のツールに置き換えれば済む話。あくまで本書はデータドリブンというデータ分析を活用するための思想や方法がカギなので、ツールがどれかは些末な問題ではなかろうか。
会話形式になっていてわかりやすいのと、多岐にわたってデータドリブン文化を広めるためのノウハウが詰まってます。使われているスーパーマーケットのデータは他のTableau本にもよくでてくるTableauについてくるダミーデータです。何が悪いかね。
読みやすい本ではあるが、タブローの操作をマニュアル的に調べて使うには不向きです。その目的ならば別の本をお勧めします。この本は、タブローでできることは何か、データドリブンとは何か？を概念的に理解するには十分かとおもいます。実際に操作してみようとなると、他の本も組み合わせて使ってみるのが実践的かとおもいます。
出版社経由でePub版も購入しました。内容は良いと思いますが、このeBookは標準なePubとは言えない。標準なePub仕様にサポートされていない様ですので、文字サイズ調整やコピーなど全て利用出来ない、読み辛い！PDFフォマットの方が良かったと思います
progateをちょこっと触った程度の実力で本書を購入しました。オブジェクト指向を除いて非常に分かりやすく（自分には難易度が高かった）、基礎の基礎という意味では非常にいい本だったかと思います。ただ、HTMLの最低限の知識はあった方がやりやすいでしょう。校正をしたのかと疑いたくなる誤字脱字が散見されるため、ただ本を眺めるだけだとどこが違うのか分からず長時間エラーに悩むことになるので注意が必要です。
PHPが８になったため購入しました。一度勉強をしたことのある人には問題ないですが、ちょくちょく言葉の使い方が不親切だと感じる部分があります。初心者の方はイラッとすると思います。初心者向け　内容の難易度（ちょうど良さ）：４適切　　編集力：（分かりやすさ）２　平均３中級者向け　内容の難易度（ちょうど良さ）：２簡単　　編集力：（分かりやすさ）４　平均３上級者向け　読む必要なし
内容に関しては非常に満足いっているので、とやかくいいたくないのですが、とにかく誤字が多いです。特に文章中の日本語の誤字ならまだしも、文章中に書いてあるコードにちょこちょこ誤字があり、そのたびに自分の知識や記憶を疑ってしまい、時間のロスに繋がりました。また、ダウンロード版のソースコードとテキスト上のソースコードに関して、テキスト版では何故か最初の数行省かれていたりしていたので、それに気づかずプログラムを読み返したのは大きな時間のロスでした...
PHP初心者から入門レベルになるにはいいと思うがサンプルコードをそのままの動かすとエラーになる物が多い。サンプルコードが多いのはいいがエラーをなくすようにするには初心者にはしんどい。ネット検索をしながら手探りで正解を探すしかない。もちろんエラーがないコードもある。ただこの本だけでは思うようにウェブアプリを作ることはできないしmysqlの演習は足りない。
タイトル回収は完璧ネットワークについて何も知らないって人には向かないかな、ある程度の知識は必要かも
内容的にはもう古いところは多いのでしょうが、日本とアメリカのユーザーが反射神経を競うような高いゲームをするのは光の速度を超えられない以上無理というような、ゲーム特有の視点の違いがよくわかって興味深く読みました。
時代と共に陳腐化しそうではあるがまだ大丈夫。ゲームによって異なる環境や条件も説明されているのでしばらくは入門書として重宝されそうな書籍。ただサブタイトルは意味がよくわからない。
ゲーム業界ではないのですが、ソフトウェア開発（どちらかというと組込み系）を生業としていますので、他の方のレビューで気になって購入＆読んでみました。この書籍の特徴は、時間などの数字が具体的であり、プログラマや設計者が理解すべきこと、意識して開発しなければならないことが技術的な背景を絡めて説明があることです。　例えば、ネットワーク、アーキテクチャなどにしても仕組みの説明だけでなく、どのようなゲームに対してこれらの仕組みが有効であるかなど、トレードオフやゲーム例と関係付けて説明があります。また、ゲームとして利用者が不満に思わないようにするための工夫をどのように実施していることなど、なるほどと思える現場特有のノウハウについても紹介があるため、ゲーム業界の苦労も感じ取ることができました。このような現場では当たり前のことをきっちり技術として紹介するのはとても難しいのですが、こうした点まで本書の説明は非常に分かりやすいです。類似書籍では、オンラインショピングや、ERPのような開発事例や技術紹介の書籍は幾つかありますが、これほどの具体的なノウハウ、技術がきっちりと解説されている書籍はこの本だけだと思います。広義に考えれば、ネットワークを前提としたソフトウェア開発に携わる方、とくに２，３年開発をしてきて基本的な技術は理解した方が、中級〜上級のソフトウェア設計者にステップアップするためには、オススメの１冊です。惜しむべくは、最終章にある開発体制の説明が、前節ほど詳細には記述されていないことですが、これはタイトルと一致しないので仕方ないですかね。著者様、できれば、「オンラインゲームを支えるマネジメント」みたいなタイトルの次作を期待します！！！
書き込みもヨレも気にならないレベルでした！また機会があれば率先して買います！ありがとうございました！
2011年の本。著者はオンラインゲーム開発では筋金入りな人である。分厚く、徹底的な解説なのだが、整理されていて読みやすい。　曰く・・・　オンラインゲームのサーバのほとんどの実装言語はC/C++。JavaVMはシステムコールの呼び出し前後でバッファオーバーフローチェックなどを行うため、C言語の処理速度にかなわない。　リアルタイムゲームでは、たくさんの物が同時に別々に動いているように見えるが、実際にはスレッドを使っているわけではなく、全体を少しずつ逐次処理している。その方が速いし、スレッドにすると全体のゲーム進行が想定通りにならずにバランスが崩れるかもしれない上に排他制御の必要性も出てくるから。　オンラインゲームの不具合には（１）企画の意図をそもそも再現できていない問題と（２）企画の意図を再現できているが、おもしろさや価値につながっていない問題がある。　ＲＭＴ（Real Money Trade）とは、ゲーム内で時間をかけて育てたアイテムやキャラクタを実際の通貨（円）を使って取引する行為のこと。合法ではあるが、ＲＭＴを目的としたGold Farmerとよばれる人びとがbotという特殊なツールを作成し、自動的にゲームをプレイして財産を稼ぐ行為は問題。botは人間ではできない速度でプレイするためサーバやＤＢに負荷がかかる。　ゲームを作る人たちは（１）ディレクター（開発全体を統括し、進行管理する）（２）プログラマ（３）アーティスト（４）プランナー（企画骨子に基づいて実際にプログラムが読み込む詳細なゲームデータを考案、作成する）の４種類。　レスポンス性を維持するため、通常、ゲームプログラムはゲームプレイに必要なすべてのデータをオンメモリの状態で扱う。ゲームプログラマは、オンメモリでＣＰＵサイクルを極限まで節約して大量のオブジェクトを動かし続けるスペシャリストという側面をもっている。　ゲームの進行とともに大量の状態変化が発生する。できることならば、大量の状態変化をできる限り漏れなく送り合いたい。しかし、通信量が多すぎるとビジネスとして採算がとれなくなってしまうし、ＩＳＰからクレームが寄せられたりする。　不正行為の中で最大のセキュリティ上の懸念は「チート」とよばれる行為。チートとは、オンラインゲームを構成するシステムを何らかの方法で不正利用することをいう。端末のメモリ上に乗っているゲーム進行データを改ざんしたり、ゲームプログラムが送受信するパケットの中身をツールを使って改ざんする、などがある。チートとその対策といういたちごっこは、数万規模のプレイヤー数を持つゲームでは対策をしても２日～１週間といった速度で追いつかれてしまう。　チート行為による影響を抑制するためのライブラリを提供している企業もある。いたちごっこの作業を外注できる。この契約には月額にして数十万円以上のコストがかかる。大きなコストをかけてでもチート行為を防ぐ動機がゲーム運営会社にあるということ。　サーバ・クライアント型の大規模オンラインゲームにおいては、ＤＢへの書き込みをいかに効率的に行うかが課題となる。一般的なＷｅｂサービスではＤＢの書き込み頻度は読み込み頻度の１０％以下だが、オンラインゲームはその逆で書き込みが９０％を占める。オンメモリで実行するため、読み込みはメモリからの読み出しでできる。　ゲーム開発における最も高いハードルは「ゲームをおもしろくすること」である。作りながら微修正を繰り返し、その繰り返しの回数が多いほどゲームはおもしろくなる。　アクション性の高いゲームはゲーム状態が高頻度で変化するため、多くのデータを互いに送り合う必要がある。サーバ・クライアント型だと、サーバマシンや帯域コストが高くなりすぎてビジネスにならない。そのため、チートされるリスクを受けてでもＰ２Ｐ型で実装を行うことが多い。　オンラインゲームは、運営開始するときユーザ数のピークが来る。そのあといったん底を打つ。よくあるパターンはそのままであり、ヒットするパターンではそこから再びユーザ数がじわじわ増える。　もっとも仕事がハードなのは運営開始後の３ヶ月。開発が１年で終わったとしても、運営は５～１０年続くことも多く、タイムスパンが長い。　みたいな話。
フラッと行った本屋で見つけて数ページ目を通して購入を決めましたが、当たりでしたbゲームの企画段階で考える内容から、通信のアーキテクチャ、さらには課金の仕組みまでと、オンラインゲームの企画段階から運営するまでの必要なものが、ぎっしりと書いてあります。例えば自分が一番不思議に思っていたリアルタイムで大人数のプレイヤーが一緒の空間を共有できる仕組みも書いてあり、0コンマ何秒の単位で起きる通信の時間差をどのように埋めるかという点などは、なるほどなぁ、、、、、と感心させられました。考えてみると一般のユーザーが使うコンテンツの中で、オンラインゲームほど複雑な技術を使っているネットワークコンテンツはほとんど無いですねぇ内容の難易度的には、多少なりともネットワークやプログラムの勉強をした人でないと、苦しいかな、、、思われるレベルですかね正直コンピュータやネットワークの勉強を全くしたことがない人には、ちょっと難しいです。(自分も所々調べ物しながら読んでます)入門書と専門書の間くらいにある本だと思いますので、ネットワークやIT関連の入門書くらいは目を通してから読まれるのをお勧めします。
タイトルだけを見ると、オンライン技術のみを扱った本の様に思えるのですが、実際の内容は非常に多岐にわたります。例えば、ネットワーク技術のみならず、ゲームの歴史や開発体制管理、内部設計、描画の最適化方法など、様々な事柄について書かれています。「プログラマーが一人でオンラインゲームを開発するための本」という触れ込みですが、人材管理など、商業規模の技術についての記載もあります。全体として、ネットワークの技術本と言うより、オンラインゲーム開発そのものの技術をまんべんなく記載した本という印象です。コーディング・実装方法を詳しく書いた部分は控えめなので、そうした局所的な内容を必要としている方には不向きかもしれません。内容自体はだいぶ実用的なので、あとは好み次第でしょうか。個人的には、扱う分野が広すぎるので２冊編成でも良かったかなと思います。
オンラインゲーム開発の技術を解説している本としてベストセラーになってもおかしくない本だと思います。オンラインゲームの開発者にならないと知り得ない内容が多く記載されており、読み物としても楽しめます。一人用として動作するオフラインゲームと比べ多人数を考慮したオンラインゲームの開発が如何に高度であるかがイメージ出来ました。ただし、結構踏み込んだ内容まで記載されていることも有り、プログラミング経験の無い人が読むには苦しい内容となっているので、立ち読み無しで購入しようと考えている人は注意して下さい。
著者の実経験からくる、あまりにも濃い内容に脱帽です。題名から技術にフォーカスしたものと思いきや、中身にはプローデューサー的な視点や、プロジェクト/プロダクトマネージャ的な視点からも、大いに語られており、実際今後は、この本を読まずにオンラインゲーム制作に関わる輩がいたら「どうかしてるぜっ」といわれるスタンダードなものになると思います。技術が分からない人が、それをすっとばして斜め読みしても、得られるものは大です。(課金やプロダクトのライフサイクルなど)データベース側からみれば、第4章のDB設計図が興味深いです。実際どのくらいの規模感なのよ? というところを具体的なC/S MMO型のシステムの規模感での永続化情報の洗い出し、テーブル、クエリの抽出などなど。「映画が総合芸術なら、オンラインゲームは総合技術に違いない」映画は黎明期には動画を素朴な形で見せればよかったものから、音声、色、音響、衣装、様々なパーツが発達し、今や総合芸術の域にまできています。ゲームも初期はアスキーキャラクタ画面で点滅していたところから、様々な技術(ネットワーク、データベース、通信インフラ)、ビジネスモデル、ユーザを獲得し、あたかも総合技術の様相を見せています。例えば一人でハリウッド映画を作ることができないように、もうオンラインゲームを一人で立ち上げることは難しいのではないか、と漠然と感じている人は多いと思いますが、本書に書かれていることを理解して、それと自分がこれから作ろうとするゲーム、サービスとの相対位置がきちんと認識でれば、意外にまだ、その敷居は(少なくとも映画よりは)低く、可能性に満ちているように私は感じます。「オンラインゲーム」に関わる全ての人に、手放しでオススメの良書です。わくわくします。
具体例のイラストがとても分かりやすい。それでいてDBの重要な点をおさえており、最初の入門書としてはうってつけです。また、データベースを何となく知っている人でも、復習本として使用するのもありな内容でした。
データベースの概要だけでなく、実際の運用に関する部分にも触れている。開発者というより要件定義を行うような上流工程を担う初心者におすすめ
業務アプリでDB触る機会が増えたので、入門として読んだ。分かりやすくちょこちょこ入るイラストに癒されながら無理なく読了できた。この本を読んでざっくり概要は理解できたのでこれからより深めていきたい。
初心者にはわかりやすいと思いますが、ちょっとわたしには簡単すぎたかも。。
初学者の方に「データベース」を知ってもらうために、これまでは「マンガでわかるデータベース」を用いていました。「マンガでわかるデータベース」も分かりやすいのですが、マンガで説明する関係上、ページあたりの情報量が少なくなってしまうのが難点でした。ただ、とっつきやすさについては今も最高だと思います。本書はその難点を取り除き、データベースの基礎知識について一定の段階まで掘り下げています。例えやイラストも豊富で飽きさせませんし、分かりやすいです。そして一番良いと思ったのが、次へのステップとして参考書籍が挙げられている点です。挙げられている書籍は、個人的な感想ですが、次へのステップとして適切な書籍が掲載されていると思います。近年でこのような内容の本がほとんど見つからなかった（「おうちで学べるデータベースのきほん」ぐらいです）ので、この本は初学者向けの有力な選択肢になると思います。
Part１は、全くの素人にもわかりやすく、考え方が理解できてとても勉強になりました。Part２は、作ってみよう、という内容なので半分くらいはわかりませんでしたが、「筐体」とか「黒い画面」とかが何なのか、何となくイメージが伝わってきました。
新卒1年目のITエンジニアです。仕事でSQLを書くことが増えてきたため、DBをより深く理解したいと思い購入しました。結論から言うと、DBの役割・種類などについて図を交えてわかりやすく書かれており、非常に参考になりました。細かい用語を覚えるのではなく、概念や考え方から理解したいと考える方には特にオススメできると思います。注意点としては、本書ではSQL文の具体的な書き方を学ぶことはできません。あくまでDBの概要を掴むための本だと考えて購入されるといいと思います。
職場の初級プログラマのステップアップを目的として購入してみました。有用な情報が整理されて書かれていると思います。ただ、特定の言語に特化した内容ではないとはいえ、JavaやC#などのオブジェクト指向のプログラミングに特化したものが多く、その割には内容がやや浅すぎるかなという印象です。スコープの話にこれだけのページ数を割くくらいならグローバル変数やpublicの乱用がなぜ駄目なのかをもっと書いてほしかったし、コードの集約パターンを載せるなら「継承をそれ目的で使うな」と言い切る必要もあると思います。SOLIDやDRYといった概念にもう少し触れても良かったのではないでしょうか。（触り程度だとしても）総じて「『その書き方をまだ知らない』人が『それに出会う』本」であり、コードリーディングガイドと言ってもいいかもしれません。このため本当に初級者向けで、これを読んでも実用的なプログラムを書くには程遠いと思われます。とはいえ誰しも（一部を除き）最初はド素人なのが当たり前、人材確保に苦労する状況で、オライリーなど堅苦しい本よりは遥かに読みやすい、貴重な初心者向けテキストです。その目的を間違えなければ、活躍できる書籍なのかなと思いました。この本が必要な期間がなるべく短くなるのがベストプラクティスです。しかし、文中の「中級プログラマー」の描写、自身に思い当たるフシがあって辛いw
こちらはバリバリのプログラミング上級者が読むよりは、初級中級の方向けだと感じました。各項目で初級中級上級者の声が載っていて、初級者の私にとってはどのように成長すれば良いコードを構築できるか分かりやすい良い教科書に感じました。私はphpの作品作りの際に手に取りましたが、言語の制限などはなく「仕事に活用できるプログラミングの教科書」って感じです！
軽く読むには最適な厚みだが、これで「良いコード」が書けるかと言われると疑問。こういうものを書くときに難しいのは承知の上でつっこむが、副作用や計算量をほとんど説明なしに使っていたり、突然ArrayListやサーブレット（Java）を出したりと、やや読者層を決め切れておらず、具体論まで深掘りできていない印象を受けた。が、それゆえにやや批判的な見方をしながら、大雑把な復習の題材として使う分には悪くはないのではなかろうか。知らなくても、副作用や計算量って何だ？と思ってググるのなら良し、そのまま置いておくタイプならこと細かな説明を書いても無駄ではあろう。WEB+DB本誌（雑誌）と同じノリで読み捨てる分には悪くない。ただ、この分野で10年20年の役に立つような気合の入った名著と比べると分が悪い。独学してきた人間が自分の知識範囲を確かめるには良いかな。
独学でなんとなくプログラムを書いてたが、いざ実務レベルにするとどうか？お作法がなっていなかったり求められているレベルに到達出来ていなかったり、複数人でプロジェクトを遂行する上であまりにも稚拙である自分が初めて手に取った本です。本書は、「良いコードを書く」ことを教えてくれます。お作法に自信がなかったり、これから良い仕事をしたいエンジニアは必ず読むべき一冊です。
SQLほとんどしたことない新人用に購入しました。最初の最初の３日ぐらいはこれで良いと思います。
初心者目線で書かれている印象でした。そのため抵抗なく読めました。
・データベース (DB) を導入したいがどれを使うか未決定  (リレーショナル系にしようかな, 程度) ・DB導入で何ができるか, あまりわかっていない. ・急いでないので "理屈はともかくこうすれば動く" よりも "こういう考え方で動いている" 的な基礎を知りたいこの本を読む前の私のレベル・背景は ↑ のような感じ.超初心者ですが, 私のようなレベルの人には良書でした.「xxxすればaaaという結果が手に入る」と記述があったとき「じゃあbbbがほしいときは??」などと細かい疑問が浮かびます.しかし, すかさず次のページでそれの回答が書かれています.初心者の躓くところがわかってるなー, と思いました.SQLの体験ソフトがついてくるので, PCで使いながら読むのがおすすめ.データのサーチ, 追加, 削除など基礎はだいたい体験できます.扱うのはテストデータだから失敗も怖くないし, 「リセット」ですぐ復旧できます.びっくりするくらい私の欲しい物が得られた本でした.【注意点・一応】1. リレーショナル型についての本ですので, 別の型の参考には多分適してないです.2. 具体的なソフトの導入手順は書かれてないので, 「こうやってインストールするんだよ」が欲しい人にも多分向いていません.
現在2年間の情報系の学校に通ってまして、エンジニアを目指す為日々勉強しているのですが、SQLはベスト1,2で概念の理解が難し買ったので、CDが付いていて助かりました。
復習には、大変良い本です。レベルup本必要になると思います。間違って別なポストに配達していました。気をつけてほしい。
独学でＳＱＬを身につけるならこれが一番だと思います。何冊か読みましたし、練習問題もやりましたがこの本の練習問題が一番実力がついてるのが実感できました。他の本はちょっと物足りないですね・・・反復してこの本をこなせば基礎はばっちり身につくと思います。
とても使いやすいドリルです。もうすでに読破して、次のstepに入っています。
Accessを身に着けるのに、まずAccessの教本をやっても実務に生かせない。まずはデータベースの知識が必須で、次はSQL言語に触れないと、おそらくAccessは使いこなせないのではないか。SQLの入門書としては、この本と「SQL書き方ドリル」の２種類があると思います。こちらの本は、最初の１，２章はそれなりにこなしても、２章め後半あたりから急に構文が長くなり面喰います。自分も途中で挫折しました。レベルの上げ方が急すぎると思います。ある程度やってから、もう一度やってみたいと思っています。本自体は悪くない内容だとは思いますが・・・。
購入の決め手になったのは、「SQL書き込み式ドリル」方式がとてもよい方法だと思ったからです。確かに方式はとても良いのですが、本当に初心者である私にとって、準備段階のMySQLのインストール事態とても難しくて途中で諦めました。誰でも利用できる状態で提供していただけるとありがたいのですが。内容もCase　Q＆Aから始まって「構文を理解しょう」、「SQL命令を記述してみよう」まではよいと思いますが、「マスタ・プラクティス」の問題が例題「社員テーブル（employee）から社員の氏、名、役職を取り出すためのSQL命令を記述してみましょう」をSQLで記述しようとすると社員の氏（1_name）、名（f_name）、役職（class）がわからないのでお手上げ状態になってしまいます。この点を改善していただけたらよい本になると思います。
叩けば覚えられる。それを体現した本。RownumとかがSQLによって勝手が違うけど、基本的な事を叩いて覚えられるので、SQL未経験者は初めに一冊叩くとマジ勉強になる
わかりやすい、初心者、独学者にはもってこいSQLを一番最初に勉強するにはぴったり！わかりやすくて勉強になり助かりました。なんども書いています。一番
データベースのことを詳しく知らなくても、SQLが独学で勉強できます。小学校のときの宿題のようなドリル形式になっている本です。技術の本は、説明を読んで分かった気になってしまうのですが、頭だけでなく手がおぼえていく感じで学習ができます。フリーのデータベース（MySQL）をインストールして実際に確認しながら学習できます。「勤怠管理アプリ」や「売上管理アプリ」などの具体的なデータが例題になっているので、ドリル＋実機での確認で、理解が進みました。また、1ページの文字量が多すぎないので、短時間でも読み進めることができます。SQLの構文が網羅されているので、この本をしっかり理解しておけば、基本情報処理試験の午後対策にもなります。独学者や初心者におすすめの１冊です。
本書は自分でSQLを組み立て、データベースを何度も操作してみることで、自然にSQLを体得できる本です。データベースの基礎の確認や実習環境を整えるためのイントロダクション、データ操作言語、データ定義言語の順に進んでいきます。データ操作言語の学習では、データの検索、登録、更新、削除を学びます。基本的なSQLからサブクエリを使ったものまで、手順を追い、構造をしっかりと理解しながら組み立てていきます。テーマごとにSQLを使って何をしたいのかという目的を明確にした例題が用意され、問いとそれに対する答えが載っています。その後、答えとなったSQLの構文を理解するための説明が続きます。SQLを作成する各ステップでは、必要に応じて復習も交え、分かりやすい説明に導かれながら、書き順に従って段階的にSQLを整えていきます。少しずつSQLを作っていく過程で、SQLの構造が理解できるようになっています。構造を理解した後は、「マスタ・プラクティス」として数個の設問があり、紙面に用意された余白にSQLを書き込んで反復練習できます。サンプルコードはWebページからダウンロードできます。何度もSQLを組み立てているうちにSQL作成の考え方が身につき、SQLが複雑になっていっても戸惑うことがありません。SQLを無理なく身につけたい人にお勧めしたい本です。
初級プログラマや基本情報技術者試験を受験する方にオススメです。本書を最初から最後まで行えば、最低限のSQLの知識を得ることができます。基本情報技術者合格を目指す方は、できれば、本書、終了後にデータベース関連の問題を本書を見ながら、テーブル作成からデータ追加、取得まで行うことでより理解が深まると思います。机上だけだと、データベースの操作は理解しづらいので、本書のようにクイズ形式で実際に操作しながら習得する方がイメージがつきやすいと思います。中堅プログラマやデータベーススペシャリスト試験を目指す方には、少し物足りない内容になっていますが、SQLの基本を確認されたい方は、本書はオススメです。
私には、とてもわかりやすかったです。この本に記載された設計以外にも方法があるのか知らない状況ですが、最初の第一歩は進められると思いました。
技術書は、最後まで読み切らないことが多いですが、こちらは一巻あたりのボリュームがちょうど良く、頭に入りやすく感じました。
難しい単語をものすごくわかりやすく例をつけて説明してくださり助かりました。今までデータベースというものを何となくいじったことある人に実際の概要的な具体イメージを持たせてくれる本おすすめ
マスタテーブルを切り出しするのにどうしよう？といつもAccessを使いながら適当にやっていました。使い方マニュアルは読んでいましたが、自分のやっている事に名前や正しい形があったんだ、こんなジャンルの知識があったんだ、と目から鱗でした。わかりやすかったです。
専門的に解説している。ただ、専門用語がたくさん出てきて解説もあるが、正直普段のアプリ開発で無意識におこなっている事が多いので、専門用語に惑わされずシンプルに普段に置き換えて読むと良い。シンプルなアプリケーションなら、これらの知識はなくても感覚的に設計できるが、より巨大で複雑なアプリケーションの際にはこれらの知識は必須になると思う。ただ、どちらにしても専門的で学術的なDBの設計方法を知っていて損はないと思うので、一度目を通しておくと良い。
全13章の内、9章までは絶妙な不親切さ（良い意味です）でとても良いテキストでした。一度説明した事は二度も説明しませんよ？といったちょっと厳しい雰囲気が漂っています。手取り足取りのやさしい本ではありませんが、それが本当に適切なんです。しかし、10章は、XMLがどういうものが知らないとハマります（何の説明も無い）。11章は遂に、何の解説も無い命令が出現します（[STAThread]とInvoke）。今分からなくて良いなら、そう書いていただきたい。13章は集大成ですが、サンプルプログラムには良く分からない書き方や初出の命令などがいくつかあって、こちらも解説はありません。自分でリファレンスを調べなさいよと言う事なんでしょうけれども、実際検索しながら学習しましたが、結局分からない単語で分からない単語が説明されている状態であり、基本的に分かりません。だから書籍を購入して学習しているのですが。対象としては、他の言語を触ったことがある方ですね。プログラミング自体が初心者の方は厳しいと思います。個人的にはC#のテキストはこれが一冊目だったのですが、読んで良かったと思っております。ただ、9章までがとても良かったので、10章以降をもう少し何とかすれば更に素晴らしい入門書になったのではないかという思いが強いです。
プログラミング知識0からこの本を学習し終えました。初めは400ページ越えで大変そうだなと思っていましたが、今ではこれでも必要な知識をまとめて絞っていると感じます。英語授業のように例文を出してから解説なので何の話なのかどうなっているか感覚で理解しやすいです。その反面、辞書のように英単語一つ一つを解説してる訳ではないので、深く知りたい部分は自分で調べる必要がありました。しかし悪い意味ではなくてこの本を教科書、インターネットで検索を辞書と捉えれば役割の違いがわかると思います。ただ１０章以降はXmlや２つのプロジェクト起動など明確に説明不足な部分があったのはマイナスです。個人的に理解しやすかった勉強法です。1サンプルコード打って解説を読む理解できないので何度もサンプル打って見ずに打てるようにするサンプルが頭に入ってるので解説に集中して理解しやすくなる2次のサンプルも1を繰り返していくある程度進めていくとサンプルが違ってもお決まりのパターンが見えてくる一つの章が終わるたびに最初の章から復習をすると、増えた知識によって解説が言いたかったことがハッキリとわかってくるまた何度も復習することが大切なので、その時点で章末問題などがわからなくても意地にならず時間制限設けて解説見て理解することが大事だと思いました。
文章も読みやすい構成になっていて初心者にとってとても良いと思います。
短いプログラムのサンプルをこなしていくことで、段階的に必要なことが学べます。フォームや画像やゲームを扱うプログラムがあり、楽しく学べました。本には掲載されていませんが、csc.exeを使えばバッチファイルでもコンパイルできるものばかりで、Visual Studioが使えない環境で開発するのに役立ちました。初心者におすすめです。
基本的に最低限の説明しかなく、必要なところは自分で調べろというスタイルなので初心者向けではないと思う
わかりやすいですがwindows向けなのでmacを使いたい方はあまり向いてないかもしれません。インストールする場面で異なる場面がありそこで躓くかもしれません。
普段はC/C++で仕事をしています。業務でWebアプリの作成が必要になり、本書を購入しました。基本的な文法をざっくり把握するには本書は最適でした。細かい内容やテクニカルな話はインターネットで調べられるので、追って習得しようと思います。環境構築についても記載されているので、初学者にも優しいと感じました。
中学3年生に頼まれて購入わかりやすいみたいです。
白本だと問題が少なすぎるし、簡単すぎるので、他の資格試験でもお世話になった黒本を買うことに。何故にこれほど評価が低いのか分からないが、自分は買ってよかったと思いました。細かい点をついてくる問題が多いので、曖昧にしか覚えてないと全く解けないが、これが完璧に解けるようになれば確実に力は付くと思います。他の人が言ってるようにsqlplusで実際に確認してみるとエラーが出る文もたまにあるので、☆ひとつマイナスにしときます。
丁寧な梱包で、商品の状態も良かったです。
試験対策として本書を手に取ることは、あくまで基礎力を身に着けられるのであって、実際の試験で試されるような応用力までは身につかないと思います。私が実際に試験を受けてみた感想ですが、オラクルの試験は結構、「ややこしい」、「直球ではない」、あるいは、「ひねくれた」問題が多いように感じました。わたしは実際に本書を手に取って勉強しましたが、本書に出てくるような問題は、割合少ないように感じました。ですから、ping-tなどの学習サイトだけで合格できてしまうほどの要領の良い方や、頭の良い方は買わなくてもいい気がします。ただし、私の様な要領の悪い人間にはマストでした。ちなみに、私は、恥ずかしながら、ギリギリの点数で試験に合格しました(汗)。
良品でした。
ちょっととっつきにくいところもありますが、買うならやはりこの本だと思います。
オラクルの試験に一度落ちたので白本だけでは無理だと思いこちらも電子版を購入しました。買って問題を進めていったのですが、なんというか、問題の文が少し意地悪な書き方というか問題を解いて見て、答えを見てそういう事を言いたかったのか！！と、思うこともありました。また、個人的には一問しか気づいていませんが、回答と解説とで答えが違いました。問題集なのにそこが違うのは致命的だと思いますし、なんか信頼できなくなってしまいました。ちなみに無事合格できたのですが、直前の模擬試験で正解率、黒本52%、白本80％、本番75%でした。白本は見ている期間が長いというのもあるかもしれませんが、黒本は難しかったです。白本で高得点がとれれば黒本はいらないかもしれませんね。
分からない関数や聞き慣れない単語を、当たり前の様に解説で使って説明しないまま次に進んでいく。常にスマホ片手に調べながらじゃないと理解しきれない問題が2割ほどある。
問題がたくさん載っており、試験対策が十分出来て良いかと思ったが、解説が酷いものが結構目につく。特に、日本語として間違ってないのに何故か×にしている問題とか。問題に対する回答が納得いかない。・SUM関数は数値データ型に使用できる→×:数値データ以外にも暗黙的に変換可能なら使用できるので×。その問題文でこの回答はない。…数値データ型のみを引数に指定出来る、とかなら納得した。という同じ問題が他にも5~6問あってイライラ。そこを我慢すれば星4つかな。----------------------------------------------------------------と思ったけど、もっと悪かった。星1つだチクショー。触ってないカテゴリもあるくせに、９章は他の章の問題をそのまま掲載しているだけという手抜き。正直、問題集に必要な範囲と解説が足りてない。
この問題初心者には難しすぎます。問題の意味が分からない社員番号？表はあるけど色々ありすぎてどれなのか分からない。後、答えがいくつか間違ってる。解説もいい加減ですね。星すらつけたくないです
教育機関、特に学校向けのこの手の本は少ないので、とても役に立ちます。ネットワークやセキュリティに疎い教員は一般の人が思っている以上に多いので、このくらい簡潔に最低限の情報が書かれている方が職場でおすすめしやすいです。
担当者が困りがちなことが書かれているわけではなく、有償エディションと有料講習の宣伝のようにも思える。レイアウトの問題だと思うが、少し読みにくくもある。
学校や企業でGoogle Workplaceを導入すると、必ずWorkplaceの設定の複雑さに驚くことになると思います。組織部門（OU）の設定、ユーザアカウントの設定、管理者ロールの設定、パスワードセキュリティの設定、インストールできるアプリの制限、などなど、一つ一つは単純でも、全体像をつかむことはなかなか難しいと思います。その点本書があれば、Google Workplaceで管理を行うにあたってチェックしておかなければならない項目が網羅されていて、設定方法も画面遷移を用いて丁寧に解説されているのでわかりやすくて安心です。ネットで検索すれば同様の情報を得ることは可能かもしれませんが、Googleのヘルプデスクの情報は色々な場面に応じて類似した情報がたくさん見つかるので、その中から必要な情報を選びだすのは結構大変です。最初から本書のような包括的な情報に触れて、全体を俯瞰しながら個々の設定をやっていくことをおすすめします。
副題にも含まれている「クラウド時代の新常識」を丁寧に説明してくれているように感じました。これまでに校内や組織のネットワーク（オンプレミス環境）を管理していた管理者が、クラウドサービスの管理をしなければならなくなったときに、手にするとよい本だと思います。Google Workspace の管理コンソールを扱う権限を持っていて、どう設定すべきかを悩んでいるのなら、手助けになる情報が見つかるでしょう！　Google 自身も似た資料を提供してくれているものの、この本ではその根拠に言及されているので助かります。
ARに挑戦するために購入しました。大変わかりやすく、この本に沿って進めてできました。取り敢えず何か買おうと思っている方にオススメだと思います。
初心者向けの本のほうが売れるので、こういう感じの書籍を出してくれたことに感謝したいです。ある程度ソフトの経験があればUnityは初めてでもPart1を読めばだいたい雰囲気がつかめると思います。残りのPartも有用でした。また紙質も変なパキパキした硬いものでなく手になじみやすいです。
Unity学習の2冊目として最高の本だと思います
５，６年生向けの中学受験用テキストはたくさん売られていますが4年生用はなかなか良いものがありませんそんな中で、塾は５・６年からで良いかなと思っている方に、自宅学習用にぴったり。我が家の場合親はほとんどノータッチで、○付けだけしてあげたら全部自分でこなしてくれたので、ホント楽させてもらいました。
毎日朝の勉強タイムで使っています。解説もわかりやすく 子供1人でも慣れれば どんどん進めています。
中学受験はしませんが、小学４年生の息子に購入しました。内容は難しい様子ですが、頑張って取り組んでいます。
タイトルのとおり難易度・分野別になっていて使いやすいです。塾に行っていると宿題もあるし、なかなか問題集まで手が回らないのですが、これ１冊あると弱い部分の強化ができていいです。
このシリーズは難易度高めですが、親子マンツーマンであれば◎です。解説が分かりやすいので、特に問題なく使っています。
日能研の教材で図形のものは少ない。しかし、図形問題の比重は無視できないです。この問題集は薄手でかつ、文字が大きいです。短期間での図形の復習、演習に好適です。４年⇒５年⇒６年とステップアップ可能な上、難易度順になっています。
中学受験生の家庭教師をしている際、本書を利用させてもらってます。小学生の日常学習向きではなく、受験対策用問題集。進学塾が作った、と言う感じがする。巷に出回ってるちょっと癖のある問題を集めたものではなく、良心的な問題が選ばれているのに好感が持てる。分量的にも良い。４年生とあるが６年生であってもここからやらないといけない子が過半数。問題のレベルはＡＢＣと分かれており使いやすい。解答が別冊になっておればもっと良いのだが。ただ、やはり受験対策問題集という側面がでているため公立小学校でのみ勉強をしているを進めている子がいきなり扱うというには厳しい。この問題集を独学で扱うなら前段階としては受験研究社の「算数標準問題集」や「ハイクラステスト算数」などがお勧めである。
小6の親です。わが子は図形問題が大の苦手。夏休みになんとか克服したい。しかし、分野別問題集の多くは入試過去問レベルで、自習に不向き。自力で解けるレベルまでさかのぼると、この学年までたどり着きました。2週間もあれば、十分1冊やり遂げられそうな薄さ。苦手なお子様にも達成感が味わえるのでは。例題は丁寧な解説つき。良問ぞろい。余白も結構あるので書き込み可能です。あれだけ嫌いだった図形なのに、今ではこの問題集を解くのを楽しみにしています。図形だけでなく方陣算についても載っています。
小学3年生に中学受験塾に入学する前の先取りとしてやらせました。例題&解説の後に類題があります。正答率別にA.B.Cランクに分けられています。問題数は94問。(数え間違えてなければ…)1ヶ月ほどで終わります。Ｃでも半分は正解できてたので、トップレベルとか最レベの3年より易しく感じました。
NoSQLはRedisやMongoDBやCassandraなど色々名前を聞くけど何が違うのか気になって、全体がわかる本として購入。KVS(キーバリュー、ワイドカラム)、ドキュメントDB、グラフDBと、色々なNoSQLの概要や各ソフトの簡単な説明もあって全体を把握できて目的を達成できるものだった。各NoSQLとRDBの比較や、ユースケースでの使用、NoSQLの選び方なども含まれており、実際にNoSQLを使うことになった場合の参考になりそうな内容も含まれていたのもよかった。ただ、本書は2016年1月時点の情報で６年前の情報のためそこは考慮が必要。本書の最後にも「３年も経てば内容は古くなるでしょう」と記載があるぐらい。個人的に評価を下げた点は以下。・横の余白が広すぎて、１ページの1/4が余白に使われている。・余白に加えて、本のサイズがA5なので図などは小さすぎて見づらい。・記載が冗長で、章や節ごとに同じ記載が何度もある。著者の渡部さんが大半を書かれていて初めて読んだ著者だが微妙。・扱っているDBごとに著者が異なり８人で書いている影響で、読みやすさに差がある。数は少ないがわかりづらい部分もある。
本のタイトル通りRDB知っていてNoSQL知らない人への入門として良いNoSQLをあまり知らない、key value でしょ？と思っていた人には良いNoSQLの複数（KVS、ワイドカラム、ドキュメントDB、JSON、グラフDB）を網羅しているため、それぞれの内容が薄くなってしまうのは否めない読み物としての本で、手を動かすといった内容ではない。時間かけずにさらっと読んでいって、後から見返すという読み方が良さそう
主要なNoSQL製品の最新事情やがまとめられています。各製品の比較や使い分けについて解説されていますので、NoSQLを使いたいけど、どの製品を使ったら良いか分からないといった人にオススメです。各製品の使い方については少ししか書かれていませんので、これだけで使いこなせるようにはならないでしょう。しかし、次のステップへ進むためのアドバイスも書かれているのは良い点だと思います。NoSQLの進化は目覚ましくできるだけ新しいの情報を得ることが重要です。この本の情報もすぐに古くなってしまうかもしれませんが、現時点（2016年）では有益な情報が得られます。
本書はRDBを使ったことがあるが、NoSQLについて初心者のエンジニアを対象に、NoSQLというバスワードの実態を理解できるように説明し、業務システムに活用するための視点を与える。前半ではNoSQL自体の説明、各種DBの中での位置づけ、よくある勘違いの説明を行い、後半で各プロダクトの具体的な説明と想定されるユースケースの解説を行う。例えば、以下のような内容。■NoSQLの種類：　大きく分けてKVS（キーバリューストア）、ドキュメントDB、グラフDBに分類される。KVS：スケールアウトして大量データに対するクエリを高速に応答できる。ドキュメントDB：KVSの特徴に加えてJSONを扱う機能が豊富。グラフDB：スケールアウトできないが、RDB以上に複雑なデータ処理が可能。■KVS/ドキュメントDBがスケールアウトできる仕組み：　①分散トランザクションを提供しない（複数のノードをばらばらに更新）。②分散しやすいデータ構造とクエリだけを提供する（データ間の関連の定義が不要）。③強い整合性を犠牲にして、データの複製に対して読み書きする（結果整合性）■NoSQLの選び方：　現状のデータ処理の具体的な課題にフォーカスして、それを解決するため「だけ」に調査する。売上を上げるか、コストを下げるかに直結する調査だけを行う。NoSQLで解決が期待できる課題は、クエリの性能向上、データレイテンシの改善、初期導入コストの削減。逆に期待できないのは、バッチ処理性能の向上。トランザクション処理性能向上は場合による。■ユースケース事例：　Redisを使ったWebアプリケーションキャッシュ、Cassandraを使ったIoT基盤、MongoDBを使ったECサイトのカタログ管理システム、など。NoSQLでできること、できないことをRDBに慣れたエンジニアが分かるように明記しており、わかりやすい。書籍としての構成も上手くまとまっている。2015年12月時点と情報が現在（2018年11月）からすると古くなってしまっているが、考え方を理解する上では有用だと思う。改版を期待したい。
様々なNoSQLが存在する中で、注目のプロダクトを掲載しており、それぞれのNoSQLを知るのに便利です。プロダクト毎に同様の文書構成になっているので、実情や特徴をとらえやすい内容でした。
各NoSQLについていつ、どのように使うとマッチするかを事例を例にあげた上で解説してくれます。事例の中にはRDBとの連携を示したものもあり各NoSQLがどういう特徴を持っているか、適材適所な部分はどこかを簡潔に載せてくれています。また明確に「こういう場合では使用に向きません」と不向きな点も載っているためよりマッチするケースの想像がつきやすかったです。
仕事で NoSQL の導入を検討しているため、この本を読むことにした。この本で紹介されている NoSQL は下記の通りである。・Redis・Cassandra・HBase・Amazon DynamoDB・MongoDB・Couchbase・Microsoft Azure DocumentDB・Neo4j現時点（2016年4月）の各 NoSQL の最新情報が纏まっており、有益な情報を得ることができた。個人的には Redis や Casandra は少し触ったことがあるが、Cassandra がスキーマレスで無くなっていることに驚きであった。そのため、各 NoSQL が流行った時期に触ったことがあり、その当時の知識しかない方にはオススメできると思う。また、RDS と NoSQL の適材適所についても分かりやすく解説してくれているので、RDS や NoSQL のどちらを導入するべきか迷っている方にもオススメしたい。間違った場面で NoSQL を導入して、後々痛い目を見ることがないように。
NoSQLを調べる際に最初に読みたい本。勉強になってます
・他言語の経験はあり・Javaは基礎的な部分しか習ったことがない。ほぼ座学のみ。・上記も何年も前のことなので忘れているな私ですが、こちらの商品でJavaの基本を学べました。紫本を1周しただけだと模試ではギリギリ6割といった感じでした。黒本で繰り返し問題を解いたら試験で9割の点数をとれました。
Javaは少ししか触ったことがなかったので、細かい概念をこの本で修得できたので良かった。もう少し問題を解きたいと思ったら、他の問題集と併用するとよいと思う。
とても素晴らしいJava Bronze解説本だと思います。紫本と呼ばれるこの本は、Javaの基礎的な概念と、Silverでも出題される応用的な問題がたくさん収録されています。コンストラクタ、キャスト、インクリメントを多用した問題は確実に出るので、この問題集を2周こなすことを目標にすると良いと思います。JavaBrozeを取得するためには、下記の流れが良いと思います。・スッキリわかるJava入門 第2版 スッキリわかるシリーズ・2週間でJava SE Bronze の基礎が学べる本・徹底攻略 Java SE 7/8 Bronze 問題集［1Z0-814］対応 徹底攻略シリーズ・オラクル認定資格教科書 Javaプログラマ Bronze SE 7/8(不安な場合)オラクル認定資格教科書 Javaプログラマ Bronze SE 7/8 スピードマスター問題集黒本は、わかりやすい問題を解くことに特化していると思います。白本は、実際に出題された問題に特化していると思います。この紫本は、黒と白の両方の良いところどりをしていると思います。なので、この本だけでも合格できる可能性は高いと思います。この本で出題されている問題で、キャストとstaticメソッドの扱いはひっかかりやすい問題なので、実際にコードを打ちながら勉強すると良いと思います。アップキャストした際には実行時エラー、継承関係がないクラスでキャストした際にも同様に実行時エラーが出ることを、がっつりコードを打ちながら勉強すると良いと思います。この本でたくさんそうした問題が出るので、たくさん勉強出来ることは素晴らしいことだと思います。ただ、誤植がいくつかありました。else if文の解説で、突如switch分の図が挿入されている。これは誤植でしょう。問題3-3の、Cの解説は間違いでしょう。文字リテラルと数値リテラルの型が違うという問題の意図であれば、char型なのでシングルクォーテーション2つが適当では？そもそも、ダブルクォーテーションが1つしかありません。問題31は、System.out.printlnなので改行しないとダメだと思います。あと、下記解説はもうちょっと分かりやすいと初学者には良いかなと思います。クラス内で、メンバ変数とローカル変数が同名の場合は、「ローカル変数＞メンバ変数」となることを記載するべきかなとは思いました。staticメソッド内からsuper、thisを使用できないという理由もしっかりと記載したほうが良いのかなと思います。
最終的にはJava SE8 Silverを取得するため、その足掛かりとして、より低位な資格であるJava SE8 Bronze用の本書を購入しました。趣味・仕事両面でJava、およびオブジェクト指向言語を殆ど触ったことが無かったので「インスタンスって何？」「継承って何？」「コンストラクタって何？」というド初心者でしたが本書による勉強時間通算24時間ほどで収録された模擬問題の大半を解けるようになりました。かなり良い本だと思います。
外側見た目は良いですが、中身は赤ペンでチェックを書いたりして評価２にしました。
とても勉強し易いです。bronzeから引き続き使わせて頂きます。
この本1冊で余裕ではないけど普通に合格しました。但し完全な初学者は、簡単な本とかProgateで遊んだりしてから入った方が幾らかマシだと思います。解説があまり詳しく書かれていないので、黒本とかと併用した方が確実かなと、あと、最後の模試は本当に助かりました！試験でもほぼ同じ問題がでてその分時間稼げましたってことでほしよっつ！！
発売から6年が経過している・新版も既に販売されている本ではありますが、個人的に不満の多い作りでしたので、この場を借りて書かせていただきます。(といっても内容自体は他の方のレビューとほぼ同じなのですが…)まず一つ目、Java Bronze試験対策の参考書と書かれていますが、解説 (練習問題の解説ではなく基礎を教えている部分です) と章末の練習問題の難易度の差が大き過ぎます。他の方も書かれていましたが「解説6割・練習問題10割」ですので、"所々抜けはあるが、大まかな事は分かった" というレベルでは練習問題に間違いなく捻り潰されます。(あと、これも他の方のレビューで書かれていましたが、for文中のインクリメント・デクリメントの処理の流れ等の説明が無いというのは本当です。練習問題で出してくるにもかかわらずこの仕打ちはもはや嫌がらせのレベルだと思います。)そして二つ目、"試験対策の参考書としてダメならJavaの入門書として活用出来ないか？" と考える方が出てきそうですが、残念ながら答えは "No" です。この本はあくまで "試験対策の参考書" として作成されたものなので、Javaの入門者・初心者がこれを使って勉強しようとすると、専門用語を多用した説明文に心が折られると思われます。Javaというものがどういうものなのか？を理解したいのであれば、今時であれば他にももっと親切な解説書は沢山あるはずです。ここまで二つの不満点を挙げてきましたが、"Java入門者がJavaの勉強をするのであれば他のJavaの解説書を、ある程度Javaの知識が身についていてJava Bronze試験の合格を目指すのであれば練習問題の多い黒本を" というように、"基本的にどっちつかずな出来である為、余程財力に余裕がなければ買う必要はない" というのが結論です。著者の方には申し訳ないのですが、この本が必要な人間とはどの程度のレベルなのか？を考えた作りにしていただきたかったです。
これまでに何冊も、javaの試験対策の本を出されている、山本さんだけあって非常にわかりやすかった。javaの理解が0の方が、いきなり試験を行うのであれば、この本だけでは不足だと思うが、基礎を勉強した上でこの本で対策すると、何も問題ないと思う。とにかく要点をつかんでいると思います。
プログラミング初心者(経験者)向けの本。内容紹介に「初めてプログラミングを学ぶ人にでも…」と書いてあるが、プログラミングの経験や知識がない状態でこの本を理解するのは難しすぎると思われます。・説明不足が多い。・専門用語を当たり前のように使う。上記を補う必要があり、経験や知識が多少あれば、ある程度自分のイメージで補って理解すること、ネットで補足を探し出す事が出来る。「初めてのプログラミングの方」には、それができないと思われるため、この本は不向き。また、各章の終わりに練習問題があるが、その章の項目について6割程度の説明しかされていないにも関わらず、10割レベルの練習問題が出題される。回答の説明で足りない4割を補う解説もなく、全体を通してこの本にプラスで他の資料、ネットの情報等が必須。
基礎的なコマンドを中心に解説されてるので、入門にちょうど良い。実際これを読んでいたことで、たまたま調べていた全く別のツールが、ドキュメント指向DBであることが分かって、理解が深まった。コードの背景が黒で、まとめが黄なので、kindleで自分でハイライト出来ないのが少し残念だった。（後でハイライトだけ拾いたかったので）お節介だが、せっかく内容はいいのに、表紙の画像の横幅が狭いので、なんか安っぽく見えるので直したらいいのにと思った。
NoSQL型のデータベースを扱う必要があり、初心者向けの書籍を探していました。MongoDBの基礎から丁寧に説明されており、大変わかりやすかったです。またMongoDBの魅力や可能性を感じることができましたので、読んでよかったです。
初心者にもわかりやすいように、その都度例を上げて説明してあり、分かりやすかったです。windows、LinuxでのmongoDBのインストール方法やデータベース構築方法が詳しく説明してあります。個人的には、レプリカセットやシャーディング等データベースを構築する方法が詳しく記載されており凄く役に立ちました。続編として、node.jsのmongooseを使用したクエリーの扱い方や、トランザクションの利用方法などの詳細を希望します！
まだ知見の少ないMongoDBに関してこれだけ網羅されている本は非常に助かるものです。ありがとうございます。
書籍としてまとまっている情報が他にあまり無いので貴重な情報源です。実際の設計構築に必要な内容がコンパクトにまとまっていて大変助かりました。
MongoDBを含めてNoSQL初心者です（一般的なSQLは操作できます）そんな初心者でも、本書のお陰でほとんどつまずくこと無く、MongoDBの導入を進められるようになりました。内容は懇切丁寧でとても素晴らしいのですが、私が共感したのは「出版にかける想い」の部分です。--- （巻頭より引用）・最新の正しい情報を得るためには英語ですが、公式ドキュメントを読んでトライ＆エラーを繰り返していかないといけません。これだけで、何カ月もかかってしまいます。そこで、何カ月も調査に費やしたことをまとめることで、『他の方が調査にかける時間を、短縮してもらおう』と思った訳です・ステムエンジニア向けの入門書を読んでいると「もったいないなぁ」と私は思うことがよくあります。それは、『説明は分かりやすいんだけど、ボリュームが少な過ぎる。』ということです・入門書で大事なのは、手に入れた瞬間から実践レベルまでになれることです---多くの本はプロモーション的な出し惜しみなのか、一気に実践レベルまで執筆するのが大変なのか、色々な事情があるとは思われるのですが、この本は一切手抜きがありません（個人的感想ですが）著者の想いが具現化されているこの書籍、本当に素晴らしく・有り難い気持ちになりました。本当にありがとうございました！
概要、RDBとの比較、基本操作、プロファイリング方法、シャーディングとレプリカセットのロジックと構築方法、デーモン設定、ストレージエンジン、セキュリティ、DB設計（アンチパターンと推奨設計）...と、広く浅いですが入門書としては十分具体的に解説していて体系的に基礎を理解するには申し分ない内容でした。解説に使っているクエリもダウンロードできるので本だけで理解できなかった部分を自分で編集して確認できるのも良かったです。
mongoDB の日本語の解説はこの本が1番わかりやすくて、量も多いと感じました。基礎部分なので、さらなる活用ができる応用編も欲しいので、星4つにさせて頂きました。
仕事で携わることになりましたが、Webではまとまった記事がなく、理解するのに苦労していましたが、この本でおおよその理解をすることができました！
解説も丁寧で、入門書にしては中身も濃く、初心者である私には素晴らしかったです。
アルゴリズム関係では本は2〜3冊読んだのですがそのときは理解できたような気はするものの使わないからか,あまり理解できていないので,お会いしたことのある先生ということもあり手に取った1冊です.前書きでは,くどく書かれているとおっしゃっていますが私から見ると,簡潔に書かれていると思いました.ですが,よく読めば,わかりやすかったです.先生の専門が計算幾何学であるため,初心者のアルゴリズムの本にしては,計算幾何学のトピックスが多いようにも思いましたがどのトピックスも簡潔に書かれており後で参照するのも便利ではないかともいます.また近似解法の具体的な手法も述べてあり,平均的に早く解けるものがみんなが欲している近似解法の教訓のようなことも書かれていて参考になります.最後の難問を使った情報の保護では,ナップザック暗号についてだけ解説がありましたが,一般的なのはRSA暗号なのでこちらも解説された方がよかったのではと思います.コラムにカンタベリーパズルが紹介されているのも現在の量子コンピュータではないですが,計算をするだけで無く新たな考え方で直接IC化してしまう様なことの参考になるかもしれないとおもいました.
私、情報工学部の1年生なのですが、これからアルゴリズムを理解するのにこの本はとても役に立ちます。参考書としてオススメします。
以前より気になっていたOrange（Data mining tool）。公式ページに解説、チュートリアルがあり、この本で解説されている内容も網羅されていますが、順番としては、まずこの本で一通りのことができるようになってから、公式ページのDocを参照するのが良いと思います。本で書かれているOrangeのバージョンは少し古いものですが、全く問題ありません。機械学習の初学者で、ある程度表面的には機械学習で使われるモデル（アルゴリズム）がわかっている人におすすめです。前処理やモデルのチューニングにも触れてくれているのも参考になります。執筆当時のOrangeのバージョンにあったのか、なかったのかわかりませんが、ニューラルネットワークや時系列分析にも触れた続編や応用編を望みます。機械学習の理論については大雑把なイメージのみ説明されているだけですのでご注意を（自分にはコンパクトな説明で特に問題ありませんでした）。P.S. 機械学習自体の説明がコンパクトと言っても的を得たよい説明だと思います。
買って後悔はしてません。内容はこれから勉強します。
チームの戦術、戦略、戦力分析の参考書です。
スコアラーとして大変勉強になる内容でした。試合に貢献できた達成感味わいたいので、観察眼磨いていきたいです。
Excelのグラフの編集はたまにしかやらないので、見様見真似でやっていると思うようにいかず、結構時間がかかっていた。そこで、図書館でこの本を借りて中身を見たら使えそうなので、辞書代わりに買いました。
ある会社でAndroid搭載スマホのシステムテストに関った経験から、現在は趣味でAndroidのアプリを個人で開発しています。アプリ開発関係の書類は何冊も読みましたが、Androidのプラットフォームはあまり詳しくなかったので技術力の底上げになることを期待してこの本も読んでみました。なんとか通読しましたが、アプリ開発に直接的に役に立つ知識はほとんど得られませんでした。例えで言うと、TOEICの勉強をしようとする人が言語学の本に手を出してしまった、といった感じです。
平凡な技術者は API ドキュメントを読むだけだが、優秀な技術者は下回りまで勉強しているものである。ソースコードを読める Android ではなおのことである。著者は巨大な Android を上から下まで調査している。トップレベルの力量に触発されつつ、システムの下回りに興味を持つきっかけとしてお勧めしたい本です。図が多く説明も丁寧に解説されている。その分情報密度は低いが、一人で読んでいて理解できずに挫折する心配はない。Android のみならず 60fps を求められる GUI システムに関わる開発者にお勧めしたい。
私は大学生最後の年に、まだCupcakeだったAndroidと出会い、プログラマーとしても道を歩み始めました。私のエンジニアとしてのキャリアは、Androidの進化と共にあったと言っても過言ではありません。そんな私にとって、この本は自分が歩んできた道が、どんな土台によって成り立っていたのかを教えてくれる本でした。Android Java純粋培養のエンジニアとして育ってきてしまった私が、どこまで成長できたのかを教えてくれる本でした。第3章「第3章 UIスレッドとHandler」も第4章「Viewのツリーとレイアウト」も、2009年の自分には読めなかったでしょうし、2012年の自分にも読めなかったかもしれません。でも、2018年の自分には読めました。読んだことで、これからの5年、10年を闘うための確かな基礎を得た手応えがありました。Androidエンジニアとして生きていこうとする、すべてのエンジニアに、スキルの定点観測として読んでほしい本です。
最近、レビューなど書かなくなって久しいですが、この本に関しては書かなければならないと感じました。まずは間違いなく良書です。ただ作者もしつこく言っているように人を選びます。技術書を (1) 技術を解説する・リファレンスとして使う書籍。または (2) 作者の経験や主義・主張を展開する、いわば読み物系。と大別するなら、本書は (1) の皮を被った (2) という感じでしょうか。どちらかに特化すればもっとシンプルにまとまったのかもしれませんが、貪欲に全てを網羅しようと試みているようです。編集者も苦労されたのでは。試みは広範囲で成功していて、作者が警告するほど本書は難しくなく、むしろ懇切丁寧に「下から上まで」システムを詳細に説明してくれます。図らずも本書の目的である Android 開発に限らず、もしあなたがソフトウェア開発をする上でメンターや OJT が欲しいと思っているなら、これを読んでみる価値はあると思います。会社の先輩がコンビニ弁当を一緒に食べながら昔話を織り交ぜて仕事を教えてくれるような感覚が得られるかもしれません。また技術書として即効性のあるのは第4章でしょう。あなたが Android 開発に携わっていて、今のアプリを改善したいと考えているなら、この章を通読するだけで、ちょっとおざなりにしていた技術的負債に気付かせてくれるでしょう。本書の後半は、OpenGL ES や VM まで切り込み、それぞれ実装の歴史を交えて分かりやすく解説しています。Google が問題点を克服してきた過程が詳しく解説されているのが良かったです。惜しい点として、度々挙げられる例が Windows の WPF であるところです。本書の対象となる Android 開発者なら往々にして iOS の知識もある場合が多いはずなので、もう１つのモバイルプラットフォームである iOS を例に持ってくるのが適切ではないかと。また本書が随所を丁寧かつ詳細に解説してくれるので、ついつい期待値が高まり、これが「支える技術」シリーズなのだということを忘れがちになるのは少し問題かも知れません。例えば DisplayList に入ったコマンドがどのように OpenGL のコマンドにマップされるのか、どこに Transform が入っているから再描画が簡潔に行われるのか、Overdraw を避けるのは当然として Occlusion はこういうロジックだから View の構成どうした方がいいとか、このような疑問は本書の情報をもとに自分で調べる必要があります。ともあれ、本書は Android プラットフォームを広く深く解説してくれる良書であり、ほぼ全ての開発者は、読了後に多くを得られると思います。
ここ数年で読んだ技術書の中では一番に良かった。著者のAndroidに対する思いが滲み出ている力作だ。昔、スマホ開発の現場でAndoridのコードを下位のデバドラから上位のJavaアプリまで見ながらデバッグした経験があるが、並大抵の苦労ではなかった。著者も相当なパワーを注ぎ込んでこの本を完成させたのだと思うが、あの当時、この一冊があれば相当楽できたと思う。この本の難易度だが、メッセージループやepoll()と聞いてピンとくる人なら、面白く読み進めることができると思う。ピンとこない人はコラム欄などで基礎知識の補足がされているが、ちょっと苦労するかもしれない。ただ、この本で書かれている「Androidの仕組み」的な知識はまっとうな開発をするためには必須なので、頑張って勉強しても損は無いと思う。難しいトラブルに遭遇した時、本書の内容を理解すれば原因のアタリをつけるのも容易になると思う（答えを求めてWEBを漁り大量の時間を消費してしまいがちだが、、、）。何よりブラックボックス的な部分を少しでも減らせることは、実装に自信が持てるので良いことだ。個人的にはHandlerとスレッドの関連付けが今まで謎で気持ち悪いなと思いながら使っていたのだが、その謎が解けたのは大きな収穫だった。ちょくちょく登場する息抜き的なコラムも興味深く面白かった。第二巻が楽しみです。
普段使っているコードがどう作用するか？と言ったことを一つ一つ学ばないといけない時があります。こういったときに活用できると思います。ただし、残念ながら体系化されておらず、辞書的になっているところが残念です。初歩テキストを読み、さらに踏み込んだ上で、上級者になろうとする際に読むと良いかもしれません。
SQL以前にデータベースを扱うにあたりどのように構成するのがセオリーか説明してくれている。SQL構文はネットで検索すれば沢山でていもののとても初心者向けの良書だと思います。
内容は丁寧で分かりやすいが脱字が多い基本構文の解説のみで物足りない
親切丁寧な解説で初心者にも分かりやすいですが、データベースの操作（検索など）が解説の中心なので、自分でデータベースを作りたい私としては違う本にすればよかったと少し後悔しました。もちろん、自分で作ったデータベースを運用するにもその知識が必要なので、全くの無駄ではありませんが。あと、内容的には関係ないですが、74-75頁でDISTINCTがDISTINTCになっている箇所がいくつかあってちょっと気になりました。
学習期間2019年11月1日～11月25日まで。1巡目総学習時間7時間13分（仕事が休みの日のみ学習）来年2020年春に基本情報技術者試験を受験するために勉強をしていたのですが、SQLの勉強法が分からず悩んでいた所、この本のことを知って購入しました。学習環境となるMySQLのインストールも、手順通り行って、すぐに学習環境を整えられました。実際にデータベースを作成して、検索、整列、集約、結合、グループ化など、基本情報技術者試験の学習で私が躓いていた所を丁寧に学べました。この本を1巡して、かなり頭がスッキリしましたので、再度Chapter2から2巡目に入ります。
文字の間違いが結構あるWHERE が WHEHRE になってたり入門者の自分でもすぐわかっちゃうんですが校正ちゃんとやってるんですかね？内容は丁寧でわかりやすく知識がほとんどない自分でも取り組めるからそこは評価してます
黒・青2色刷り書籍。ページの裏透けは少なく、文字はやや大きめ。スクリーンショット多めで感覚的にわかりやすく、例えばソフトのインストールだけでも数ページを割いている。基本的にMySQL CommunityEditionを使ってコマンドライン操作での解説が進んでいく。かなり丁寧に説明されているので躓くことは少ないように思える。確かにこれはこれで勉強になるが、巻末あたりにGUIアプリなどの紹介があっても良かったかも知れない。巻末には目的別SQLリファレンスが収録されている。
新卒2年目です。仕事でSQLを使用することになり、勉強のため昨年購入しました。SQLどころかプログラミングすら未経験だったのですが、解説が分かりやすく本当に助かりました。今でも『そういえばあれどうやるんだっけ？』と思った時に重宝しています。情報系の参考書は、どうしても内容をあれもこれもと盛ったものが多く、それはそれで非常に勉強になるのですが初心者にとってはこのくらいシンプルで丁寧な解説の方が助かります。おすすめです。
WEBサイトを自分で作っていると必ず、データベース使えればもっと自由なサイトづくりが出来るのに・・・という場面に出くわすと思います。私もそのクチで、何とかかんとか、レンタルサーバ側で準備したMYSQLを使って、SNSシステムやらサイト内検索システムなどを設置して自分で使っています。しかし、何とかマニュアルどおりに作業して使えてはいるものの、自分でプログラミングができるわけではなく、あくまでも私はコンテンツ制作者なので、こういうシステムのほうは他人が用意してくれたものを、何とかエラーが出ないように、エッチラおっちら使っているだけです。そんな私も、もう少しSQLの何たるか、もう少し使い方の幅を広げるにはどうすればいいのか、が知りたかったのですが、「いちばんやさしいSQL入門教室」という割には、イマイチとっつきづらい内容でした。少なくとも、「データベースをゼロから始めたい初心者」というのがどういう層を指すのか？「プログラミングはするけれどデータベースに関しては初心者」という条件付きなのか？私が無知なだけか、或いはこの本がターゲットとする層から外れているのかもしれませんが、もう少しSQLの全体像が分かりやすく書いてあればいいな、と思いました。
イチからデータベースをこれから学びたいという人にとってはDBMS？SQL言語？CRUD？なんか難しそう～というイメージかもしれませんがこの本はそんなアレルギーを与えることなく、素人にもとてもわかり易く解説されています。一番の特徴は、文字の説明だけでなく、SQL構文、コマンドプロンプト画面を差し込んでくれるので実際にやりながら覚えることができます。で、実際に扱うDBも無料で使えるMYSQLなので、学びが着手しやすいです。この一冊読み終えた頃には、ほぼほぼDBの基本的な処理をマスターすることができます。
コンピューター言語もプログラミングも知らないにもかかわらず、生来の野次馬根性から本書を手にしました。「いちばんやさしい」と「入門教室」に誘われたのです。/ しかし、中身をパッと開き見て後悔しました。これは、むずかしい。/ それでも、「はじめに」から読み始めると、懇切丁寧です。実際の中身をチャプター１から見ていくと、データベースとは何かといったところから解説がなされていきます。/ パソコン画面上での操作手順が示されていきますが、“腰を据えて学ぶ意志さえあれば”、その都度解説が付されてまいりますので、漸次理解していけそうです。/ 実際のところ、そのような気にさせてくれるというだけでも、入門書として星５つなのではないでしょうか。/ それにもかかわらず、評価を星４つとしたのは、評する評者の資格のモンダイです。実際にデータベースを有効活用できる術を基礎から身に付けることを願う方は、実際に手に取ってご覧になることをお勧めいたします。
筆者のブックマークの整理術を知ることができました。パソコンで必要な情報へのアクセスまでの時間を最短にしたい方、整理術が気になる方にオススメです。よく使うURLもキーワード検索で開くことがあるので、これを機にお気に入りデータを整理しようと思います。ありがとうございました！
ブックマークをどんどんやってしまうのですが、後々見返した時にどこにあるのかわからないことがよくあります。こちらはブックマークの整理方法をわかりやすく書かれており、とても実践しやすい内容でした。タイトル例を参考に、私のパソコンのブックマークも整理します！ありがとうございました。
私のブックマークは超乱雑でしたｗ。これを見て少し整理したいなと思いました！ありがとうございます。
いつかは、、と思いつつ散らかりっぱなしになっていたブックマーク。この本では便利なソフトウェアからフォルダの分類例（タイトル例）まで丁寧に紹介されていて、真似して順番にやっていけば、私の大迷宮となったブックマークフォルダも一掃できそうな予感。せっかくお気に入りに入れていても、いつでもササッと活用できなければ意味がありませんよね。データ整理のモチベーションを上げてくれる１冊でした。
効率良く情報を得るために設定したブックマークですが、いくつかフォルダは作ったものの、はみ出ているものがまだまだたくさんあり、探すのが大変。場合によってはブラウザで検索した方が早く「ブックマークの意味なし」なこともありました。本書の巻末にある分類の仕方は、ほとんどの人がそのまま使えるのではないかと思いました。多少のカスタマイズをするだけで、かなりスッキリしそうです。分類から考えるのが面倒な方は、丸パクりでもよいと思います！
とてもわかりやすくて、入門編として、とても役に立ちました！
業務の都合でとにかくグラフの作り方が知りたかったので、グラフの種類別に手順があったところが決め手で購入しました。Tableauの用語を索引で調べながら作れたのも良かったです。短時間で、ダッシュボードが作れました。
あるグラフが作りたくて、本書通りに操作したら簡単に作成できた。グラフごとにまとまっているので使いやすい。グラフ以外のパートも、項目ごとに読み進めやすい。
他の本よりわかりやすく書かれていて、とても参考になりました。
この本には、Prepの機能のほとんどが載っています。Prepは出たばかりなので、Tableau社の教育メニューにもないですし、ネットにもあまり情報がなく、解説されている本はありません。データを準備する時間が大幅に削減できることを期待して、使ってみようと思います。
わかりづらいTableauの製品とライセンスから整理されています。データは製品に入っているので、ダウンロードする手間がなかったです。手順が省略されずに記載されているので完成図が作れます。あとは、繰り返し操作して覚えることが必要です。
本書は良く調べて書かれていて、章構成が良く、本そのものの配置などのデザインが取り組みやすいです。本にそって実践しながら進められます。Tableauの基本を学ぶのに役立つと思います。
細かい説明は後回しで、いろいろなグラフの作り方から載っているところが良かったです。Tableauは、わかれば簡単な操作ばかりですが、知らないと作れないグラフが多いので、このスタイルは助かります。この章と、ダッシュボードの作り方の章だけ読めば、だいたい使えるようになります。画像が多く、手順に省略がないので、本の通りに動かせば作れます。その後に、自分で再現してみることでより身についたと思います。
購入したきっかけは、せっかくTableauというお高めなソフトが使えるならば、もっと使えるようになれば、自分のスキルの一つになると思ったからです。特に習ったりせずに業務で使っていましたが、そういう人でも一度読んで見る価値ありです。新しい学びがたくさんありました。できるようになると楽しいです。
今まで、不明点は都度都度ネットで検索しており、手元で調べられる本の方が効率的だと思って購入しました。いざ読み始めると知らないことが多く、半分ちょっと読んだところですが、全体的にだいぶ使いやすくなりましたね。タブローは独特の用語や特徴があるので、少し使えるようになった時期に読むからこそ、理解が進むと思います。
この一冊を読むことでHaskellを使った関数型プログラミングの知識は身につくかと思うが、初心者が読む本ではなかった。文法の説明が丁寧でないため、読み進めるうちにと置いていかれる。サンプルコードが優しくない。他の入門書を読んだ上で、さらに技術力を高めたい方が手に取る本だと思った。（まずは、すごいHaskell本をお勧めする）
難しい概念はらなるべく後回しにしてくれる。難しい概念にはちゃんと説明をいれてくへる。後半はhaskell解説本になってる。haskell入門本を読んで挫折したが、この本のおかげでだいぶ理解が進んだ。
理解するのが難しいので有名な　純粋関数型言語 Haskellについて詳しく説明されています　もっともまだモナドの部分で立止まっているのですが・・・なかなか実践とは行きません　しかし、他の Kindle Haskell本と併せて読んでいるのですが、秀逸だと思います　おしむらくは Haskell特有の記号の一覧がどこかにまとめて掲載されていればもっとわかりやすいように思いますこんな漢字で VS Codeで動かすのが簡便で良いと思います
きれい
何か所か誤植がある。初心者では見つけることが厳しい。さんぷるListが動かない。 .
C#全般が載っています。これで初級レベルをマスターできれば中級や上級レベルへ移行できます。
データベースの章はでたらめ。「プライマリキーは１つの列のみ」とか「SQLインジェクション」攻撃の標的になるサンプルとか。
初心者には、（？）ってなることがたまにあるとおもいますが、中級者には向いてます！！！量が多いので、知識量もとても多いです！！！他の入門書より分かりやすいし、AIや、UWPのアプリを作ったり,C#についてなど色々動作知れます！！！おすすめです！！しかも、このシリーズ、色んな言語に対応しているのでオススメです。見た目も統一されています！！
ありがたく大変役に立っていて、業務でとても助かったいます。ありがとうございます。
はじめにプログラミング経験の全くない人、ハードを含めたコンピュータの動作の仕組みについてまるで知らない人は、他書で情報処理関係のベース知識を得ておく必要があると思われます。メモリ内でのデータの動きやプログラムの制御構造など、コンピュータそのもののお作法を知らないと、Ｃ＃を知る以前に何を言われているのかわからず、そちらに捉われさっぱりページが進まないということになりかねません。（８００ページもあるので読み進めるのが大変ですｗ）それから、目次を見れば分かりますが、ＳＱＬなどのデータベース関連、ＷＥＢ関連の知識もある程度必要で、全く知らないと言われている意味が分からないと思われます。本題・・・指摘している方が多いですが、誤植が多いですサンプルコードをそのまま入力すると動かなかったりします。（たぶん他の言語からの流用のせい）ただ、ほとんどが機能説明なので、実際に動かさなくても仕様が分かれば十分です。（文脈から、コードを見ただけで「これおかしい」と気づくものもあるｗ）入門書とは、使う前提になる予備知識を得るためのものだから細部にこだわらず、機能構成の概略がつかめれば良いでしょう。どちらにしろ、入門書だけでは自分の要求を満たすプログラミングは出来るようにはならない。いずれは上位の他書を見ることになる。本書はＣ＃の特徴から入り、データ型、演算子レベルの話から、実際にソフトを作ろうとすれば必ず気になるファイル入出力や印刷などについてまで網羅的に解説されていて、プログラミングスタイルを概観するには便利だと思います。かなり分厚い書物ですが（届いたときに驚いたｗ）、ベースの知識を得るのに効率的でお勧めです。。☆―――――――――――ＩＴ関係は伝統的に大ぶりな書物が多いが、もう少し取り回しの利便性を考えてもらえないだろうかコードリストを画面そのまま載せてることで書面の大部分を占めてしまい、それがかさばる原因なんだと思う。コードが表現できていれば機能は果たせるはずで、フォントを選べば小さくても見やすくできると思いますが。☆―――――――――――
SQL関連に関しては、応用レベルの記載しかなく、SQL初心者は、おそらく学習にはならなさそう。中級者向けの参考書になると思います。SQL初心者からすると、ググった内容と、本書の記載内容が違っていて、結構、混乱します。
中級者が更に知識をアップグレードするのに向いてる本。すでにc#、オブジェクト指向、デスクトップアプリは作ったことがあったので、分からない所を検索して使ってます。本書分厚いので辞書的な役割です。スタックメモリやuwpの基礎が書いてあるのは中級者向けかと
元々RやPythonをやっていて、最近仕事でどうしても必要になりC#を使い始めました。分厚い本で、イラストも多いので一見詳しそうな本に見えますが、中身は薄い。プログラム作成中にエラーなどで引っかかる様な肝心なことが書いてない。例えば逐語的識別子である@の説明や例が無い。言葉さえ載っておらず、ファイルの読み書きでPATHを書かないといけない場合必要なのに説明も例もなく、つまずいでしまった。結局、ググって調べました。本を読むよりググった方が早い。
Software Design の連載「RDB性能トラブルバスターズ奮闘記」の書籍化です。はじめににあるように著者は「IT業界にSQLを啓蒙しなければならない」とり使命感から、日々業務で得たノウハウを惜しげもなくこの本に展開しています。その語り口を本人(生島さん)と、架空の新人、その上司との対話形式ですすめているため、わかりやすかったです。個人的には以下の点がよかったです。エピソード3: 結合条件と抽出条件の違いは: 生島さんのライフワーク(?) 外部結合のONとWHEREの違いエピソード4: 複雑な場合分けロジックもCASE式で一発解決! : セルコ本にもあった別々に行うとだめな処理をCASEで一気にエピソード10: JOINのアルゴリズムを理解する: 新しいアイデアの各結合の図示エピソード14: インジェクション対策のためにもSQL動的組み立ては避けよう: 固定SQL毎回パース、のアイデア本屋でぺらぺらめくって一つでもグっときたら「買い」です。惜しむらくは、この本はOracle / MySQLを前提としているのに、それを明記していない(各章の例からうかがえるものの)ため、それを前提としているのに記述がない章では「はぁ?」ということになってしまいます。例えば、エピソード19のp.211のストアドの例では、ストアドの中でSELECT文をそのまま書いて、その出力を変数やカーソルで受けずに、そのまま出力されることを期待して「AP側からはCALL文で呼び出せます(SELECT文と同じ扱い)」とありますが、私の認識だとそのようにUnboundなSELECT結果がそのままストアドの外に渡されるのはMySQLとMicrosoft SQL Serverだけで、それ以外のRDBMSでは行われません。このI/F部分だけでも、明確にして、内部のSQLはロジックなどを含まない素のクエリにした、薄いラップとしてのストアドならば、もっとリーチ・ヒットし適用できる層は多そうです。
最初タイトルを見てSQLの解説書かと思いましたが全然違いました。私は既にミックさんやセルコさんの本も読んでますし、会社でも一人でDB周りのことをさせられていますのでとても関心を持って読み進められました。特にアジャイル開発とAPIによる開発は完全に賛成です。今の職場でもウォーターフォール型の開発でDB設計が完成しないとフロントエンドを製作できないというような風潮ですが、それは理由に製作、試験が進められないというのは単なる怠慢だと思っていましたが、なかなか口にはできなかったのでこの本のおかげでこれからはそれは怠慢だと指摘できると思います。またなんとか内部試験まで終わっていざ客先の受け入れ試験をやっても相当数の変更要求が出てその数100を超えています。客先は以前内部試験の最中にわざわざ3日かけて操作を確認したにもかかわらずです。今思えばそういう場に来るのは管理職レベルで実際に使う運用部門の目線がないのでその段階で運用に沿った目線で品質チェックができなかったのであろうと理解しています。そういう意味においてもやはり画面仕様や客先の管理職だけを対象としたデモンストレーションのみで客先合意が取れたとして進めるのは無理があり、なるべく開発の初期で客先の誰もが使えるプロトタイプを提供して運用部門の指摘を洗い出した上で設計を進めて行くのが不可欠と感じます。またAPI開発でスタブをマクロで生成してフロントエンドの試験をするのは早速取り入れようと思います。私はAPIをフロント側に提供する側ですが、いつも先述のDB設計と試験データがないために試験ができないとしてPJ側から責められるので、スタブで試験をして品質を高めるのが当たり前の風潮に持っていきたいと思います。この本をJava側の製作者や経営者にも読ませて共通理解を広げていきたいと思いました。
SQL初学者、というより仕事でMS Accessをガンガン使っている者ですが、UnionなどたまにSQLを使うことがあり、本格的にSQLを勉強することにしました。IN、EXISTの違いをうまく説明しているサイトや本を探していたところ、ちょうどそれを説明してくれている本書に出会いました。自分には2章の内容までで十分なのですが、とても身近な例と明瞭・濃密な説明で、ものすごいノウハウを伝授してもらった気分になります。全体的に軽い文章なのでサクサク読めるのですが、実例のSQLは実際に組み立ててみるとさらに深く理解できるようになります。買ったあとに筆者について調べてみましたが、ネット上で評判は様々ですが、少なくとも本書では筆者の熱意を感じますので、評判だけ見て本書を避けるのはもったいないと感じました。手続き型言語を習得したエンジニアよりも、Excelに使い慣れた事務屋の方がSQLの習得が早いというのは、一見乱暴に聞こえますが、SQLのイメージの仕方を理解してみると確かにそうかもしれないと思うようになりました。
SQLは集合志向の言語であり、手続き型の言語とは発想がそもそも違うということがたびたび強調されており、この点を理解していない人には勉強になると思います。出てくる実例はいかにも現場で遭遇しそうな話で、本書の内容が役に立つケースは結構あると思います。ただし、終盤の２章、筆者が提唱する「APIファースト開発」についてはもう少し議論が必要な内容です。面白いやり方だとは思いますが、本書ではこの開発方法を取ることのデメリットがまったく書かれていなかったのが気になります。たとえば、ストアドプロシージャを使うと必然的に特定のRDBMSに依存するコードを書かざるをえなくなりますが、それはいいのか？とか、DBMS側に書いたロジックのバージョン管理はどうするのかとか、実運用するとなると結構疑問は多い気がしますが、そういう話についての言及は一切ありません。
サンプルコードをつけておいて欲しかったです。
パラパラめくった感じ、口語が主な文章でしたので、軽い気持ちで久々にSQLの本でも読むか、と思って買ってしまった今年最悪の本です。批評する前に、評価「したかった」ところを。1.初心者へ親しみやすいようなストーリー形式での説明。2.SQLは他言語と考え方が異なるという提示。本に出てくるSQL自体の出来は、私がどうこう指摘できるレベルではないのですが、問題ないと思います。それ以外に目についたところを。1.たまにSQLを持ち上げるために書いている他言語のソースがひどすぎる。　例えば、Javaを用いて、配列に格納された数値の平均を計算するために、平均の変数をintで宣言等。2.例文に挙げているSQLの実行環境がOracle、MySQLと異なっている。　注釈で「MySQLはifnull,OracleはNVL...」と分けて書いているのところは丁寧だと思いますが、　読者が動かして読むことを考慮に入れた場合、実行環境を固定し明記すべきでは？　（移行によって問題が起きた例を提示している箇所は除く）3.APIファーストについて全般。　画面モックから作るのと何が異なるのか。　SQL/ストアドプロシージャで作成した方が明らかに優位になる場合が、　私にはわかりかねます。　著者の会社の宣伝をしたいのでしょうか？4.エンジニア/プログラマーを必要以上に貶す文面が多すぎる。　3回くらいまでなら気にも留めなかったと思いますが、　何回も出されたらいやな気分になります。　そもそも、人次第でしょってところです。　著者が行かれた現場はそんな方々が多かったのかもしれませんが、　問題解決に行っているような現場であれば、スキル不足な方が多いのは別段不思議ではないのでは？5.そもそもSQLの問題解決方法を書いてるところが少ない。　一番の問題点。　1章以降、SQL以外の事が多いですよね？　知識として大事なこともあるとは思いますが、　SQLの苦手を克服すると銘打って、仕様書はいらないとか書かれても、　それがどうした？SQL自体が仕様書で、SQLの何が克服されるのでしょうか？　この本で説明すべき内容をはき違えてはないでしょうか？後はそうですね、著者の評判をネットで検索いただければよいと思います。レビューを見られている方は、懸命なご判断を。
この業界に35年以上いますが、この生島氏の問題意識は全くその通りだと考えています。この内容に全て賛成という事はありませんが、技術書としては大変読みやすい構成になっています。ーーーーー＜SQLをきちんと理解せずにRDBMSを単なるストレージのように考えて＞いてもプログラムは組めますが一生理解が進みません。　　ＵＩ層：手続き型言語　＝Java,C#　技術者多い　　ＤＢ層：集合指向　　　＝SQL　　　技術者少ない＜近年はSQLを手続き型言語の感覚で使えるようにしてしまうO/Rマッパーのようなライブラリも広がっていますし、「遅い」という問題はマシン性能の向上で表面化しない場合もあります。これらの事情がますますITエンジニアをSQLの本質的な理解から遠ざけているとも言えそうです。＞＜O/RマッパーはSQL文ジェネレータとしては便利ですが、ジェネレートされるSQL文の本質的な意味を知らずに使うと、やはり同様の間違いを助長してしまいます。＞ーーーーーデータベース設計さえすれば動くシステムが作られる「ローコード開発」を推奨する動きもありますが、いまだに手作りの開発が過半数の状況ですから全てのIT技術者にぜひ読んで理解して欲しいと思います。
口頭でのアドバイス、会議、報告業務等、今までの価値観を否定すべきではない。その価値観で成長してきたのだから。これから成長を続けるために、CRMを利用する。営業担当者にはCRM入力を評価基準に加える等すれば、強制力で入力が進むかもしれない。しかし、1番大切なのは営業マネージャーのCRMへの理解、腹落ちだと感じた。マネージャーがCRMの利用にとことん拘って、案件情報予習した上で部下に確認を行う、会議でもCRMの情報をもとに実施し、少しずつ報告業務時間が削減され始める。そうして、担当者にも「CRM思ってたよりいいぞ」というメンタルになれば、どんどん有益な情報の入力も加速し、セルフマネジメントも進み、CRMが名実ともに業務に無くてはならはいものになるのだと思いました。CRMは営業担当者を管理するツールではなく、秘書や武器のようなもの。現状推進側の立場にいるのですが、非常に参考になりました。
今までのやり方で最適解を出してきた世代の人にとってはDX化で、さらに効率的になる実感がない。特に営業が強い組織はそうだと思う。営業マンの個人スキルはブラックボックスとなっていて、勘・経験・度胸(KKD)で売り上げを最大してきた。これからはこれらの行動・活動をデータ化し誰が売っても常にハイパフォマンス出せたり、安定した売上・利益を上げていくことができる。特にマネージャー(チームリーダー)は会議のたびに、いろいろなところから資料を集め、パワーポイントに集め、スライドを作成していた。また、担当者には必要なときに急に状況の報告を迫っていた。これらは非常に無駄であり、生産性の低い行動であると思う。営業のDX化がどう言うものなのか？いまいちピンときていなかったが、本書を読んでイメージを掴むことができた。
SFAをうまく導入できていない状況があり、その理由、進め方の要諦がまとめられていて参考になる。早急に立て直したいと思うと同時に、その進め方が極めて参考になる
読み途中ですが、勉強になりました。知識を実用に変換する、自分がどこまで知識を実用化しているのか計測するのに良いツールです。
ミック著「CD付 SQL ゼロからはじめるデータベース操作 」の次にこの本を開きました。この本は、上記の本を一通り読んだだけでは難しいと思います。レベル的には、中級以降といったところでしょう。回答に至るまでの下処理の段階で、SQLの集合論的な考え方がふんだんに使われており、しかもそれに対して詳しい説明がないので、初心者の方は（私も含めてですが）そこで立ち往生してしまう可能性が高いです。ただ、この本に載っているパズルを解くのは楽しくもあります。じっくり考えて、こういう意味なのか！という発見をすることは文字通りパズルを解くような醍醐味があります。SQLの集合論的な発想が生かされたコードに、じかに触れたいのでしたらこれ以上の指南書は無いと思います。パズルを解く快感が味わえ、SQLの本質に触れることができるのですから実に有意義な本と言えます。時間がふんだんにあればですが・・・。
WEBサービスの企画立案、制作をしているものです。まともにSQLに関わり始めて1年ぐらいです。SQLの基礎部分を固めたいと思い、購入しました。本書の内容は一つ一つじっくり読めばわかるものの、今ひとつ実務と結びつく感じではありませんでした。こういった考え方で、こういったSQLの書き方もあるんだなぁと勉強にはなりましたが、私にはレベルが高すぎました、、、；いつかこの本の内容が瞬時に理解でき、共感できるようになりたいと思います！
最新のミドルウェアを使えば、もっと簡単に記述出来るだろうと思う箇所がいくつもありました。ただし、こんなアプローチもあるのね、と言う発見はあります。
本書はSQLに関する非常に質の高い豊富なサンプル集であり、中級者を目指すなら必読の書である。他のどの言語にも言えることだが、質の高いサンプルを数多く見ることが上達への最も早い近道である。但し、SQLはデータを扱うという特性の為、他言語のようにそのまま使えるサンプルは当然にあり得ず、応用が効いて考える力が身につくサンプルと考えて頂きたい。本書によりSQLで考える力が飛躍的に向上することは間違いない。著者のジョー・セルコ氏はSQLの業界では世界的な第一人者であり、訳者のミック氏も名著である
達人に学ぶ SQL徹底指南書 (CodeZine BOOKS)
を書いた方であり、つまり本書はSQLの世界の最強タッグが書いた信頼のおける名著である。パズルという題名から実用的でないサンプルを想像されるかもしれないが、扱っている例題は業務系のものがほとんどであり実務に即している。SQLを組み立てて考える力を身につける為、各例題に対して段階的にいくつもの解答(実現方法)を解説しており、その解答にテクニックを満載している。パズルとは考える力を身につける為につけられた題名のようにも思う。SQLはデータを扱う言語なのだから考えて正しくイメージできる力が重要となり、その為には本書は最適な書籍である。本書を習得された方は中級者以上の力を身につけている自分を実感できるだろう。
いっとき、毎朝ひたすら解いていた。その努力はずっと自分の武器になっています。
本書の訳者が書いた
達人に学ぶ SQL徹底指南書 (CodeZine BOOKS)
には主な参考図書として
プログラマのためのSQL 第2版
と本書が挙げられていました。「プログラマのためのSQL 第2版」は最初の3章を読んだところで挫折してしまいました。本書も最後までいくか不安だったのですがなんとか読了することができました。　本書では様々なパズルを例題として、SQLの限りない可能性を示してくれます。ほとんどの例題には2個以上の解法が示されています。解法の提示の手順は基本的に次の方針に従っています。最初の解法は問題の文脈をストレートにSQLに置き換えた方法を提示し、2個目以降はより高速で洗練された解法、あるいは発想を転換させたアクロバティック(?)な解法を示しています。C#のような手続き型言語では一つの例題に対する解法は似かよったものになりがちです。それに比べてSQLのような宣言型・集合指向型言語は一つの例題に対して全く異なるアプローチからの様々な解法があります。SQLでは頭を切り替えることにより同一の例題を様々に料理できます。良い頭の体操になりました。　本書のサンプルコードはネットからダウンロードできるようです。時間のある人はサンプルコードを実際に動かしてみるとより理解が深まると思います。　私も今後機会があれば「プログラマのためのSQL 第2版(または第4版)」に再チャレンジしようかなと考えています。
ジョー・セルコの名著、「ＳＱＬパズル」の第２版です。旧版の邦訳が書店から姿を消してから、もう何年もたちます。当時買いそびれた私は、中古本でもいいからと、オークションやネット書店を探してみましたが、見つかりませんでした。あきらめていたところ、新版の出版となりうれしい限りです。訳者のミックさんはご自分のホームページ([...])で、SQLについてかなりつっこんだ内容を展開されています。訳すべき人が訳してくれた、という意味でも感謝しています。内容ですが｢てっとりばやくSQLが書きたい｣人には絶対に向きません。掲載例のsqlをそのままコピーして即業務に使えるケースは決して多くないでしょう。なぜならこの本は｢SQLで考える｣ための本ですから。じっくりと｢パズル｣を味わいたい人向けです。
いいね
仕事などにいいヒントになる。
実際の業務で使う場合に絞った説明が記載されています。ですので、業務改善等で困ってたときに読むにはちょうど良かったです。
記載内容は分かりやすく、図などでわかりやすく解説されている。なまた初心者向けの内容なので業務初心者が読むレベルと思う。業務の効率化(エクセルなどの表計算ソフトからデータベースへ移行)を低予算で検討している担当者にはいい教材になると思う。ただ、すべてが、網羅されているわけではないので、応用が聞かせられるかは読み手次第(この本に限ったことではないが)。
エクセルを使いこなしたい、ファイルメーカーを活用したい人必見。リモートワークに向けて即戦力となるこの書は在宅での仕事を充実させたい人必携の優れモノである。
たまたま私のしたいことと一致していただけかもしれませんが、目的に沿ったサンプルの作り方が私のニーズにドンピシャで、おかげさまで一気に八割方作ることができました。この本と「一週間でマスターするAccess 2007」は、VBAは別として、EXCELなどのオフィスソフトの機能（フィルターやVLOOKUP関数など）をある程度使いこなせているような人が、明確な目的を持ってリレーショナルデータベースに挑戦するには格好の教材だと思います。SQLなどのリレーショナルデータベースの基礎は分かっているけれどACCESS自体は初心者、という人なら、この本だけで相当レベル作れると思います。自分の職場のデータ管理を自分でやりたくて、こうしたいんだけどどこをどうすればそれができるか、という疑問に答えてくれる本だと思います。あくまで私の場合ですが。
よくわかる Access2007 応用
に続き本書を学習しました。1章〜4章までの構成で、1、2章でDBの基礎知識・構築を、3章でSQLの基礎知識、4章がAccessのマニュアルという内容になっています。P1〜256。1回目の学習時間は計15時間でした。学習時間については、60時間とタイトルにはありますが、マニュアル部分は流したこと、SQLは設問等は取り組んだが、様々な句は暗記レベルに至っていない事からわずか15時間となっています。1章（1〜2節）についてはほぼよく分かるシリーズと同じ。重要なのは1章3節と2章で実際に商品検索/書籍管理/販売管理システムを構築してみるところからでしょう。それまでよく分かるシリーズでは曖昧だったDBの設計から作成までの手順を、実践を通して検討してみる内容になっています。とは言ってもテーブルに格納が必要な項目やリレーションシップ付けの検討等まで問題となっているわけではない為、「何となく分かった」状態を抜ける事は私には出来ませんでした。これに関しては実践（設計→構築→修正の無限ループ）あるのみなのでは、と感じています。また、3章SQLについての解説ですが、これまでAccess（でのクエリ操作）を通して学んできたDB操作を、SQL文について学ぶことで、これまでAccessでやってきた事がDB操作用の各種言語との関係でイメージ出来たのは有用だったと感じています（ex.クエリ操作はGUIでSQLを使用していたようなもの）。なお、本書はAccess2010をベースに編集しているが2007でも使用可、と書いています。一部には2010、2007両者の解説ページが別途ありますが、例えばP75の演習1マクロの作成部分などには2010での表記しかない＆両者で機能の登録方法が異なる為、試行錯誤を要した部分が（他にも各所に）あり、無駄に時間を取られそこだけが残念だったと感じました。
幅広く掲載している。
サンプルコードを書くだけの入門書ではなく、バージョン管理などの実践的なアプリを作るときに役に立つtipsが多い。入門書を一通りこなした後の二冊目としては良い。書籍内に記述されているコードで明らかにパッケージされていない箇所が何個もあるのが残念。
入門書を終え、Go言語を実際どう使おうと考えたときに役立つ本だと思います。複数の方が各々専門のパートを説明しており、実践的かつ分かり易いです。
Go言語で開発をする上での実践的なTipsが多く紹介されており、大変参考になります。内容が良いだけに、それ以外で少し残念な点が目につきます。文字の割り付けだったり、単純な日本語の校正など、少し出版社が仕事をすれば改善できるような点が多いです。役割を果たしてあげて下さい。
歴戦のGoエンジニアがおそらく長い年月をかけて会得したGoの知見が詰まっている本です。ある程度Goに慣れてきた人に読むのをお勧めしたいです。
mariadbをラズパイとwindowsにインストールしてます。どちらも問題なく動いてますがかなり間違っているので、逆に勉強になります。{笑い)
SQLやデータベースに関する記述だけではなく、データ分析・活用を意識した内容になっており、単純に高度な関数や記法を学習するよりも有用でした。特に10章には、データ分析者としての心構えや考えの有り様についての記載もあり、業務ノウハウやスキルに関わる記載だけでなく、筆者の経験に裏打ちされた内容になっていました。
現在はプログラマをやっていて来期からPDMに職種を変える為、プロダクトのグロースを支えるような知識を会得する必要があった為購入。プログラマなのでSQL(SqlServer,Oracle,MySQL,PostgreとRDBMSは一通りは触っている)は業務でゴリゴリに利用していたがアプリケーション内でのCRUD操作が当然メインで実際データやSQLの知識を分析にどう活かすかというのはファジーな状態だった。総評としては・SQLを使いこなせて、企画やマーケ系の分析計職種にジョブチェンジする人、また企画に噛んでいきたいプログラマには有用な書籍・SQL初心者は他の書籍などでSQLを学び本著に入るとスムーズであると感じた。SQLはプログラミング言語と比較すると結果を直に感じやすい言語なので分かりやすくはあるが、淡泊ではあるので強制的に理解せざるを得ない業務で学ぶのが一番ではあると思うが書籍ベースなら”ゼロから始めるデータベース操作”等の本をこなしてから本著に入ると理解が深まりやすいと感じている。内容的には算術平均、中央値、分散といった所謂統計入門的なデータの求め方から、NTILE関数やCUBE関数といった正直どこで使うんだと思ってたような関数やクエリについて実務ライクに1から学べるので好奇心を満たせる。
SQL初学者のものです。「スッキリわかるSQL入門 第二版」（独学はじめ）　↓「ビッグデータ分析・活用のためのSQLレシピ」（ちっともわからず諦めた）　↓「MySQL徹底入門 第三版」（理解不足のためかなり苦戦して途中で休戦）　↓もうちょい基礎のやつがほしい...　↓当書籍です。MySQLやWorkbenchのインストールに結構苦戦して時間とられましたが、Qiita先生などを頼りに安定軌道に入りました。「スッキリわかるSQL入門」を一通り終えた方の続きとしてはレベル的にピッタリではないでしょうか。
データベースからデータを取り出して加工するSQL記法（select …）を中心に紹介している。SQLによって4分位を表示する方法や、そのコードをWINDOW関数を用いて整理する方法など非常に参考になった。一方、create databaseをはじめとするデータベース・テーブルの作成、データの登録・更新等のための記法は他書に譲る形の構成のため、データ分析に興味のある読者が先ずは他の書籍でSQLの基本の「き」を学んだ後に読む2冊目の書籍としての活用を推奨する。後半部分ではRFM分析、アソーシエーション分析のSQL活用例を紹介しているが、若干説明不足というか内容に胡散臭さを感じるため、分析手法の理論の理解は他書を参考にして、SQL記法だけに注目して読み進めるのが無難だろう。
データサイエンスの分野ではPythonが圧倒的な人気で、関連書籍も数知れませんが、データ分析の基本はリレーショナルデータベースとSQLだと思っていたので、この本に出会えて良かったです。Pythonが不要だというのではありません。データの保存だけでなく、基本的な集計処理の大部分はSQLで出来るので、SQLで出来ないより高度かつ柔軟ななデータの処理と分析にPythonやRを使うという住み分け、役割分担が重要です。学習段階ではサンプルデータがCSVとなるのはやむを得ませんが、実際の現場ではビッグデータはDBに収録されます。SQLはデータサイエンティストにとって基盤となるスキルです。ただし、SQLで対応可能なデータ分析の範囲はせいぜい「８割」までで、実際この本の８、９章の内容はPythonやRの方が容易でありかつ高度な分析が可能なので、SQLが担当すべきはデータの取得と更新、及び前処理に絞るべきで、その辺の記述が十分でないと感じます。
※サンプルダウンロードをした際にサンプル実行に必要なデータも準備されます（私は最初迷ったので一応補足）sqlには馴染みがないけれど、マーケティング系の職種で今後分析力も強みとして持とうと考え購入しました。本書で役立ったのはいきなりsqlの話に入るのでなく、sql周りの全体観を提示し、分析を行なっていく文脈でどう行ったsqlを使っていくか手順を踏んで学べることです。sqlの例だけでなく、著者の分析を行う思考過程を追いながらsqlを学べるというのが１つの価値だと思います。通常の技術本は、技術にフォーカスされていてビジネスでの使用をイメージしにくいものもありますが、本書はビジネスでの活用を意識しやすい流れになっています。今途中段階ですが、一冊終える段階でビジネスにおけるデータ分析の基本的な考えやプロセスと基本的なsqlが学べていのではないかと感じています。
SQL初学者でもわかるように、加工の仕方などが詳しく書かれております。今やデータ時代で、データベースが分かること必須なので良いでしょう。
本当に基本中の基本に、全紙面を割いている。最初の一歩には最適だと思われた。時間をかけて熟読するものではなく、なるべく早く次に移れることがメリットである。
「やさしいJava」に続き購入しました。適度にまんべんなく解説されていると思います。わかりやすい文章で解説してありい、プログラム初心者でも抵抗は少ないでしょう。「やさしいjava」を購読したり理由は受講していた情報処理系の授業の教科書だったからです最初は不満もありましたが、学習を進めたあと振り返ると、癖がなく振り返るのにも便利な本だとは思いました。バランスの良さが教科書に採用されている理由なのでしょう。そう思ったので活用編も購入しました。残念なのは初心者に「やさしくない」ところがある点です。「やさしいjava」でも思いましたが、文字コードの設定（windowsのコントロールパネルデフォルト設定ではエラーが出ること多数）の解説がなかったり、この本の最初のjavaFXのコンパイルコードに誤字があったりするのは、初心者のやる気をへし折るので、特に導入部分は真剣に編集チェックをしてほしいと心から思います。（レビューを書く気はありませんでしたが、7ページのコード誤字のせいで30分ほど迷ったので思わず書いてしまいました）
初学者にとっては優しくないです。ある程度の基礎知識を持った上での振り返りの教科書的な意味合いでの利用には適していると思います。特に、初学者の観点から見ると説明不足な点や、暗黙的な理解が前提で説明が構成されている点が多いので、ほかの教科や本を読んだ方が妥当だと感じます。
業務で初めてスクラムに挑戦するため参考書を探していた中、2冊目としてこの本に出会えました。構成が良く出来ていて、スクラムのルール・用語からプラクティス、実例と、読んでいてすんなり頭に入ってきました。入門書として、優れた1冊に感じました。
最初につまづくポイントがよくまとまっています。まずは読んでから始めることを勧めます。課題解決、失敗から学ぶことが重要だと分かります。
スクラム自体の説明は簡単に解説があるのみでした(スクラム自体そんなに概念としては難しくはないのでくどくない程度に簡素にまとまっている)。著者たちの実際にぶつかった問題などが書かれていて、自分がスクラムを少し始めてみて実際に目の当たりにした問題にたいして深掘り、対策などがかかれていてとても参考になった。ロール、スクラムイベント、スクラムの成果物ごとに問題と対策などが書かれていて、各イベントの前などに、こうするといいという知見をslackなどで通知するようにして、実践できるようにしてみたいと感じた。
全体的に非常にシンプルでわかりやすかった。栗林さんが書いた部分は抽象的で眠くなった。抽象的な話を理解するのは苦手なので。スクラムを始める時にはリファレンス的に使うことになりそうなので電子書籍より紙媒体で買うべきかなと思った。
結論から言います。１～４章は糞の役にも立ちません。5章はまぁまぁ、6章以降の事例はスクラムのアンチパターンが有るべき姿とともに紹介されています。情報と言う意味では、IPAの「アジャイル型開発におけるプラクティス活用事例調査 調査報告書」の方が役に立つので、本書を買う意味は6章~８章を見るために買うと考えてください。あとがきには、以下のようにかかれています。これからスクラムを導入しようとしている方へ導入する前から深く考え、悩んでも、どうせスクラムの導入は失敗します。うむ、じゃあ、スクラムは必要ないね。この本には絶対に導入に失敗するをスクラムを導入し、成功する必要がある強い動機付けに欠けます。導入してしまったら、成功させるしかないわけだけど。導入してないなら、やりようがあるからな。
ここに書かれている程度のことなら、Webで読めると思う。掘り下げが足りないし、失敗しそうになったときへのアドバイスも足りない。「ここに書かれていることを参考にして、上手にやってください」みたいな腰のひけた感じ。自信が足りてない。
スクラムのルールはスクラムガイドに厳格に定義されています。しかし、多くのスクラム本は著者の経験からルールを変更した亜流スクラムになっています。本書は、理解の難しいスクラムガイドの本質を分かりやすく簡潔に説明してます。そのため、スクラム自体と混同されがちなユーザーストーリーなどのプラクティスは別の章にまとめています。また、スクラムの３つの土台である可視性（透明性）、検査、適応をスクラムガイドのように大上段に説明するのではなく、適切な箇所で必要性を説明しています。９章から１２章のQ＆Aも、導入、スクラムチーム、イベント、作成物に分けて説明されており、よくある問題とその対応策が書かれていて理解が容易です。スクラムのゴールを自己組織化チームを育成することとし、そのための様々なアドバイスをあげています。６章から８章の各社のスクラムの取り組みでは、新規プロジェクトではなく、運用プロジェクトへの取り組みが多く、その目的が作業の可視化や属人化の解消というのが現実的で興味深かったです。ただ、最初はうまく行かなかったスクラムだったが、スクラムマスター研修を受けた後に考えが変わった、または、外部のスクラムコーチの支援を受けたことでうまく行くようになったとで終わっており、具体的な事例を用いた深い洞察が欲しかったです。スクラム入門者のために索引も充実しています。本書を読んだ方は、Scrum Guide (2013年版)を読んでみることをお薦めします。訳が微妙な日本語訳もあります。
本家のスクラムではソフトウェア以外にも役立つとあるが、この本はソフトウェア開発に重点が置かれている。ソフトウェア以外への応用に興味があったのでその点は物足りなかった。が、スクラム導入時や初心者が運営するうえでのQ&Aは、実際にあったであろうトラブルについて書かれており、参考になりそうである。他の本では理想的なパターンしか書かれていないことも多い為、貴重な一冊だと考えている。
スクラム入門に関する書籍は他にも多く出版されているが、あくまで理論的な話が多く、現場の泥臭い話はあまり書かれていない。本書は著者陣が、現場でスクラムを実践して見つけた課題・その対処方法についても記載されており、実際に自身の環境に適用する場合にとても有用な情報がまとまっていて、非常に参考になった。
スクラムというフレームワークの丁寧な解説と、著者陣の所属企業での導入事例がよくまとまっており、実践入門というタイトルの通りの一冊であると感じました。また、スクラムというフレームワークの上でどのようなプラクティスを実践すればよいのかのパターン集と、よくある課題と解決方法のヒントなど、スクラムの導入を検討している人だけではなく、今まさに実践していて課題にぶつかっているような人も参考になる情報が沢山あると思います。
シェルスクリプトを書く際にsedとawkをちゃんと理解したかったため購入しました。最初の方は正規表現について理解することから始まり、その後sed、awkの基本的な使い方を実戦形式で学べます。実際に手を動かしながらやれば、よく理解できます。既に正規表現を理解していれば簡単かと思います。本書の半分くらいまでで基本が理解できて良かったです。本書の読者はある程度、LinuxやCLIに馴染みがある事が前提になっていると思います。
Data Scienceの普及でLinuxやMacを使ってString系の大きなデータを扱うことが増えてきたと思う。プログラミング言語はPythonと言うケースが多い。しかるに、Pythonで入出力を工夫しようとすると意外にすんなりいかないことが多々ある。あまり凝った入出力をしようとせず、Stream Editor（SED）やAWKで処理した方が早い。最近の若手エンジニアにはこの辺りのツールを使ったことがない人が少なくないようなので、特にお勧めする。
ちょうどこの本の初版がでて20年になります 1997その頃の私はMac System [7-9]で友人とパソコン通信黎明期に集団チャットで楽しんでいた頃です誰かがディレクトリ型のサイト検索エンジンから、AIがランダムに検索を模索する "Google"という新しいサイトが出来たということを話題にしました 1998最初の半年間はキーワードに対してかなり出鱈目な出力だったのでいつになったらまともに使えるようになるのかかなりハラハラして見ていました10年ほど前から、自分の使うコンピュータはLinuxに変更し、少しずつ操作を覚えていく中でシェルプログラム、正規表現によるパターンの指定、sed, viなどの知識を本格的に獲得したいと今更本を買って勉強していますsed & awkがなければ、googleもない
他の方が書いておられるようにUNIXやLinuxで作業を行う場合必要でしょう。特にインストールやその後の設定にはなくてはならない技術ですね。本に書かれているサンプルのダウンロード方法は実際的では無いのでダウンロード方法を書いておきます。１．　OREILLYのホームページへ[・・・]２．Searchエンジンに署名を入れる（原書名sed & awk, 2nd Edition）３．Essential LinksのDownload Example Code を選択４．Windowsならprogs.tar.gzを左クリックでファイルがダウンロードLinuxなら　'$ sudo wget [・・・]でダウンロード$ tar zxvf ./progs.tar.gzこれで./ 以下に展開されます。作成された各ディレクトリは各章番号になっています。ｃｈ０２が第2章というふうに。
UNIX環境で開発を行う時には、テキストデータを処理する事は必ずあります。障害発生時や何かの調査をしたい時に、XMLファイルといったテキストデータをその場で加工するために即興でスクリプトを書かなければならないという場面は、必ずあります。そういう時にそなえて、sed、awk の使い方を普段から身に付けておくことは、必須です。特に、sed や awk は単体で使うだけでなく、組み合わせて使うと、とてつもない威力を発揮します。これはまさに、小さくて簡単なものを使って、複雑なものを、しかも簡単に作ることができるという事を示すとても良い例だと思います。UNIX(Linux)開発者なら必読です。少し値段ははるけど、買って損はないでしょう。
ネットで見つけることができて、時間の節約になりました。商品の品質も満足いくものでした。
内容は非常に良いと思う。　ただ、価格もそこそこしている。内容が良いのでこれから、ＳＥＤやＡＷＫを理解したい人にはお勧め。そこそこ理解している人が読むには・・・価格が足をひっぱるかもしれない。
UNIX系OSで標準でインストールされているテキスト処理コマンドであるsedとawkについてかなり詳しく説明している。マニュアルを見ただけでは使いみちがわからないことが書かれており大変参考になる。特にsedとawkを使って複数行にまたがった処理をやりたい場合，具体例と考え方，注意点が詳しくてありがたかった。ネット上にも情報はあるかもしれないが，誤った情報があったり断片的であり体系だった知識を得られにくい。そういう意味で書籍でまとまっているのは効率が良い。今から20年近く前の本であり，古臭いようにも感じるかもしれない。テキスト処理自体は昔から存在し，言語が変わろうがその処理方法に変わりはない。sedやawkが今も使われているのと同じように，この本の内容も長く使えるものとなっている。今から4-5年前の大学院生時代に購入し，ざっと読んでそれっきりだった。awkを使えるようになりたいと読みなおし，有用さを再確認した。個人的にはPOSIX規格で標準化されていない部分（sedの;やawkの独自コマンド，エスケープ文字など）についても細かく書いてあり，とても参考になった。
SEDのスクリプトも、AWKのスクリプトも、１から書いたことがありません。そのため、なるべくたくさん情報を集め、自分の作りたいものに似たものを修正して作ります。本書にも、例がありますが、ネットでも例を探すとよいでしょう。既存のスクリプトを修正する際に、本書の記述を参考にしていました。今では、pythonを使う人の方が多いでしょう。コマンドプロンプト上でのちょっとした編集の際に、pythonlが入っていないシステムで利用することがあります。sedが使えることは損ではないと思います。用語数集計のような、いつも使っているAWKのスクリプトは何度も利用しています。
計算機科学についてある程度まとまっているとは思いますが、(本書の最後にも書かれているとおり) ネットワークなどのいくつかの点が入っていないという点や、説明の流れが体系だっていないように感じる点 (例えば、7.2 節 「コンパイラ」 の中で、OS の話、コンパイラの最適化の話、スクリプト言語の話、リバースエンジニアリングの話、と、なんとなく関連はあるが取り留めなく話題が進んでいく感じ) が気になります。悪い本ではないですが、個人的には 4 点以上を付けるほどではなかったです。
CSの復習する為に読みました。大学で読んだ教科書類が網羅的にまとまっているので復習になりました。これを1冊目に勉強してスクラッチして巻末にある専門用語や英単語から検索して知識を深めるのも良いと思います。それは本書の意図通り、コンピュータサイエンスの用語を知って検索出来るようになる為の書籍でした。
国語の長文読解が苦手で、家庭教師の先生のオススメで購入しました。基礎の基礎です。1年かけて偏差値は10以上上がりました。
国語が苦手な子供でさえ簡単すぎて、物足りないなかったみたいです。
３０字から４０字以内で答えなさい，といった問題では，回答欄の枠がほしいです．あと，ヒントは無くてもいいです．すくなくとも，序盤以外では．
参考書というよりは問題集。難易度がABCとレベル別になっているたところが子供を指導する上で進めやすい。問題の内容は難しすぎず、平均的な4～5年生には妥当なレベルかと。
基本的なこてがきちんと書かれている。
冒頭「インターネットが普及する以前、学術研究は図書館なくしては考えられなかった。」の言葉を体感してきた者です。40年以上前に史学科を卒業し、筆者と同様日本古代史を学びました。日本史を専攻した当時、このような参考図書の存在は指導教授を始めとした史学科の先生の授業やゼミで教えてもらうと同時に、学生同士の情報交換で学んできました。本書の流れのように、図書館の方から直接、このような便利なツールの特徴や使い方を学ぶ機会は残念ながらありませんでした。もし現在でもそのように困っている学生にとって、自学自習に必要な手引書となるのは間違いありません。当方も、大昔図書館司書の資格を取得しており、レファレンス業務の大切さを学んだと同時に、参考図書の使いこなし方も学習してきました。とはいえ、それぞれの辞書や事典の特徴を、本書のようにコンパクトに1冊にまとめてあれば、誰に聞くことなく、最適なツールへたどりつけます。いつの時代も、日本史学習の基本は、参考図書の学び方が第一にくると思っていますので。懐かしい参考図書も数多く紹介されていました。名著は時代を超えて歴史学者や歴史を学ぶものから愛され続けています。それが内容の確かさを生み、使用者の信頼性を高めているのです。多くの研究者が使用してきたツールを知ることで研究を深めていく流れを体得できるわけです。83pの吉田東伍『大日本地名辞書』は「日本の地名辞典の金字塔」とあるように、明治の出版物ですが、その網羅性と出典への詳しさは随一でした。諸橋の『大漢和辞典(125p)』も「世界的偉業」と紹介してあります。東洋史の原典を学ぶ上で、「諸橋」にあたっていないと話にならないと思っていたほどです。研究の深化に必要なものは一次史料の読みこなしに尽きますが、関連する歴史事象を正確に知ることで、研究対象の位置づけも明確になります。研究史を丹念に追いながら、先行研究に書かれている歴史用語を理解するのにも本書で示されたツールの使い方は必須の能力でしょう。筆者は長らく国立国会図書館に勤務された後に、歴史の研究者として教鞭をとっておられるわけで、ツールの提供者と利用者の両方の側面を理解し、体験されているからこそ、本書の大切さを世に問われたのだと理解しています。それぞれの辞典の特徴を見れば内容の確かさや深さが伝わってきました。活用方法、注意点や豆知識も役立つエピソードを取りあげています。当方が直接授業で教えていただいた先生の名前を編著者の中で見つけ、懐かしい思いに駆られました。
図書館に行っても、辞典類はあまりにもたくさんありすぎて、どれを見ればよいのかがわからないでいた。歴史学などを専攻している方には常識なのかもしれないが、私のようにちゃんと勉強したことのない自分にとっては、このような本はとてもありがたい。ネットには出ていない情報にどのようなものがあるのかもわかり、とても参考になる。
○日本史を学ぶための図書館活用術を丁寧に解説する基本文献です。日本史論文の執筆や日本史に関するレファレンスワークに必要不可欠な、辞典・史料・データベース等の活用方法や読み解き方が詳しく紹介されています。七つの海や港湾を航行する際の水先案内・パイロットのような機能を具現化した基本文献です。国立国会図書館や大学図書館、その他専門図書館の利用案内、そして何より現役の図書館司書の方々の実務体験が、随所に盛り込まれています。
問題の選別、解説の的確さにおいて中学受験国語分野の最良参考書である。解答例は大人の文章であるから、真似はできないし、真似る必要もないが、考え方のプロセスは充分納得がいくだろう。薄くて、最後までやり通せるので、受験前に一読がおすすめ。本当に感心するほどの、名著。日能研はガリガリ暗記、と聞くが、本書をみるぶんには、至極論理的でまっとうな教え方をされているように思えるが。
問題をこなしながら正規表現を身に付けていく本。付属ソフトはWindows10でも問題なく動作して良かった。
添付のソフトですが、正規表現というよりも文字列のマッチだけ行っているので、少し違う表現をすると動かないことばかりですし、他のエディターで動くものも、ここでは動かないなど、かなり多くあります。それらは、本の冒頭に書いてあるのでいいのですが、間違って覚える可能性もかなり考えられます。　それでもこの本から学べることはかなりあると思います。Step by Stepでこのような学習環境が望ましいと考えていたものにかなりマッチしています。個人的に。　逆このソフトで正しく動かないものも、他のエディターで動くとうなど、正しい動作を理解する上でも、いいんじゃないかと考えています。
本、ソフトを同時に使いながらハンズオン的に学習でき文章ではなく感覚できます。正規表現の情報はネットにたくさんありますが、文章で説明されてもピンときません。「０回以上の繰り返し」とか言われても「は？？？？」となりがちです。このドリルでは説明がよく理解できなくてもドリルを通して「なるほど！」となります。その後説明を読み直すと「確かに！」となります。楽しく学習できる素晴らしい教材です。鉛筆を使いながらこのドリルにメモをつけていけば素晴らしい教科書にもなると思います！
ファイル regIndex.txtにamazonの本書の目次を保存し、コマンドを実行した結果を示します。cat regIndex.txt | sed 's/ /\n/g'---------以下実行結果--------------●第1章　学習の進め方と素振りソフトウェアについて本書の概要と学習の進め方素振りソフトウェアREGEUP●第2章　正規表現の基本正規表現って何？基本的な考え方と用語●第3章　基本的なメタキャラクタその1　任意の1文字にマッチするメタキャラクタその2　英単語を構成する1文字にマッチするメタキャラクタその3　空白文字にマッチするメタキャラクタその4　数字にマッチするメタキャラクタその5　0回以上の繰り返しにマッチする表現その6　1回以上の繰り返しにマッチする表現その7　n回の繰り返しにマッチする表現その8　n回以上の繰り返しにマッチする表現その9　n回以上m回以下の繰り返しにマッチする表現その10　0回または1回の出現にマッチする表現その11　文字列の先頭にマッチするメタキャラクタその12　文字列の末尾にマッチするメタキャラクタその13　単語の境界にマッチするメタキャラクタその14　指定された文字のどれかにマッチする表現その15　マッチする文字の範囲を指定する表現その16　指定されたパターンのどれかにマッチする表現●第4章　部品を組み合わせて使うその1　複数のメタキャラクタを使うその2　任意の長さの文字列を表現するその3　指定の長さの文字列を表現するその4　文字列の繰り返しを表現するその5　選択を利用するその6　文字の範囲指定と繰り返しを組み合わせるその7　選択と繰り返しを組み合わせるその8　大文字と小文字を区別しないその9　文章中の英単語にマッチさせる●第5章　正規表現の便利な機能その1　最長マッチ／最短マッチの問題その2　キャプチャを使うその3　2回以上のキャプチャを使うその4　キャプチャしないグループ化その5　先読みを使うその6　否定先読みを使うその7　後読みを使うその8　否定後読みを使うその9　先後読みによる条件分岐を使うその10　キャプチャによる条件分岐を使う●第6章　より実践的な正規表現第6章を学習するうえでのポイント応用問題1　整数にマッチする正規表現応用問題2　指定された範囲の整数にマッチする正規表現応用問題3　小数にマッチする正規表現応用問題4　偶数にマッチする正規表現応用問題5　カンマ付きの数字にマッチする正規表現応用問題6　郵便番号にマッチする正規表現応用問題7　携帯電話の番号にマッチする正規表現応用問題8　クレジットカード番号にマッチする正規表現応用問題9　時刻にマッチする正規表現応用問題10　日付にマッチする正規表現応用問題11　1行のテキストにマッチする正規表現応用問題12　によるエスケープを考える応用問題13　括弧に囲まれた中身にマッチする正規表現応用問題14　「キー=値」形式の文字列にマッチする正規表現応用問題15　2回連続で出現する英単語にマッチする正規表現応用問題16　カンマ区切り形式の行にマッチする正規表現応用問題17　CSVの各フィールドにマッチする正規表現応用問題18　HTMLのタグにマッチする正規表現応用問題19　ファ------------結果ここまで--------------正規表現がわかると、このようにいろんなところで役に立つので、この本は極めて有用だと感じました。
正規表現リファレンスブックを最初に買ったが、実際、使いこなすには、ある程度の慣れが必要。慣れた後でリファレンスブックを参照にするのは良いが、慣れるまでは、リファレンスブックを見ても、応用が利かないし、使いこなせない。この本で、正規表現の考え方、基本的な書き方になれると。上達が早い。まずは、この1冊で慣れることをお勧めします
この本、CDがついていて反復学習ソフトが収録されていますが、Windowsしか動作保証されていません。Macでは動かすことが出来ません（一応、Javaをインストールして…みたいな裏道はあるけど、初心者には無理）
正規表現を学習するにはとても良い教材といえると思います。問題数も十分あり、やり応えがあります。アプリを使った復習も出来るので、しっかり物に出来ると思います。アプリはWindows7 64bitでも問題もなく動きました。残念なのは間違いが結構あります。表記ミスであったり、回答が間違っていたり。ケアレスミスのような感じです。例えば第三章のその14とその15の「主要な機能」の表示が逆になっています。内容は素晴らしいのであとちょっと頑張って欲しかった部分です。
大学の図書館に買ってもらい、付録なしでやっています。（また、本書の半分程度までしか解いていない時点でのレビューです。）問題文をネットの正規表現を試すwebサービスで打ち込み、パターンを打ち込んで使うというなんとも回りくどい使い方をしていますが、それでも大変役に立っております。問題が非常に多く、説明も軽く読んだ程度ではありますが，わかりやすく書かれていると感じました。正規表現をマスターするに辺り、一番の近道はとにかく正規表現で試す事だと想いますし、本書はその点では他の書籍よりかなり優れてると思います。正規表現の最初の一冊には持ってこいなので正規表現初心者の方は是非。
ドリル形式で正規表現の考え方が学べる点は素晴らしい。ですが、CD-ROM添付ソフトウェア以外で正規表現を試すと全く違う結果になります。python / js / ruby で動くと書いていますが、細かい動作を調べていなようで、別言語で苦労することになりました。ドリルは「考え方」を学ぶだけにとどめておく必要があるのですが、此の本の書き方だと。サンプル集だと思う人が多いんじゃないかと思うのが不安でした。
５章・６章には無理に正規表現で解こうとしている問題もあります。例えば、拡張子のチェックなどは実践の場でもあると思いますが、正規表現だけで判定するのは高度なテクニックが必要なようです。それよりも、ピリオドでsplitして最後の文字列をチェックする方がコーディング上は簡単で保守もやりやすいと思います。正規表現とコードを組み合わせて実践の場面で使われる技術を伝える本にした方が良いと思います。
自分のような初心者がアクセスVBAに入門するのにはちょうどいいと思ったアクセスVBAについて全体を見渡せるのが本書のよいところただ、内容的にはそんなに深く突っ込んでないので別途VBAの基本書、SQLの基本書、データベース作成の基本書を読む必要があると思った。
今迄中途半端にやって来たことを　この本を教科書にして、もう一度やりなおしてみようと思います。
やりたかった事、調べたかった事が掲載なしでした。本屋で少し中身を確認してから購入するべきでした。内容的には悪くないと思います。
これ一冊で完璧とはいきませんが、初心者は必読の一冊です。読んでマーカーを付けたい場所には、マーカーされていて読みやすいです。プロパティシートのイベントを見るとイベントプロシージャの作成ポイントが多数あることが理解できます。独習者にはとても参考になりました。推奨したい一冊です。データベースの処理や、SQLについても解説されております。
ある程度使った事のある人向けの本なのでまだ初心者にはお勧めしません。どこの何をどういじったらこの動作を再現できるのか？が書かれていないので、練習を目的としている方は別の本をお勧めします。あくまでベースになるデータがある前提で、一から書ける様になるには、やっぱりサンプルデータとサンプルフォームの作成が必須
これ一冊で完璧と書いてあったので、おさらいのつもりで購入しました。一通り読了(最終章の会員管理データベースも作成済み)した感想としては、初心者でも読むことはできなくもないけど、むしろ上級者向けの内容なのではないかと思いました。難しいところはスルーしているので簡単に見えますが、この本はAccess VBAの難所をほぼ全てカバーしているからです。この本に書いてある内容は、Access VBAを使えるようになるには必須だけど、他の本には書いてないものが多いので、Access VBAを本気でやるなら、買って損することは無いと思います。
この本は、Accessの使い方を解説してくれる本ではありません。Accessを使うときの考え方を指南してくれる、一種の”読み物”です。でも、そこがイイですね。・Accessを使いこなすにあたっては、結局VBAをしっかり理解して実装していかないとダメなんだ。・そのVBAは、ExcelのVBAとは全然違うんだ。ということを、しっかりと説き伏せてくれています。私にも意外と目からウロコでした。Accessをマスターしよう！業務に活用しよう！とお考えのかたは、他の解説本を読む前にまずこれを読んで、心構えを整えるといいと思います。そうすることで、他の解説本で習得できること、結局自分でがんばって自力で習得しないといけないこと、の切り分けができると思います。
他人の書いたAccess VBAのコードを読み解き、修正・機能追加し、さらにセロからコードを組み立てる方法についてコンパクトにまとめた取っ付きやすい学習書です。Access VBAの初心者を対象としていますが、当然のことながら、通常のAccessの操作に関する知識を持っていることを前提としており、さらに、VBAの基本文法やVBE(Visual Basicエディタ)の使い方に関する知識を持っていることも前提としています。なので、AccessやExcel VBAの初心者向きではありません。読んでも全く理解できないでしょう。本書はあくまでもAccessVBAの初心者向きということです。上記の通り、初心者を対象とはしていますが、ただ、Access VBAの「データベース接続機能（DAOとADO）」に関して、特にサンプルコードの各行については、明らかに説明不足です。すなわち、各行にコメントが丁寧につけられてはいますが、肝心の説明がおろそかなのです（第5章）。それから、ADOと（その拡張機能である）ADOXの使い分けについての説明が全く書かれていません。「重要なポイントを絞って説明する」とか、「関数やプロパティについての細かい説明は省く」というのが、筆者のスタンスなのかもしれませんが、Access VBAの初心者には、おそらく取っつきにくいであろう「DAO」と「ADO」に関しては、せめてサンプルプログラムを理解するための丁寧な説明が欲しかった。この点が本書の難点です。
Access VBAの導入編として最適でした。これ読んであとはググれば行けます。
DAOとADOの違い。Accessにマクロ機能があることなど、なんとなくの知識が明確になり、勉強になりました。筆者のコメントが自分もよく感じることだったので共感しつつ読み進めることができて楽しかったです。所々抜けていたAccessの知識が埋まった感じがしました。
この本をどのようにレビューし、どのような人に勧めるとよいのかが、どうにも難しく感じてしまう。おそらく一番分かりやすい基準は「自分ではコードを書かない人にお勧め」だと思う。この本は様々なNoSQLについて広範に紹介した本ではあるが、自分でコードを書く人がNoSQLの広範な知識をに身につけようと思って読むと消化不良を起こす。一方で、コードを書かない種類の人にとっては、理論的技術的にそこそこ裏付けされた知識を得て、何かしらの判断を下すための参考書として使うのによい資料だと思う。教科書というよりは、サーベイ本である。実際にコードを書く人にとっては、小規模サービスからエンタープライズ向けまでごっちゃに紹介され、かつ実際のAPIなどの記述がない本書は役に立たない。この本に書かれている内容が必要な人は確実にいる。ターゲットとなる読者は確実にいます。そういう人は、おそらく上流工程専門か、さらにその上で意思決定だけすることを専門にする人か、コンサルティングのみを専門にする人であろう。購入を検討する際には、「自分はコードを書く人間かどうか」を基準にして欲しい。
※ 本書に習い、「NoSQL」ではなく「NOSQL」という表現を使用する。レビューワーは、所謂IT業界に籍を置くが、データベースと聞けば、SQLやRDBMSしか頭に浮かばない（それで十分仕事は回る）レガシーな人間であり、NOSQLのソフトウェアを利用することや、それを売ったりすることは無いものの、ただ一方では、NOSQLって何なの？を知っていないと勉強不足のそしりを免れない立場にある。そんなレベルの人間に、NOSQLの世界の概要を教えてくれる素晴らしい一冊である。本書はNOSQLを技術面から捉えた内容であり、ビッグデータというキーワードでビジネスでの利活用や法制度等を説いた
ビッグデータの衝撃――巨大なデータが戦略を決める
とセットで読めば、もう鬼に金棒状態で、知ったかぶりのベンダーの営業や勉強不足の上司を撃退出来る。レビューワーなりの要約を以下記載する。１章は、NOSQLという概念やそれを実現するソフトウェアが出てくるまでに至る背景や歴史に始まり、NOSQLの特性、特徴を語る。NOSQLは、大量のかつ多種なデータを早く安く処理するために、目的を絞ったデータベースであり、既存のRDBMSとは別カテゴリーのソフトウェアであると明示している。２章は、NOSQLのソフトウェアを、データモデルという観点から、キーバリュー型、カラム指向型、ドキュメント指向型、グラフ型の４つに分類し、それぞれの特徴を説明する。分類の仕方は色々あろうが、技術的な仕組み・実装ではなく、データモデルという観点からの分類は、素人・外野の立場の人間にとっては理解がしやすい。カラム指向型という概念をこの本でやっと理解できた。細かいが、カラム指向型とカラムナデータベースは名前は似ているが違うというちょっとした指摘に著者の見識の深さを垣間見た。３章は、NOSQLソフトウェアのアーキテクチャ、データの整合性を担保する仕組み、データ分割の方法等を解説する（ここら辺からより技術的な内容が濃くなってくる）NOSQLデータベースでは、RDBMSではお馴染みのデータベースの4つの特性、ACIDとは別の機能が求められ、可用性と整合性のどちらを取るかで各プロダクトごとの特性が出てくる、というのが、後々の章との関係でポイントとなる。４章は、Hadoopを取り上げる。HadoopはNOSQLではなく、分散ファイルシステム(HDFS)と並列分散処理システム(MapReduce)を包含するフレームワーク（概念）であり、似ているところはあるものの、目的とする所が違うと解説する。５章は、主要なNOSQLデータベース製品を取り上げる。やや駆け足的な記述になっている部分もあるが、なんせ少なくとも何十という製品が世に出ている（本書P46）ので、あまり懇切丁寧に説明していたら本書のメッセージがぶれただろう。６章は、３章と５章を受けて、NOSQL製品の選択基準を定義する。こっち方面に詳しい人は、この章の記載は物足りないというか、参考にならないと思うが、素人・外野の立場の人間からしてみれば、「かくかくしかじかなる選択基準が存在すること」を知ることが重要なのである。性能検証の結果も載っているが、そのスピード絶対値は参考にならず（HWSWによって如何様でも変わりうる）、ただ、製品ごとに得意・不得意な処理があることが一目瞭然であり、製品のアーキテクチャーと利用目的を踏まえた製品選択が大事であることが数字でもって示されている。７章は、NOSQLを使うビジネスと銘打っているが、この章は平凡である。目新しい内容はない。各章の合間に、BBC、NYTimes、Twitter、Facebook、StumbleUpon、等々でのNOSQL活用事例が紹介されており、NOSQLの活用イメージが湧きやすい。日本企業はゼロなので、人によっては馴染みが薄いかも知れないが。あと、Diggは本書に載っているシステムアーキテクチャー切り替えとそれに伴うデザイン変更の結果、ユーザーから見放されたが（その顛末は本書では詳しく語られていないが）ご愛敬ということで。あと、こっち方面に詳しい人からすると、テクニカルな正確さや厳密性やら網羅性やらが足らないとかいろいろツッコミが入りそうな予感が何となくするが、そして、この本の著者ならオタッキーな方向に走ることをも十分できたと思うが、それを抑えて、分かりやすさ、理解のし易さを第一に置いた構成は素晴らしい。読者像を勝手に描くと、HadoopとNOSQLの違いが分からない人は、必読書。HadoopとNOSQLが一緒くたになっている人も必読書。キーバリュー型とカラム指向型という、キーワードは聞いたことがあるものの、違いを説明できない人にとっても必読書。一方、CassandoraとかHBaseをバリバリ使いこなせている人は、そもそも本書を読む必要はない。日本にどれだけいるのか知らないが。色々な知識を持っていることを前提にしているので、脚注で用語の補足説明は加えてくれてはいるものの、本書を読みこなすこと自体、結構高度なことになるのかも。
内容は様々なNoSQL製品の紹介、分類、導入事例、性能調査、選定のポイントなど。簡潔にまとまっていると思う。NOSQL製品の内部処理まで踏み込んで書いてあるのが嬉しい。ただ、2016年現在からすると古い情報も多い。NoSQLは特に変化の激しい分野なので仕方がない。この本を読んだ後に各製品の最新の状態を調べなおしたほうがいい。あと、後書きに本書全体の構成や要点がまとめられているので購入を迷っている方は本屋でそこだけ読むのをお勧めする。
コードがかけるようになる、実際に使えるようになる、とは程遠いですが、広く浅くこの薄さでまとまっており、乱立しているNoSQLの整理にはなります。文章も読みやすいです。
他にもNoSQL関連の本を読みましたが、本書が最も情報量が多くて、分かりやすかったと思います。RDBMSの知識しかない人が、なぜNoSQLが必要なのか理解することができます。NoSQLには数多くの種類がありますが、それぞれの特徴や使い分けについても解説されています。ただし、2012年の出版ということで、少し情報が古くなってきているような気がします。最近、注目されている「Apache Spark」や「Amazon Redshift」については記述がありません。最新情報を反映した改訂版を望みます。
ビッグデータはクラウドの次のバズワードとなっているようで、最近は大きなSIerも盛んに喧伝をしているようなのですが、その技術的基盤であるNOSQLについてはピンと来ない方も多かったのではないでしょうか。そこに真っ向勝負を挑んでいるのが紹介の本で、NOSQLのデータモデル、アーキテクチャの基本概念、NOSQL-DBMSの類型と代表製品の紹介、性能評価、ユーザ事例などが平易にまとめられています。しかも、平易なだけでなく、ところどころ切れ味も鋭いです。「HadoopはNOSQL-DBMSじゃない」とか、「現時点で最初に検討すべきNOSQL-DBMSはCassandraとHBaseだ」など、実際に数々のNOSQL-DBMSを比較検討し、システム開発に適用している著者たちにしか書けない言葉は、それだけで2520円以上の価値があるでしょう。こういう分かり易い基礎知識の本が出てくれると、真面目にビッグデータの提案ができる雰囲気がいよいよ形作られていくのかなと思いますね。
専門用語が多いので仕方ないですけど、注釈が多すぎて本文に集中しにくい感じでした。情報量は期待通りでよかったです。
NOSQLって何よ？という読者から、どの製品/Projectを採用するべきかを考える読者まで、NOSQL界に土地勘のない読者全般にとってよい道しるべとなる名著だと思います。そのうちテクノロジーの変革も怒るのでしょうが、当面は、これ読んどけばOKという本です。
RDBにどっぷり染まったシニアアーキテクトやメジャーブランドに全幅の信頼を寄せる監査部門等々、今後NOSQL（スキーマレスDB、ノンスキーマ型DB...etc.）の扱いを検討する上で彼らと会話するためには、内部処理的な知識や個別製品知識のみでは立ち向かえない。（なぜなら、上辺の知識しか持たない彼らにとっては宇宙語にしか聞こえないからである。）この本は基礎にして広く、経緯や動向、レガシーアーキテクチャとの比較を交えて極めて「自然な言葉」で説明してくれる。読み物として中身がスッと入ってくる文章力は特筆すべきものがある。「NOSQL」というキーワードを授かった時、まず最初に（そう、Webよりも先に）手に取る情報としてコレ以上にお勧めするものが見つからない。
私はRDBMSの知識しかありませんでしたが、とても分かりやすく読み進めることができました。各製品の違いについても書かれており、初心者にも分かりやすいです。
学校のテストは簡単すぎる、しかしもう一歩知りたい！！そんなときにやるといい問題集です。
分かりやすいですね
小４の息子の塾のテキスト以外に何かいいものはないかと購入しました。理科や社会は、算数や国語と比較して負担が小さいので、先取学習も可能かと思います。さすが日能研のテキスト、いい内容だと思います。中学受験を考えるご家庭では、塾無し塾あり問わず購入して損はないと思います。
小5の息子は中学受験の予定はありませんが、算数が得意で、小6までの単元を終えたため、中学数学を先取りするのではなく、こちらを脳トレに購入。難易度別にABCあり、解説があるので、問題なく進んでいます。B問題までは難なく終えて、C問題に入りましたが、ちょっと手こずっていて、親子で一緒に考えています。様々な種類の問題があって工夫されてるなと思いますが、書き込みスペースがないのと、問題量が少ないので星4つです。
問題数は多くないので、さくさく進みます。親のサポート無しに解説を見ながら春休みに予習として1冊終了しました。やり方を学ぶために軽くやるには丁度良いですが、問題数をこなしたい人には物足りないと思います。
難しい問題が並んでいます。子どもが自力で進んでいくには、回答の説明が今ひとつわかりにくいように感じました。（子どもの理解力によるのでしょうが･･･）
小５文章題の各単元の良く出る頻出問題を集めている。内容は算数が苦手な生徒向け。各単元の問題の解き方のパターン習得が目的。量が少ないので負担感が少なく達成感が大きい。
１５時間で分かるシリーズとしてるわりに内容が偏りすぎ。
そこまでヘビーユーザーじゃないので、そんなに活用しなかった。
Tableauをある程度使ったことがある方が読むと、効率的な書籍だと思います。なんとなく操作が分かっていると、本書を読みながらさらに知識を増やすことができます。キャプチャも多くて、手順も分かりやすいです。仕事でTableauを使うなら、買って損はないと思います。
Tablauを数年使用しているユーザーです。表計算のロジック、書式設定など、まとまった記載があるため、自分の中でも整理し直せました。データチューニングについては、執筆者の方の実務に基づいた知見が多く、勉強になりました。API連携などの記載もあり、これから試してみたいと思います。
・普段使っていて書き方が分からず困っていた部分の解決法が多く書いていて大変役に立った。また、マニュアルと違いユースケースベースで進むため利用イメージがわきやすく、書いていることを追っていくことで知らなかった使い方やtipsも知れて表現の幅が広がった。・手順毎にキャプチャがされていたり、概念的な図もあるので、複雑な内容でも操作の追従をしやすかった。・各章で、一部被っている内容や補完し合いそうな内容があったので2度目以降は1度目のページ数を示しつつ記載を省略するなどの工夫や、章間の補足連携がされていると尚良かった。・冒頭に、tableau試験のどの項目がどの章に書いているかの表があり、試験を受ける際に地味に参考になった。
第３章担当の長野さん、説明が酷すぎです。実例に即して関数を説明してください。関数を使って作成したメジャーをどう設定するのか書いていないので使いようがありません。また、説明の順番もおかしい。このように設定すると、こんな結果になっていまいます。だからこう設定しましょうならわかりますが、どう設定したかも説明せずに、こうなってしまいましたが、どう設定するのがよいでしょうか、と言うようにしないて何がなんだかわからない。tableauはデフォルトで直感的なグラフが作れるので重宝していますが、資料作成はPowerPointになります。PowerPointにグラフを落とした時にデフォルトだと不親切なものが残ります。それを何とかする手立てが欲しかったのですが、この本は作者のマニアックな説明に終始し、希望が叶わず残念でした。
プロとしてのOracleシリーズはいろいろ出ていますが、そのシリーズとしてあったほうがいいです。しかし無くてもいいかなぐらいな感じはしました。アーキテクチャの再確認としていいと思います。
Oracleを用いたシステムの開発、または運用・管理を担当するIT技術者にとって、Oracleのアーキテクチャ（内部の構造、内部的な動作/ふるまい）のスキルは必須です。特に、このようなスキルを十分持っていれば避けられたはず、というシステムの致命的なパフォーマンス・トラブルや障害例は数多くあります。Oracleはこうなっているから・・・、Oracleはこうふるまうから・・・、という視点で、設計や問題解決にあたることが重要です。この書籍では、幅広いトピックスが、丁寧にわかりやすく解説されています。説明用の図も上手いと思います。一通り通読した後も、常に手元に置いて、技術的な判断が必要な場合に参照しています。
大事に使用しています　又必要があれば別のシリーズで、購入を検討します。
目次ないし、拡大が固定だし、よくない、すっごく見づらい。最悪です。
柔らかい文体で、とても丁寧に解説されています。読みやすく、わかりやすかったです。アーキテクチャに関する解説が深く、細部まで解説されているので、Oracleの動作処理の内容がよくわかりました。
黒本の出来がそこまでよくないので、この本と黒本の組み合わせが良いと思います！
会社でトラブル発生で考えたら、対応すべき資料が無い。ということでありがたい一冊になりそう。
本自体は大変綺麗でした。梱包もとても丁寧です。小さなゴミがついていたのだけが少し残念でした。ありがとうございました。
> DBの専門家としては正直ここまで書かれると、> 飯の種がなくなるから、勘弁して欲しいと思った。というレビューにひかれて購入しましたが、期待通り。いやそれ以上。技術書は１００冊は読んでると思いますが、ここまで深くかつ親切に書かれている本は初めてです。良書はたくさん出会いましたが、「ここまで書いてくれるんだ。ありがとう」と感謝できました。とにかくかゆいところに届いている感があります。ある設定を行う場合に複数の選択肢がある場合、データ量や要求される堅牢性や整合性など状況別の指針、それぞれの長短・落とし穴、さらに筆者のおススメが簡潔に記載されています。MySQLは、自身のネットサービスで２年くらい使っていますが、何も分かってなかったことを痛感。トラブルシューティングとタイトルに入っていますが、前提となる動作原理も平易に記載されていて勉強になりました。作者様、本当にありがとうございました。
「MySQL界の漢(オトコ)」がブログやWikiで披露してきた知見が、より深く、よりまとまった形で書籍として登場です。例えば本書「第３章MySQLの状態をみる」を参照してみましょう。ブログの人気エントリがパワーアップされ記述されています。「MySQLのEXPLAINを徹底解説!! 」→本書第三章２EXPLAIN「プロファイリングで快適MySQLチューニング生活」→本書第三章３プロファイリングただブログの記事というだけでなく「MySQLの状態をみる」という観点で多くの節が新たに書き下ろされています。1 SHOWコマンドとINFORMATION_SCHEMA4 MySQLのログ5 InnoDBモニタ6 システムの状態を調べる特にInnoDBモニタについては、これまで詳細について書かれたものがありませんので大変貴重です。MySQL関連の記事はMySQLのコモディティ化と共に、多く書籍やWeb上にも情報がありますが、その多くは局所的、対処的なもので占められ、バックグラウンドの説明も含めて体系化されたものは少ないのが現状です。本書は運用と管理に特化する形でこれらを体系的に丁寧にまとめたものになっており、技術とともに「MySQLを愛し尽くした(本書巻頭、坂井さんの推薦の言葉より)」もので、MySQL運用管理者はまさに「必携の書」です。MySQLを本気で運用・管理したい向きには手放しでオススメします。是非是非書店でお手にとってみてください。
大変な良書です！オススメ。大変な良書です！オススメ。大変な良書です！オススメ。
ここまでの本はかつてなかっただろうと思う。ノウハウの塊のような本であり、DBの専門家としては正直ここまで書かれると、飯の種がなくなるから、勘弁して欲しいと思った。エンジニアとして、著者の深い理解にただただ敬意がわいてくる本である。
3章のshow status、explain 関係、6章のクラッシュからのリカバリ、7章の(mysqld の)アップグレードの意思決定方法など、いずれも他に例を見ない詳細ぶりで、類書を完全に圧倒している。どの記述にもきちんと根拠が伴っており、例示も簡潔・的確で、とてもきもちがいい。敢えて難を探せば、索引が余りにしょぼく、これは増補を望む。尚、mysqlやSQL言語自体の入門書ではない。
現在日本語版の読書会をした調度半分くらいまで(Item 31)きました。もともとMicrosoftがメインの人が書いているのですが、テクニカルレビューワーをそれぞれのRDBMSにつけているので、そんなに間違いはない(というか間違いはすくないほうで多くのRDBMSの挙動をよく調べています)です。Microsoftに特有な言い回しが2,3と、後は膨大な内容に対して少ないページ(たとえば項目9でDWHこみで説明)や、逆に冗長な項目にしつこい説明もあるが、おおむねよい具合にまとまっています。また、翻訳もSQLに詳しい人が、原文の間違いも正して翻訳している、という感じはないものの(原著の間違いはそのままスルーで翻訳されていたり、原著がゆるふわに使っているものはあいまいに翻訳されています)全体的には合格点だと思います。結果、全体80点レベルの合格点。いろいろと俯瞰するのには便利です。改善点として、大きなところではMySQL 8.0に対応と、MS Accessを対応からはずすことを次版に望みます。
現役エンジニアです。集合志向を取り上げているという点で「達人に学ぶ SQL徹底指南書」に近いものを感じました。全体的に丁寧で分かりやすく、翻訳も気になりません。あとは、ベンダーの違いにも気を配っていて、読者にやさしい本だと思います。網羅性もよくお勧めなのですが、逆に突出したものはないので入門プラスアルファぐらいの位置づけでしょうね。いきなりだとややきついかな。上級者が読むには少し退屈だと思います。
中級者向けで、「達人に学ぶSQL徹底指南書」や「プログラマのためのSQL」の次くらいに読めば良いでしょう。エッセンスの1項目ごとRDBMS製品による違いの説明もあり、また、SQL文で扱う内容もある程度具体的な業務系のものであり、より実践的かと思います。ベテラン上級者にとっては確認程度でしょうが、部下教育の題材本としてプレゼントしても良いでしょう。いくつか補足説明は必要と思いますが、ここまでの内容は他の書籍では得られないと思います。
内容自体はいいと思うのだが文章や表現が「特定のRDBMS」ではなく「特定の企業（具体的にはMicrosoft）」に偏っており、まともに読める文章になっていない。それがあまりにもひどくて読むのを諦めてしまった。バイアスを取っ払って中立的に読むということが出来ないほどに本書はMicrosoftに肩入れした表現を多用している。同じくMicrosoftの方が書いたコードコンプリートはいい本だっただけに残念である。繰り返すが内容自体はいい本ではある、ただ単にまともに読める表現になっていないだけである。
学校で学んだことを応用して解くような問題が多く、考える力がつきます。
値段以上の問題料と質だと思います。見やすいのは子どもの集中力にも非常に大切です。唯一、残念なのは解答が外せないこと。この値段では仕方ないかもしれません。
中学受験の家庭教師をしている際に使わせてもらっています。問題の分量・難易度・質に好感が持てる問題集。小学生が学校で習うことを勉強する日常学習用教材ではない。中学受験の進学塾が作ったテキストらしい出来になっている。ウイニングステップのシリーズは「〜年 」と書かれているが気にする必要はない。６年生でも４年生や５年生の問題集は非常に得る所が多い。いつも、理科の参考書・問題集をみていて思うのは、有機的なまとまりをもちストーリー性のあるものが少ない。これもその１冊。理科という教科の性質上、主観的な要素をもって編集することを避けているのだろう。塾に通わずに自学自習をする子に対して、理科の科学的な部分や考え方を与えるきっかけを与える本がもう少しあってもいいんじゃないかとは思う。
小４の息子の塾のテキスト以外に何かいいものはないかと購入しました。理科や社会は、算数や国語と比較して負担が小さいので、先取学習も可能かと思います。さすが日能研のテキスト、いい内容だと思います。中学受験を考えるご家庭では、塾無し塾あり問わず購入して損はないと思います。
まだ精読はできていません。ので第一印象ですが、、数本Realm使用 iOSアプリ作成の経験はあるのですが、本書を読んで改めて自分の知識不足・不正確さを自覚いたしました。「入門」とありますが、Realm公式マニュアル(これもよくできている)を補完する、なかなか深い内容もあります。ただ残念で減点なのは、本文中リストの背景色が暗く、フォントが小さく文字色も黒で非常に読みづらいです。年寄りには辛いものがあり、改訂版でなり改善されると有難いです(もう一冊買うかな？)。
Realmは日本語に翻訳された公式文書が豊富ですが、実際のアプリ開発で使われた実例をまとめて閲覧できるとても良い書籍でした。Swiftのみの対応なのが惜しまれますが、C言語の熟練者であればさほど苦労もなく置き換えて読めると思います。
3年前の本であることは承知の上で購入しましたなのでサンプルコードがそのままでは使えないことについては問題にしていませんしかし本文中のサンプルコードが網掛けが濃すぎてよく見えませんどうしてこんなに網掛けが濃いのでしょうかなんの必要があってわざと見えにくくしているのでしょうか枠で囲むだけで十分で網掛けの必要はありませんおまけに同じ内容がホームページに掲載されておりわざわざ本を買う必要もありません日本語の本が他にはなく貴重なので購入しましたが、Realm自体の問題ではなく読者のことを考えてなく本として最低です
要件定義から設計、テストまでOracle設計について一通り説明されている440ページの大作です。「案を列挙して、顧客に選択させようとするのは好ましくない」「故障をゼロにするのではなく、回復するスピードを上げる方がずっと効率的」といった内容は、まさに精鋭コンサルタントの経験が反映されている部分ですね。データベースエンジニアは、物理設計から関わることが多いと思いますが、要件定義、基本設計の章は、システム構築の流れを知る上で、特に若手が読むと有意義な内容と感じました。物理設計の章は、まさに教科書というべき内容です。OS設計から始まり、データベース設計も丁寧に解説されています。新規にOracleを導入する際には、ぜひ参考にしたい内容ですね。高可用性設計、クラスタ設計、スタンバイ設計の章は、深い部分まで踏み込んで記載されていることもあり、理解するまで時間が掛かると思いますが、RACやDataGuardを実務で利用しているエンジニアには非常に有意義な内容と思います。運用設計の章は、既に運用しているデータベースにも有用な章であると感じました。そもそも運用設計がされていないデータベースもあるかもしれませんが、監視やメンテナンス方針などの見直しをする際に参考になりそうです。一気通貫で読み進めるのは少ししんどく、一部内容が難しい部分もありますが、必要な部分を自分のスキルアップのタイミングに合わせて、読み進めることで、Oracle設計に関するスキルを底上げできる良書かと思います。
日本オラクルのデータベースコンサルタントが書いた Oracle Database の設計本（物理設計・高可用性設計・運用設計など）です。絵で見てわかるOracleの仕組み絵で見てわかるOS/ストレージ/ネットワーク データベースはこう使っているなどの「絵で見てわかる〜」シリーズの小田圭二さん監修です。現場のエンジニアが Oracle Database の設計をするときに困るのは、製品マニュアルを読んでもよくわからない、本を読んである程度理解したが、結局、設定値をどうすればよいかわからないといったところではないかと思います。この本では、設計や設定にどういう選択肢があり、それぞれのメリット・デメリットは何か、さらによくわからない場合はこの辺の設定値にして様子を見るとよいといった具合に書かれていて、現場で設計で悩んでいるエンジニアが手元に置いておくと役に立つ一冊だと思います。CHAPTER5 高可用性設計、CHAPTER6 クラスタ設計、CHAPTER7 スタンバイ設計はかなり深い内容まで踏み込んで書かれており、RAC、Data Guard を使われているエンジニアには必携の書だと思います。さらに詳しくはブログで中身についても紹介していますのでご覧ください。[・・・]
SE13年目、DB経験ほぼ0な私が友人に紹介を受け、読みました。読破時間12時間。勉強しているSE3年目〜5年目くらいが読める難易度と思います。特にChap5高可用性設計、Chap6クラスタ設計、Chap7スタンバイ設計は用語を理解していない方は苦労するかと。私はここで8時間ほど費やしました。皆さんはコンサルに何を期待しますか？私は、(1)漏れなく比較要素を出せる。(2)つまづき、落とし穴の回避。(3)経験から現場にあった事例、スタンダードの紹介。などなどです。各章は一般論としての構築スキームを紹介の上、Oracleでは、と記載があるので読みやすいです。また、各章の終わりに(2)つまづきポイントをまとめてあり、助かりそう。前半はコンサルの命である網羅的な比較表が少なく、出し惜しみか？と思いましたが、後半はなかなかでした。友人と話したところ(1)網羅生もなかなかとのこと。(3)は各社にあわせてなので難しいですね。1点の減点は、絵でもまだ難しかった、比較表をもっと見たかったと言うことで減点しました。それでもなお、これからOracleの設計、構築に携わる方にはもちろん、コンサルにコストを捻出し辛い方には特に価値ある本だと思います。
他の方がベタボメなのが正直、違和感があります。前半の第4章までが重すぎて、なかなか本題のOracle設計に入りません。CHAPTER 1　システム構築の流れCHAPTER 2　要件定義CHAPTER 3　基本設計CHAPTER 4　データベース物理設計「システム構築のための」とタイトルについているので、丁寧に解説したのかもしれませんが、ここまでやってしまうとまるで「開発プロセスの本」そして「データベース概論」です。それはそれで開発を知らない人にはよいのかもしれませんが、ちょっと読んでいてつらいものがありました。前半部分をもう少し要点のみにコンパクトにして、第5章以降の本題のOracle設計部分をもっと丁寧に濃くして欲しかったです。内容が汎用的すぎて物足りない感じです。
全般的によくまとまっていて非常に良い本だと思います。OracleRACの構築経験があったり、詳しい人からすれば目から鱗のような話はありませんが、逆に不足もありません（不足が無いのは凄いことです）。セオリー通りの「教科書」と言っていいと思います。OracleDBを設計する人はベテランであっても考慮漏れが無いかチェックするために是非机の端に置いておきたい本だと思います。個人的によく書いたなあと思ったのは105ページのSGAのサイズの表です。今後設計するときにはかなり参考になるでしょう。特に経験したことのないタイプのデータベースを作る時には参考になると思います。逆に物足りなさを感じたのは354ページのログ監視と、378ページのパッチ適用と、409ページ以降のテストの部分です。一番泥臭くて一番大変な部分がサラッと書かれていました。この辺りはコンサルタントの出番ということもあるでしょうが、深く語る本は皆無なのでもう少し踏み込んで欲しかったです。タイトルが”設計”になっていますが、今後の続編でもいいのでこの辺りの内容にフォーカスした本が出てくれればと思います。あとは、ターゲットが１、２年目の若手とあるのが気になりました。そのくらいの若手が読み込んで全部理解できるなら、日本で数人のエース級でしょう(笑)むしろ７、８年間オラクルを扱ってきた人が、わかったつもりになっていないか確認のために読んだほうがいいと思います。オラクル経験のある部下に読ませたい内容です。この価格でこのボリュームとクオリティはお買い得だと思います。
書籍の中身がすべてテキスト化されているのは驚きました。検索には使えそうです。ただ、そのテキストが正しい順番に収められているかというと実はそうではありません。ブラウザの読み上げ機能で読ませようとするとかなりの確率で前後逆転します。まあそれでも、使用に耐えるレベルだとは思います。
総集編ということで、この本自体は全部バックナンバーのインデックス（何号はなんの特集だったのかの概要）になってます。付属のDVDが本体で、第一号からいままでの全てのバックナンバーのPDFが圧縮されて入ってるので、DVDから抽出解凍するにはやや時間がかかるでしょうか。本書のDVD部に同封してあるプロモコード（パスコード）を、技術評論社アカウントにログインして入力すると、本書と全く同じ内容の電子版が技術評論社アカウントの購入済み電子書籍に追加されます。また付属DVDと同じ内容のデータがダウンロードできるようにもなる。人によってはDVDのデータ抽出より、データDLのほうが早い人もいるかと。本書は199x年代から、2017年に至るまでWeb+サーバー+DBの技術の変化や脆弱性などを追うことができるので、とにかく知識をつけたい人は、読み漁る根気があればかなりためになるんじゃないでしょうかまた当たり前ですが技術書でなく雑誌であるため読み進めやすいのもいい点ですね。
Vol1〜102までまとめられた超お得な書籍です。総集編を期待して気になった号以外買わなくなってしまうくらいに超お得です。しかもPDFなのでタブレットに入れて通勤中に読めるのはもちろん、Acrobatでの検索用のINDEXもついているが助かります。ここまでは今までの総集編と同じですが、今回からは技術評論社のサポートページからPDFをダウンロードすること出来るようになりました。書籍にダウンロード用のパスワードが封入されており（恐らく１冊１冊個別）、それとアカウントを紐付けるとダウンロードできます。別の方のレビューでDVDが読み込めなかったとありましたが、私が最近使っているノートPCやデスクトップPCはそもそもDVDドライブがついておらず、ダウンロードできるのは非常に有り難かったです。古いMacを物入れから出して来なければなりませんでした（苦笑ただし、容量が4.5GBもあるのでテザリングされている方は容量にご注意下さい。ZIPファイルで１つのファイルにアーカイブされているのでVol100だけ読みたいとか思っても4.5GB分全部ダウンロードしなければなりません。
Windowsアプリケーションの開発からWebアプリケーションの開発に転向しました100冊オーバーの過去の記事が収録されておりPDFで横断して検索もできるこれだけの内容がこの価格で買えるのはとてもありがたいです
前回の総集編 
WEB+DB PRESS総集編[Vol.1~84] (WEB+DB PRESS plus)
 との差分は3年18冊分.102冊+総集編5冊の本文PDFは, 号ごとに1ファイルで計4.5GB.簡易目次PDF(他誌に載る広告のようなもの)と, Acrobat Reader DCで使える全号一括検索用PDX(PDF Index)が付属.これらはHDDなどにコピー可能.全号一括検索は「PC環境のみ対応」と書かれてるが, PC/Mac対応, タブレット非対応という意味のよう.
トラブル対応のことを調べる前の基礎知識とはなります。
業務アプリケーションのプログラマーが陥りがちな、業種に依存しない、インフラ部分との接点に関する技術が解りやすく解説されています。プログラミングから離れて久しいベテラン層に向けては、設計やレビューのポイントとして押さえておきたいことが学べます。
まさか一般の本（といっても野村総研出版ですが）で、業務システムのよくある単項目チェックや相関チェックの用語を見るとは・・・。内容も漫画でとても読みやすい。登場人物も口だけの人（レビューが足りなかった人）、できる人、新人（考えが足りない人）という表現があり、この業界における人間模様のあるあるをコミカルに描いている。
初級者には良いです。
申し訳ないですが、下記の印象です。そこそこのエクセルユーザーにとっては既知の情報が文章でダラダラ書かれている。自分の知識の確認の意味で読むなら良いかも知れませんが、それにしても図解が主ならともかく（図解がゼロではないですけども）、文章でなんだかダラダラ書かれているので、読むだけで時間を費やしてしまい、時間を費やして読んだ結果、「え？それだけのこと？」となってしまう。この本を読むなら、もう少しエクセルの集計などに関して深堀りした本を読んだ方がマシと思う。ということで最後の６，７章を残し、読むのを止めました。
集計に困ったなら、読むべき本です。
今回はコロナの事もありAmazonで購入。前回の集計抽出の本で役に立ったので迷わず注文です。集計だけについて、最後までスラスラと通しで読める本でした。こっちの機能がダメならこっちがあるよと教えてくれる。簡単そうな集計でもすぐにできなくて、半日かかっていたのですが、この機能を使えばいいとわからせてくれる。一言で言えば····パッと速く早く集計できるように、とてもとてもわかりやすく話が進められている、自分にとっては、まさにExcelの意義を教えてくれる本でした！集計だけなので、次は抽出術の本も？いつかな？
本屋さんで下調べをしていたので買って正解でした。
とにかく読みやすい、分かりやすいある程度、関数や集計で苦労したことある人向け
当然、実際に仕事で使う表は、データベース本に載っている表のように簡単な構成ではありません。だから、色々な本を読み漁って知識はあっても思うように集計できず時間がかかってしまう。この本を読んで、つまづいた時に、あ、こっちを使えばいいのかと正しい判断ができるようになりました。大変集計が捗っております。
まさに、「はじめに」で書かれているような事をやっていて、限られた時間を無駄にしていた。この本で集計に必要なたくさんの知識が色々と身に付いたし、何よりも読みやすい。確実に読む前よりも無駄な時間が減ったので星5。
あらゆる集計本を買い集めて試行錯誤の繰り返しでしたが...それも 最早 過去の恥かしい経験に！ してくれたのが、この本でした。迷ったり悩んだりして無駄に時間を費やしてきましたが、この本一冊で難解な事もすべて解決できます。お一人の方が、難しく難しく...と首を傾げたくなるレビューを書いていらっしゃいますが、正直なところ「どこが?」と (苦笑)　これが難しかったら、おそらくどの本でも難しいのではないでしょうか!? 関数とピボットテーブル、集計を早く終わらせるにはどちらが効率的か?この選択をしばしば間違えて、大幅に時間を食い潰した時などは苦手意識に陥ったりもしましたが、この本と出会ってからは、集計が得意分野に変わりつつあります。(簡単に手早く終わるので)トットと終わらせるには 何といっても！！集計できる機能について、アノ手コノ手があることを知っておく事が大前提だと....その方法がマルゴト載っている、見事に納得できる良書です。全ページが「なるほど！」な一冊で、欲しい知識すべてを網羅している、実に頼り甲斐がある本になっています。 前回の集計·抽出大全集を読んで、集計に絞ってもっと知りたくなっていたタイミングだったこともあり、最後まで通しでスラスラ読みやすくて...お気に入り&オススメの一冊になりました。集計でスッキリしたい人には、是非オススメします。
作業担当の方に理解して頂くための参考本として購入。順調に進んでいます。ありがとうございます。
集計を勉強中です。tips集が役に立ったのでこちらも購入。とてもとても読みやすく、集計への意欲が湧きました。
このテキストをざっと一通り読み、過去問を数年分やり、その際に出てきたわからない箇所や理解ができていない箇所をまたこのテキストで復習するという勉強方法で、今年の秋の試験は、自己採点で合格点に達しました。わかりやすくて、良い本だと思います。またダウンロードできる過去問の解説も丁寧でよかったです。
中身は申し分ないが、キーワード検索するために電子書籍購入したのにできないなんて・・・意味ない
この本はあくまで情報処理安全確保支援士(登録セキスペ)の資格取得のための参考書で内容的にはまずは試験用なのは当然ですが、実際に情報セキュリティを考える上で必要となる事柄の要点が良くまとまっていて、技術的な事項も分かり易く図解がされている、資格取得が目的の人だけが手にするには惜しい良くできた本なので、特に受験の予定がない方にも情報セキュリティの教科書としてお薦めさせていただきます。ただ巻末の参考文献に自分が以前古書で買った本が載っていて、あれっと思いましたが、参考文献がかなり昔の版のままで更新されていないようなので改訂をお願いしたいと思います。因みに、昨年、2018年に出た当時総務省の官僚だった方が書かれた本を読んだところ｢信頼されるインターネット(trusted Internet)｣という字句が出てきて、立場上、奇麗事を言いたい気持ちは分からなくはないけれど、自分達が生きている現実は｢ゼロトラスト｣が当然の前提だろ、と憤慨したものですが、この本を買ったのはサンプルページに｢ゼロトラスト｣の文字があったのが目に付いて、今日現在では国が関わる資格でも｢ゼロトラスト｣が既に常識なのかと思ったからです。今のところ｢ゼロトラスト｣自体を直接問う問題は出題されていないようですが、今後を考える上で押さえておくべきポイントのひとつなのは間違いないようです。というかこの本を買って、ちょうど試験の受付期間なのに気が付いたので試験を申し込みました。レビューは偉そうに書いてますが今日試験を受けたら不合格なのは間違いないので真面目に勉強したいと思います。ところで思ったより参考になった、としてくれた方が多いので今更書きにくいのですが、(特に平成2年以降の)情報処理安全確保支援士試験の過去問を知っている方なら分かるとおり、この本は上に書いたとおり情報セキュリティの教科書としては良くできていると思いますが、試験自体にはあまり役に立ちません(必ずしも情報セキュリティを直接問う出題がされているわけではということです)。
図が多くとても分かりやすい
これぞ教科書！！って本です基本情報くらいまで取得していれば、難なく読み進められると思います。これで今年度合格目指します
この試験はネットワーク技術の知識が重要でその知識なしに勉強するのは無謀です。この本はネットワーク周りの知識があることが前提になっているので基本的な説明はほとんどありません。なので、ネットワーク周りの知識に自信がない方にはおすすめできません。その点、インプレス社の安全確保支援士教科書はネットワーク技術の基本的な知識から丁寧に説明されているためおすすめできます。またこの本はオンプレ時代の知識が重視されているため全体的に内容が古いです。今どき自社でメールサーバ立てたりDNS運用してるとかヤバいだろみたいな例ばかりで全然頭に入って来ませんでした。またクラウドに関してシンクライアントの説明しかないのは致命的だと思いました。オンプレの技術が不要とは思いませんがもう少し情報をアップデートしても良いのではと思いました。
午後試験でもでたことがないような細かいことまでしっかりと書いてあるテキストです。とはいえ、シラバスに沿って書かれているので出題の範囲内ではあるのでしょう。ただ、細かすぎて分からない部分もありました。IPsecあたりの説明は理解しにくいのでもっと概要から入って欲しかったという面もあります。また、ARPスプーフィングは、過去の午後試験の出題歴もあるのに、詳細な説明が省かれていて物足りなさを感じました。実際に読んでみて、過去問を解いてみての感想です。私の主力テキストの一つです。
素人にも分かりやすく解説されています。
Elastic Stackの事が良く解りました。セキュリティや可用性対策、パフォーマンスチューニング等に関する事も折り混ぜて書かれており、実践で経験を積み、使える技術を習得出来ると思いました。本当に、ありがとうございます。
同一ローカルネット上かVPNで行われるので、暗号化通信はあまり必要にならないそう。第一線の人がおっしゃるのでそうなのかもしれないが、BeatsとLogstash間こそ少なくとも異なるホストからの通信によって集められる情報なので必要とする人も多そう。ましてやゼロトラストなどが話題になる時代に。。と素人は思ったのです。網羅的に書かれているので、参考にはなるとおもいます。自分の場合は、結局のところオフィシャルサイトの情報やネット上の資料をつまみ食いしてやりたいことを少しずつ仕上げる感じでした。必要なときにはたどり着けない様な印象。検索できないしね。
現在IT企業に営業職として所属しており、日々お客様とログの有効活用について議論しています。ログを活用したい人がどのようなバックグラウンドを持っているかによってディスカッションポイントは変わってきますが、技術的に深い話になると営業の身としては結構辛いのが本音。なぜ辛いかを考えると、それはデータ活用、可視化の経験や知識がないことで適切な会話ができなくなるから。じゃ手を動かして理解を少しでも深めようじゃないか！まずは良く耳にするElastic Searchだ！と意気込んで出会ったのが本書。ターゲット層とは若干異なることは理解していましたが、初心者の私にも理解できるよう「ログとは」の丁寧な説明から、わかりやすいコマンドラインまで記載、解説されており、鋭意Elastic Stack構築中。OSS技術の恩恵、日本語でも学べるというダブルの恩恵を感じながら勉強中です。いつか構築した環境を著者に見てもらいたい・・
日本ではFluentdに押されがちなLogstashですが、Elastic Stackの一員としてElasticsearchとの相性は抜群です。本書では公式ドキュメントでもいまいち全体像が分かりにくいElastcisearchとの連携部分を丁寧に解説していあす。そもそも公式ドキュメント英語ですしね。また、LogstashはElasticsearchへの投入役としてだけでなく、データの前処理ツールとして、また他のストレージへの出力などにも使える、使い勝手の良いツールです。本書を読むとその一端が垣間見えるので「Elasticsearchのお供だけに留まらないLogstash」を知りたい方にもおすすめだと思います。
本書では、ログ分析という、ITにおいてインフラ維持からセキュリティ対策まで幅広く活用される題材を扱っている。Elastic Stackと呼ばれるElasticsearchをはじめしたオープンソース群、特にLogstash/Beatsを主軸にログ分析基盤構築のための技術的な知見を得ることができるだけではなく、ログ分析を扱う上での諸注意や実際に運用する中で直面する課題にも触れられており、Elastic Stackを用いてログ分析したいという方のガイドとして有用であった。
GCSにあるデータを加工してBigQueryに登録する時に本書を使用しました。やりたいことがそのまま書いてあるわけではないですがインストール手順、プラグインの追加や方法設定ファイルの書き方等が丁寧に書いてあったため目的を達成することが出来ました。
貧者のSplunkたるElastic Searchの標準ログ転送の仕組みのlogstashとbeatsシリーズの解説本。Ver4の時にSIEMを自作したことがあるが、その時にこの本が欲しかった。Elastic Searchのインデックス量と実メモリ量の相関関係が書いてある書籍としては初ではないだろうか。これからデータ基盤を構築する人には必須の本だと思います。おすすめ。
毎月の勉強会の教科書でしたのでお安く手に入って良かったです。
説明の足りない本です。
タイトル通りですが、とても親切で丁寧に書かれていて、読者に分かって貰おうというスタンスが伝わってきます。図例もシンプルで理解しやすく、すんなり頭に入ってきます。読書に語りかけて来るように書かれていて、文章も力みなく、むしろ脱力感があるようなところも、親近感が湧いてまた良し。SQL関連の入門書で、図とか分かりやすいとうたっている本は多々ありますが、この本が一番お勧めです。
○著者が新人教育をすることを仮定して書かれているという事で、  データベースの基礎的な内容が中心  → ただし、SQLの内部処理の順序（WHERE句→GROUP BY句 →HAVING句 →SELECT句 →ORDER BY句）や  テーブル設計に関する内容など、ある程度SQLを知っている人でも正確に把握できていないような内容も記載されており、  手元に置き、確認するのに適していると感じた  ○図や表が各所に挿入されており、データベースの状態・SQLの実行結果が想像しやすい  ○本書ではMySQLを中心に解説しているが、標準SQLの内容が踏まえられていて、  各DBMS製品で差異のある箇所については言及されているため、親切だと感じた  ○単純にこのSQLの句・式を使うとどういった結果を得られるかだけでなく、  その句・式を省略した際にどのような結果が得られるかについても言及しており、  普段意識できていないSQLの動作についての理解が深められる  → ORDER BY句を省略すると、データベース内部での格納順に結果が返される、  CASE式においてELSE省略時は「ELSE NULL」となる 等  ○各章の最後の練習問題は、簡易すぎると感じた  → 本書の説明で用いているサンプルデータベースを用いたものに変更した方が  より実践的なものになると思う
DBを使うなら最低限これぐらい必要というコンセプトで書かれています。手を動かすタイプではなく、教科書タイプの参考書。<良かった点>・標準SLQによる解説・クエリごとのNULLの取り扱い・内部処理の順番・入門書ながらインデックス・サブクエリ・ビュー・スカラ値の解説がしっかりしている多少ですが、ER図・正規化・データベース設計にも触れられていました。
クラウドゲームが題材となっていますが、ゲームに限らずリアルタイム性のあるアプリケーションには大変参考になります。残念ながら、クラウドとリアルタイムアプリケーションの相性が良くないため、実現には大変苦労することになると思いますが、本書に苦労のポイントが網羅されています。
前半は初歩的な解説から始まり、後半になるにつれ、実装についての解説になっています。素人にもわかりやすいです。
python初めてでしたが、内容が豊富かつ、丁寧でよかったです。後は実際に組んでみることが大切でだと思います。
Chapter６のテキストファイルについてGoogleColabの仕様変更で、以降の章が使えない。それが直れば５つ星⭐️仕様変更対応が自分で対応できるレベルなら本書は不要。
タイトルの通りです。単純なタイプミスと思われる誤字のオンパレード。誤字が多いということは、内容も杜撰です。コードを丸写ししても本に書いてある結果が得られないことがしばしば。結果的にネットで検索をし、トラブルシューティングをして能力向上をさせることを狙っているのか？と思うほど。。。
副題の『10年使える「セキュリティの考え方」』のとおり，セキュリティの本質は何かということを解説しています．「守るべき資産があるからセキュリティが必要となる」「セキュリティとリスクは対立する概念で，リスクは資産，脅威，脆弱性に分解される」というような話はコンピュータ・セキュリティに限らず，リアルの世界におけるセキュリティを考える際にも適用できる基本的な考え方です．このような話をリアルの世界とコンピュータの世界を比較しながら易しく解説していますので，セキュリティの本質を理解したい人には良い本です．ただし，技術的な話は概要だけですので，理系に人にはちょっと物足りないかもしれません．
あ、おかちゃんだ！ｗEテレの先生ですねずいぶん素人向けですがそんな程度の本が好きだしそんな程度のオツムなので好きですね技術の前の話、セキュリティとは何なのかというセキュリティという概念の話けっこうヒントにはなるこの上のレベルの本が突然とても難しくなるのが常識なことのほうが欠陥だといつも思う
技術用語（公開鍵、秘密鍵、フォールセーフなど）は出てきますが、詳しい解説はありません。あくまで、セキュリティの考え方が書いてあります。技術書ならば、前書きが第１章に書かれてある内容なんだろう。暗号技術や認証技術について読みたい人は別の本を探したほうがいいですね。簡単な言葉で説明してあるので、セキュリティの知識が乏しくても簡単に読める本だと思います。一般ユーザー向けの本だと思います。情報資産、脆弱性（セキュリティホール）、脅威（物理的脅威、技術的脅威、社会的脅威）が３つ合わさったときに、セキュリティ事故がおきる恐れがある。セキュリティを守るためには、脆弱性を守る必要があるということになるわけである。
「セキュリティー」の概念について正しい理解ができているか、と問われて疑問符が付く人は、本書をぜひ購入されたい。なぜなら、本書では「セキュリティー」が求められるすべての分野に関して共通となる基本的な概念に関して、ユニークな比喩やイラストを交え、要点を押さえつつ丁寧に解説されているからだ。それが終わって初めて、コンピューター分野における…などの応用的な内容へと文面が進む。これは、体系的な説明をするための手順としては理に適うものだ。だから、読者は、セキュリティーとは何か、また、セキュリティー自体に内包される欠点とは何か、などの概念を正確に把握できると思う。専門用語の濫用もないため、構えなくても手軽に読める反面、新書サイズ用に説明内容を圧縮したのか、読後感にやや物足りなさを感じた。総じて、読者のセキュリティー関連知識を改めて体系的に整理させてくれるであろう本書は、なかなかの良書と判断できる。
昔の城壁から、現在のネットでのセキュリティまで、セキュリティの成り立ちがとても面白かったです。また、「取られて困るものがなれれば、泥棒は脅威にならない」というところは、「なるほどな〜！！」と思いました。脅威と資産の分析などを考える上で頭がごちゃごちゃになったら、この考え方に戻れば、頭もすっきりしそうです。
リスクは分割するもの。　資産　脅威　稀弱性の３つの視点に分割している。これだけでも役立つと思う。「人のリテラシを向上させるしかない」とあるが本当だろうか。組織内ならのネットワークならOKだと思う。インタネットでは無理だという前提の対策も必要ではないだろうか。
2006年の本。著者は関東学院大学大学経済学研究科助教授（当時）。「１０年使える」という副題。出版から１０年経ったが、一応、使えると思う。技術的な話ではなく、セキュリティの意味を改めて考える、という論調。非常に基礎的。　曰く・・・　セキュリティを考える上で、最弱のパーツは人間である。　ルールが存在し、ルールを遵守していればシステムは利用を拒否できない、この構造がある限り、システムが存在すること自体によって悪用もまた回避できないという矛盾を永遠に内包しつづけることになる。　などなど。
皮相的なハウツー本ではない。そもそもセキュリティとは何なのか？という本質に迫ろうとしているところが興味深い。これをとっかかりとして自分なりにさらに思考を深めていけば、より具体的な検討の際にも応用の利くようになるのではないか？何事も基本が肝心。という意味でお奨めの一冊。
セキュリティについて何も知らない人が読めば、大枠が理解できるでしょう。しかしセキュリティに関する講義を受けたことのある人にとっては当たり前のことばかりで退屈かもしれません。
よくあるネットワーク・セキュリティの本とは一線を画す良書である。どこが他の書と一線を隠すかといえば、「ウィルスソフトの使い方」や「流行したウィルスの性質」…などについて書かれているのではなく、セキュリティの基本的な思想や概念について書かれているところである。さて、本書は、このセキュリティの基本的な思想や概念を解説するために「そもそもセキュリティとは何か？」，「リスクをどのように低減するか？」，「既存のセキュリティの仕組みはどんなか？」，「既存のセキュリティに潜む問題点は何か？」，「破られないセキュリティを作ることはできるか？」…等の疑問に答えつつ、セキュリティの本質に迫っていく。「セキュリティの仕組み…」などと聞くと「難しいよ…」などと思うかもしれない。しかし、本書を読めば、セキュリティの思想や概念というのは、ネットワーク社会になったから生まれたものではなく、大昔からあったものでさほど難しいものではないことが分かる。ネットワークには危険がたくさんあるから、なんとなくウィルスソフトやファイウォールを導入しているという個人や会社も多いと思う。しかし、そのようにお金をかけてセキュリティを強化する前に、本書を読み、セキュリティに対する意識を変えてみるのも良いと思う。　本書の内容，著者の見事な解説，著者のユーモア…お勧めです。一読あれ！
「担当しているシステムのデータベースセキュリティ対策は十分なのかな？」と疑問に思っている方は、設計フェーズであっても、運用フェーズであっても、この本を手元に置いて参照するとよいでしょう。理由は、データベースセキュリティの専門家が、その対策について抜け漏れなく書いているからです。抜け漏れなく書いているからこその608ページであり、一通り読み込むにはある程度の時間を要します。この点からも、この本を手元に置いて必要なタイミングで参照するのがいいと思いました。本書を読み進めると、徐々に高度な内容へとステップアップする構成であることに気付きます。最初は、最低限必要なデータベースセキュリティの話から始まり、高度なデータベースセキュリティを実現する機能、そしてクラウド上でのセキュリティ強化といった構成です。また、Oracle Database 12c だけでなく、Oracle Audit Vault and Database Firewall，Oracle Key Vault，Oracle Database Lifecycle Management Pack などの最新の Oracle 製品群についても、マルチテナントのセキュリティマネジメントいう形で紹介されており(第13章)、システムのセキュリティ強度を高める上で選択肢を与えてくれると思いました。私は数か月以内に、クラウドサービスを含む複数システムのデータベースセキュリティ対策を考える立場になることがきっかけで本書を購入しました。データベースは、防御すべきデータが格納されているので、一撃でノックダウンされないように、縦深防御の考え方が必要なシステム構成要素であるため、本書のようなベストプラクティスがマッチしました。他にどういった方に向いているかといえば、クラウドサービスの利用を検討している、セキュリティ認証を取ろうとしている、マイナンバー対応でセキュリティを強化する、データベースに加えて非構造化データの活用を検討している、といった方ではないかと思います。
本書は大きく３部にわかれており、第１部で基本的なデータベース・セキュリティの考え方や設定、標準的な実装を、第2 部ではオプション製品を含めた各種の高度な対策と実装方法を解説している。その後、第3 部でクラウドサービス上でのデータベース・セキュリティについて解説している。また、暗号など一部の分野では製品の機能以前に要素技術の基礎的解説が加えられている点にも好感が持てる。（データベース技術者は必ずしもセキュリティ技術に明るいわけではない）本書でも取り上げられているVirtual Private Database(VPD)やファイングレイン監査、Enterprise User Security(EUS)、Oracle Label Security などは2001 年当時、Oracle8i（8.1.7）やOracle9i の頃から実装されている機能群であるし、Oracle10gR2 以降で実装されたTransparent Data Encryption(TDE)やDatabase Vault にしても、リリースされてから既に10 年近くが経過しようとしている。過去15 年の間にIT システムの構造はクライアント・サーバから3 層構造のWeb アプリへ、そしてクラウドサービスへと変化し、また、情報システムを取り巻く社会環境も大きく変化している。それに合わせて情報に対する技術的脅威も社会的脅威も変化しているのであるから、当然、技術的対策としてのセキュリティ機能も相応の進化を求められるはずである。それでもなお中核となる機能は大きく変わることなく、その役割を果たし続けているということは、実は情報を守るという目的を達成するために情報の「器」であるデータベースが持つべき主要な要素技術は大きく変わっていないということであり、またOracle Database のセキュリティ機能の基本的な思想が間違っていなかったということが、本書を通じて示されているといえよう。データベース技術者の方々には実際の設定例などを用いてぜひ実装のチャレンジして頂きたいし、システムを企画する立場の方や、データベースのことはよくわからないがセキュリティには携わっているという方には、考え方や機能概要の部分だけでもぜひ読んで頂きたい1 冊である。
Oracle 社の製品を使用するシステムのセキュリティに関して、最新の内容も含めて割と詳しく説明されています。そのような製品を使用するSEやIT部門の人は、読む価値があると思います。特に、アプリケーションのエンドユーザーを(性能や管理性を犠牲にせずに)データベースのセキュリティとどう結び付けるのか、に力点を置いている印象です。ただ、原文が悪いのか、翻訳が悪いのか、何を言っているのか分からない部分がたまにあります。特に一章は、概念的な説明が多いせいか、翻訳が直訳過ぎたりして、やや分かりにくいです。他の章も、明らかに間違いと思われる訳がたまにあったりします。段落の意味を全体的に把握して翻訳できていないというか、日本語力が十分でないと感じます。同僚なり監修者なり編集者なりがもう少しチェック出来なかったのかな、と。。
データの物理的な構造と内部的なデータメンテナンスの仕組み、あとクエリ計画の評価のされ方が参考になりました。poestgresqlがよく出来てるのもあると思うのですが説明が非常に明確で分かりやすかったです。
この書の説明に写真や動画は不要。これを読めばPostgrSQLを動かすための環境、設定、設定順序を理解することができます。
PostgreSQL 10までの内容なので、12での変更には追従できていません(recovery.confが無くなった、など)が、それを差し引いても有用です
PostgreSQL経験者が、理解を深め最新機能を学ぶことができる本。初心者が理解を深めるのには良いが、未経験の人は他の本を読むべきだろう。また、全てが解説されているわけではないため、適宜公式ドキュメントも参照する必要がある。
前著が9.3ベースにしていたので、9.4, 9.5, 9.6をへて、10をベースにしたこの本はPostgreSQLファン待望の一冊です。(表紙の象が劇画調になっただけではありません)9.4まではこうだった、とか。9.4以降はこうなったとか、バージョンを意識する形で全体を初歩から俯瞰できる構成は(私にとっては)大変役立ちました。
当然かも知れませんが。あと、網羅はされているかも知れませんが、説明が雑な印象
とても良い本だと思います。しかし技術評論社は正誤表を出さないんですね。明らかに誤りが見つかっても、正誤表のページすら存在していません。よって☆-2です。正誤表を出す出版社が出している技術書を購入しましょう。
Postgresqlの内部構造から障害・パフォーマンスチューニングなどを幅広く学習できる書籍です。無論読むだけではなく、Postgresqlの設定ファイル変更、レプリケーションやバックアップも実際に試す事で基本的なスキルを身につけることは可能となります。また、OSSDB Goldの対策でも使える貴重な書籍の一つでしょう（無論、これだけでは足りないので公式ドキュメントなども参考に）惜しむらくは、コマンドの説明とコマンドの実例を記載する際に、ページ跨ぎがあることでしょうか。1ページ前後にあることで見づらくなっております。旧版と比べて更に見づらくなっているのはマイナスです。また、旧ではVACUUMで索引出来たものが、新ではバキュームになっているなどもあった覚えがあります（間違いだったらすいません）総評ですが、Postgresqlの開発者・DBAの人で初心者脱出をし中級者へあがるためには最適な1冊です。
詳細の痒いところに手が届いてて助かりました、これで目の前のパフォーマンス問題なんとかなりそうな気がします
領域管理やユーザー管理、バックアップにSQLオプティマイザなど、Oracleのひととおりのことが良くまとまっています。ただ、運用管理と言いながらも、ASMやEnterprise Manager自己診断などの「手間を減らす」系の新しい要素がごっそり抜けており、発想の古臭さを感じてしまいました。なので星1つ減点。その点を除けば良い本です。
前半の初級レベルは簡単すぎて使えませんでしたが、そのあとのものはとても良かったです。
問題はレベルごとに分かれているのですが、それなりに考えさせられる問題レベルとなっているBレベルについて、必要と思われる解説が不足しており、特に物理の計算などでは解説が偏っているため使い勝手が悪いです。直前に見直す際等に計算式などの解説が無いのは非常に不便。他の問題集をお勧めします。
SQLの書籍ならコマンドの羅列の説明以上の実際の問題の解決方法を知りたい。例えば検索も単に大小検索するのではなく、複数の条件を組み合わせたSQL文をpythonで実現する例題がほしかった。入門書としてはOKだが、これならネット（SQLの文法）で十分である。
Pythonを使ったSQLiteに関するKindle本がなかなか見つけられなかったので、とても助かりました。ところどころ抜け漏れやfunctionのコードとmainのコードの重複があるような気がしたのですが気のせいでしょうか。初心者なのであまりいえないですが...下巻にも期待したいです。
Pythonは利用するつもりはなかったのですが、WindowsとMacでSQLの結果が違ったりなかなかクセのあるDBのSQLについての説明があるだけに有難かったです。下巻に期待します。
良著だと思います。win、macのようですが、私のlinux（ubuntu）でも動きました。pythonの基本を知っていることが前提です。pythonに関する説明は一切ありません。SQLの基本が知っていることが前提だとは思いますが、この点については本書で説明があります。visual studio coderを利用します（私は、ローカルがwinで、リモートがlinux（ubuntu）です。）。vscのインストールについてはふろくに簡単な説明がありますが、開発環境が整っていることが前提といえるかもしれません。私はSQLの教科書をあらかじめ読んでいたのですが、この本書を読んで、それを実際に動かし、SQLの理解が深まりました。改善点も指摘しておきます。180頁「 先ほど作成したopen_ csvtest_ db」について、作成したページがありません。これは一例ですが、コードの誤字が若干ありました（全部打ち込んでテストしました。）。多くの出版社は、誤字脱字について、訂正するHPがありますが、本書にはありません。kindleの本の場合、そういう補訂版って簡単に出版できないのかな？本巻は、上巻だそうです。下巻が近時出版らしいです（2022.12.3）。下巻が出たら読みます。
中学受験はしませんが、小学４年生の息子に購入しました。楽しく取り組んでいます。
4年生の3学期に活用したいと思っています。まだやっていないので詳しい評価はできません。
まだ始めたばかりですが、苦なくすすめています。説明が豊富で、解説が分かりやすいと思います。
以前は模試で60点くらいしか取れなかったのが、いつのまにか80点取れるようになりました！国語が苦手だったのが、知らず知らずに国語が得意に！コレのおかげばかりではないと思いますが。びっくりです！でも数学が伸びなくなったりして…
コンパクトにまとめてあるので、読解の補強に便利です。4年生用としては難しすぎず簡単すぎず適度な難易度のため演習がスムーズに運びます。下段のヒントは、有用なものばかりで子供が見ればよいヒントとなりそうですが、それをを参考にするようなしっかり者の小学4年生はほとんどいないでしょう。それでも教える側にとっては大変有用なヒントです。解答の解説は類書に比べあっさりしていますが、物足りなさ違和感は感じません。少し注文があるとしたら、正解選択肢に1，2か所どうかと思うものがあったこと。それも利点で十分に補っています。
小4の息子は国語が苦手。なかでも記述に弱い。なんとか記述が出来るようにしたいと記述の参考書を探したが、ここは「急がば回れ」。書く力を無理につけさせる前に正確に読む力をじっくり身に付けさせよう。幸い本書は100ページと薄め。夏休みに一日一題取組んでみる。9月の公開模試の成果は如何？
Oracle以外のDBを何年か運用してきたレベルですが、Oracleは略字が多く名前を聞いても用途が想像しづらいのですが、本書は運用面でどういったツール、コマンドがあってどう使うのか、全体像を把握しつつ簡易な事例として大変わかりやすかったです。あくまでも簡易事例なので、仕様レベルの内容は公式ガイド、もしくは、五十嵐建平氏などの「新・門外不出のOracle現場ワザ ～エキスパートが明かす運用・管理の極意」などで、別途学習が必要かと思います。それとRMON、PMONなどのアーキテクチャの概念に関しても、ほぼ説明は省略されてますので、小田 圭二氏の「絵で見てわかるOracleの仕組み」が入門としては最適かと思います。
ちゃんと素人テストで手順の通りやってできるところ、迷うことも少なく、迷ってもすぐに分かり易い構成だったところは評価が高い。しかもよく起こるエラーについてちゃんと説明が出来ているところだ（一部例外なエラーは自己解決だけど）アホな本は迷うポイントでさえちゃんと押さえておらず時間のムダを読者に担保させるような書き方をする（そんな本は評価などできる訳がない）ただ、統計情報が少ない時は　収集　しない　こんな曖昧な書き方じゃなく、（更新情報１０％以内の時）ってできる限り一過性のある書きかたにすべきだろと思った。なぜなら、本にはFIND機能がない分時間がムダになりやすい、システム系の本は短時間でどれほどの量が学べるかが勝負な所も多いからだ
なれた方には、Oracleの専門用語のチェックに使え、初級者にはOracleの現場をくぐった後の復習に使えます。
13年ぶり？に仕事でOracleを触る事になったので、ほとんど忘れているもので購入してみました。一応、最初にインストール等、環境を作る所から丁寧に説明しているのですが、内容がOracle12cのインストールを前提にしているのに、重要な点が抜けています。コンテナDBと、プラガブルDBの説明がされていない為、書籍の内容に沿ってユーザーを作って、テーブルを作って・・・とやろうとするとエラーが出てできません。本当に初心者相手に説明するのであれば、SQLPLUSでの接続先がデフォルトでコンテナＤＢになっていること、デフォルトで作られるプラガブルＤＢをREAD/WRIGHTのステータスに確認(なっていなければ変更)し、ALTER SESSION で接続先をコンテナＤＢからプラガブルＤＢに切り替える事、SQLPLUSで最初からプラガブルＤＢに接続する方法、等の説明があっても良かったのでは？この辺、Oracle12cから大きく変わった点なので、仕方ないのかもしれないけれど。。概ね、不親切なのは最初のそこだけで、後は普通に入門書として有用かと思います。なので星３つ。
わかりやすかった
新人SEに対するOracleの教育について悩んでいる中でこちらの本を購入してみました。ひととおり読んでみて、全体的に丁寧に書かれている印象を受けました。専門的なキーワードを極力控え、「分かりやすさ」を重視していると感じました。評価したいのは、コマンドやSQLなどの例においてよくORA-xxxxxなどのエラーを発生させていることです。そしてなぜそのエラーが発生したのかもきちんと書かれているので、正常/異常のどちらも学ぶことができます。異常となる状況も経験しておくことで、トラブル発生時でも冷静に調べて対処できることに繋がると思います。また、個人的には時々出てくるColumn(コラム)がお気に入りです。dual表や、過去のOracle SQLでよく使われた「(+)」表記、その他にも色々なことが書かれています。先輩社員がなかなか教えてくれない（＝説明できない）話だったりもするので、本編ではないけれど、おすすめしたいポイントです。Oracleの本なのに、E-R図などの一般的なテーブル設計に関する内容が書いてあるのは、もしかしたら賛否両論があるかもしれません。ただ、データベースにおいて適切なレイアウト、サイズのテーブルを設計することは後々のトラブルを回避することにも繋がる重要なステップの1つであり、設計者や開発者がきちんと理解しておくべき大事なことであるため、私はこの設計の話を盛り込んでくれたことには賛同したいです。あと、第6章の中に「トラブルに立ち向かうためには」という内容があります。こちらはトラブル発生時にどのようなことから確認をしていくべきか、新人に伝えておきたいことがたくさん書かれています。こちらも一見の価値ありだと思います。1つだけ残念だったのは、Data Pumpに関して実行例がなかったことです。RMANに関しては十分に書かれていましたが、開発環境ではData Pumpを使うことも多いので、軽くでも書いてほしかったなと思いました。Oracleの基本を学ぶにはお薦めできる本ですね。OJTで教育担当をされる方も新人に「とりあえずこれ、読んどけ」って手が抜ける。。。じゃなくて薦められる本だと思いますよ。
私自身も共著で
おうちで学べるデータベースのきほん
という本を書いていますが、それよりもっとOracleに特化した、特化したことにより、具体的な記述にあふれたよい本です。私が特にいいと思ったのは、以下の部分です。・実行例でエラーの例も多くのせていること。(具体的なエラー番号とともに)・最新のバージョンの記述があること(11g以降でパスワードの大文字小文字が区別されるようになった、とか12cR1でのVARCHAR2最大値の拡張4000->32767など)・実行環境も最新(Oracle 12cR2 on Win10)で、実際にインストールし、手元の環境で試せること・Linux/UnixだけではなくWindowsについての記述もある(たとえばパフォーマンスモニター)こと・コラムで初心者に必要な追加知識、Oracle実装での違いなどに、うまく触れていることOracleのマニュアルや、新版の差分のうわっつらに触れるだけでは、決してできない丁寧なつくりを本一冊継続してまとめて提供しているところは、さすがコーソルさんですね。私自身の知識はとても古いOracle/MS SQL Serverと、最近のMySQL/Firebirdがメインなのですが、それと、最近のOracleの仕様をざっくり比較理解するのにも使えそうです。(本書の趣旨からははずれますが。。。)
渡部さんとは JPOUG などのコミュニティ活動で以前から交流があり、コーソル社の社内勉強会にも何度かお邪魔したこともあります。Oracle 関連のイベントにお手伝いに来られた新卒ホヤホヤの方と挨拶したと思ったら数年後には第一線の現場で一緒に仕事させていただいたりしていましたが、ITの知識がなかった新卒や中途入社の方が数年後には一流のDBエンジニアとして第一線の現場やイベントの発表などで活躍されていて、データベースを勉強するには最もよい会社の一つだと思っていました。そのコーソル社のエンジニア育成で培われたノウハウが詰まった一冊だと思います。敢えてアーキテクチャの説明を必要最低限に抑えて、Oracle Database をインストールして使いながら一通りの機能を使いながらウォークスルーする構成になっていて、コーソル社の育成の現場で培われたノウハウが詰まっていることが感じとれます。初心者が資格取得から始めると暗記科目のようになってしまい、業務で一通り触れてからとなると1年以上はかかってしまったりしますが、本書は初心者が Oracle Database を最初に学ぶ上での高速道路になると思います。また、ただの機能説明だけではなく著者陣の経験から得られたハマりポイントやなぜそうするかが散りばめられており、初心者ではなくても気づきがあるのではないかと思います。
仕事でAccessの導入を検討するにあたり、初心者用データベースの本として購入しました。PCはワードやエクセル程度しか使ったことのない私でちょうどよいくらいの本でした。
Accessをやろうとして、CD付テキストをこなして、いざやろうと思うと・・・できません。たいていの初心者は自分も含めて、そのような道を辿ると思います。Accessで何か実務をこなそうと思うと、とにかくまずはデータベースの知識がないと話にならない。という意味で、この本はお勧め。初版もさらに基礎的な解説が多いため、今でも十分役に立ちます。自分は両方読んで、ようやく基礎がわかりました。Accessを使いたい初心者にはまずお奨めしたい書籍です。
私は、もともとハードウエアのエンジニアでした。イギリスでMBAをとって英会話スクールを始めたのですが、その時から顧客管理と入金管理をエクセルで始めたのですが、限界がきて何かの解決策を探していました。実は、アクセスでデータベースを作っていたのですが、挫折していました。マイクロソフトのバージョンアップについていけずに、顧客管理と入金管理を諦めていたのです。ひょんなきっかけでこのデータベースの本に知りあうことができました。データベースの可能性、自由度、そして、運用方法などです。あらためて、データベースを作る気にさせてくれました。この本がなかったらさまよっていたかもしれません。結局、OpenOfficeのBASEでデータベースを作り、満足しています。
SQLという名称を聞いた事はあるけど、一体どんな役割を担っているのか？というレベルからでも十分理解し易いように噛み砕いて説明してくれています。最初から難しい専門書よりは概念をしっかりと学び基礎を付ける方がまずは重要だと思います。おススメです。
SQLを勉強する前にデータベースをざっくり知りたくて購入しました。同じ目的で買う人にはおすすめできます。
我家だけ、かもしれませんが、子供が一人で取り組むのが難しい様で、良く質問を受けます。親が問題を音読すると、子供は問題を解きやすいようです。学校の宿題の教科書の音読もあり、なかなか進みません。子供と関われる時間を楽しみたいですね。
子育てブログのレビューを見て購入しましたが、子供が勉強しづらいレイアウト構成、色や配置もぱっとしないので、初めての方には、あまりお勧めしません他にやるものがない方向けかな？
受験予定はないけど、苦手克服のため、早寝早起き朝5分→学研→Z会グレードアップ問題集と進みました。「学校のプリントが簡単になった♪」と自信を深め、もう1冊やりたいという本人の希望で本書を選びました。まだ3分の1程度ですが、主としてZ会との比較ですが、親としては別冊解答でなく解説が貧弱、ヒントが問題文のすぐ下にある（例題に関しては答えも同ページの下にある）ので使いにくい。子供も項目ごとの分量の差が大きい（本文と問題で10ページを超える問題もあれば、1ページに2問あったりする）ので、「今日は2問ね」というと「えーっ」となったり、100点満点式でない、色も黒一色等で、Z会の時よりモチベーションが低いようです。
教科書よりも難易度が高めです。ですが、解答例が分かりやすく、親子マンツーマンで教えていける良い教材と言えます。
コンパクトで、設問や解答に変なクセがなく読解の補強に便利。難易度も難しすぎず簡単すぎず適度。下段のヒントは、教える側にとっても大変有用なヒントです。解答の解説は類書に比べあっさりしていますが、物足りなさや違和感は感じません。受験国語の勘どころを子供に理解させるため、繰り返し演習したい問題集です。
他の方も書かれていますが、初心者やレベルの低い方には理解しにくい、読む人を選ぶ本だと思います。その分、システム開発に従事しているそれなりの経験者にとっては読み応えのある良い本だと思います。DBのパフォーマンス改善を行ったことのある人であればそのときの経験を整理して、知識化するのに役立つでしょう（私はそうでした）。本書の中で取り上げているテクニックについては、SQLの可読性を下げそうなものもあり、「最初からこういう風には書かないよな」と思うところがありました。それでも、必要にせまられたときを考えると引き出しをふやしておくのに役立つと思います。今まで気づかなかった（知らなかった）アイデアも多く新鮮です。要件定義やアプリケーションの設計を行われる方にもお勧めします。本書によってDBの基本原理を踏まえた上で仕様やモデルを見直してみると、気づくところが多いと思います。データ件数の見積もりや、画面帳票のイメージからでは分からない落とし穴を見つけるのにきっと役立つでしょう。
一言でこの本を説明すると"硬派なデータベースの本"と言ったところだろうか。この本は他のどのような本とも異なっている。RDBMSの内部動作を十分に理解することで、根本からDBの性能向上を図るための考え方の紹介に多くのページが費やされている。オプティマイザより良い最適化方法を見つけられるようになることでDBの性能を最大限に引き出すことを目的に書かれている。中級者が読めないこともないが、一般的に上級者であっても普通にパラパラめくってさらっと読むだけでは十分に内容は理解できないと思う。それなりに学問に励んだことのある人などには、通じやすいと思うが、その道の良書と言われるものの多くは能動的に自分の頭を使って考えながら読まないとまるで理解できない本が多い。近視眼的な答えやテクニックを教えるのではなく、本質を正しく理解するには自分で考えながら読む本の方が向いているから、必然的にそうなっている。難しいけど十分チャレンジに値する本だと思うので、自称"硬派"DBエンジニアにはお勧めします。
これは最高の良書です。「データベース＝ある土地、テーブル＝工場、索引＝生産される部品の一覧表」と、身近にあるものに例えて説明されているので、今まで、あやふやだった知識が一気に解決されました。誤字脱字は多いですが、それを踏まえても買う価値はあると思います。ただし、基本原理編とありますが、対象は、実務でチューニングをやられた方がなので、初心者の方は、別の本をお勧めします。
シンプルで分かりやすいテキストだと思いました。まだ全て読み切っていませんが、エクセルのスキルアップに向けて有効活用していけそうです。
初歩からとてもわかりやすく解説した本でした。会社の同僚にもススメたいぐらいです。
くどくど書いていても結局ためにならないではなく、さらっと書かれていてそれでいてしっかり要点は抑えている無駄のない本です。この価格で抽出と検索が学べるというお得な本ではないかと思います。
説明の表現が分かりづらく、何を言っているか理解するのに一呼吸必要な部分が散見される。また、手順は明確でも、実際の画面上でどういう式が入力されているか見たくなる時がある。ところがスクショの文字が小さくて見づらい。同著者、同出版社で、別の本はもっと見やすいスクショなり記述表現になっているのに、本当に不思議。そして、ダウンロードできるサンプルファイルを解凍するとトップフォルダー直下が_________________________2021_365____といった感じ。その中のファイル名もアンスコのオンパレード。本書の中のどのファイルがどこにあるのか探すのに苦労する。肝心の内容としては、あまり紹介されることのないフィルター機能の詳細はとても実践的で希少価値があるし、PowerQueryやスピルをデータ抽出の視点で活用事例を多数出している点は非常に秀逸。飽和状態のエクセル本市場でうまく企画された本だと思うだけに、是非、対ユーザーを意識した表現周りを修正して改訂版を早く出して欲しい。
フイルターや関数などで、ある条件で抽出したりするのに便利な本です。
エクセルの場合、やりたいことを実現するメニュー（プルダウン含む）がどこにあるかさえ解かれば問題は9割方解決する場合が多いのだが、この書籍ではエクセルのスクリーンショットが小さく、どのメニューを本文で説明しようとしているのかすら掲載画像からではほとんど理解できない。画面の中の数式を読み取るのも一苦労。本書は出来があまりに悪すぎる。文章による説明も読みにくいので、読者は、結局のところ、こんな本に頼らずEXCELの関連メニューを試行錯誤して探索するか、Keywordを検索してWEB上にある解説を拾っていくしかない。（その方が結局は早い）技術評論社ともあろうものが、これほど低レベルな書籍を発行してはならない。
表から探して、こんな表に抽出した資料を作る...というのは一見簡単な作業に見えるが、共有フォルダが原因なのか不明なまま、なぜかうまくいかず時間の浪費にイラッとすることがある。そんな時に、ほかの機能が色々あることを知っていたら、イラッと気分も解消され作業も捗るわけで 非常に助かる。その方法を教えてくれるのが、この一冊、これだけでいい。フィルター・関数・パワークエリ等を巧みに織り込んでいるので、難易度の高い「抽出」作業のときも、これほど方法があるのかと感心しながら 業務の時短ができるようになった。これさえあれば不安知らずで作業を進められるので、業務中は手放せなくなってきた稀少な良書。抽出で手こずっている方には、是非ともオススメしたい。
データの抽出作業がわりと多いので、研修用に使いました。とてもわかりやすいようで、大満足です。
スキル低い方にもわかりやすく簡潔にまとめられており実務への応用がしやすいと思います。図の使い方とボリュームについてもちょうど良いです。
どうしてもうまく抽出できない表があり、コピペに走っていた作業が嘘のように楽になり、非常に参考になりました。
SQL クエリのパフォーマンスチューニングについての情報は特定のデータベースの実装に依存することが多いですが、どの実装でも役に立つ知識および考え方が書かれている上に実行計画の読み方など実装ごとに異なる部分が説明されており、横断的に学ぶことができます。このような希有な内容でありながら200ページ程度とコンパクトにまとまっていることもあり読みやすく、広くおすすめできる書籍です。
こういう内容はネット記事などで読むのが適していて、紙の本で買って真剣に読もうとは思わない。出かける時の合間に読むにはいいのだけれど、内容と本のサイズを考えると外に出る時持ち歩くこうとも思わない。ところが電子ブックの中に入れて持ち歩いて、ちょっとした合間に読むには、決して専門的ではなく、気軽に読み流せる内容なので、いろんな選択肢の中から移動の合間に読むという形には、すごく向いていると思う。決して深くはないけれど、IT系に限らずエンジニアの教養、基本リテラシーとして、この程度の知識・感覚は身に付けておいた方がよい内容がまとめられていると思う。
いわゆる資格取得のための本は、機械的な説明ばかりで本質的な理解とはだいぶ距離があると思いますが、この本は様々な仕組みや機能がどのようなメリットを生んでいるのかについて語られていて素晴らしいと思います。例えばOSが異なるハードウェアに対してどのような役割を果たしているか、など。色々な仕組みに対する視点が変わると思います。
ITエンジニアにとって10年後も通用する本物の力が身につくという謳い文句の本著。「ビジネスとIT」，「コンピュータ」，「プログラミング」，「ネットワーク」，「データベース」，「セキュリティ」，「人工知能」の7章構成で，IT時代の常識を凝縮した一冊となっています。解説には図が多く使われており，イメージしやすくなっています。索引を使って専門用語の用語辞典としても使うこともできると思います。個人的にはたくさん存在するプログラミング言語をどのように考えて使いこなしていけばよいかという点が勉強になりました。今やIT技術はインフラとして存在することが当たり前の時代になっており，ITエンジニアでなくともここに書かれていることくらいは認識していた方が良いと思います。
初心者に優しい教科書でした。サンプルコードを書いて練習してました。たしかに見た目や内容は固いですがきっちり説明されているのでおすすめです。
各言語に関して、あまり深くはまではいかないが基本は必ずおさえられるよう書かれている。プログラム言語をどれか一つでもやったことがあれば、特に難しいことはないと思う。構成順序も良く説明もきちんとかれているので、ひとりで勉強できる教科書といった感じがする。他の方もレビューで書かれているがMySQLで非推奨になっている方法で説明がされているのでphp netでドキュメントを確認した方が良い。それでも、どのようにPHPからMySQLへどのようにアクセスするかなどの概念はわかると思う。（そもそも、そんなに難しくはないが）この本で基本をおさえれば、後のステップアップはスムーズになると思う。
オライリーの初めて系の本です。例にもれず初めてのという割には、突如としてINSER文が例に出されたりとか、気がついたらオブジェクト指向の説明に入ってたなんていうのはザラです。他の言語を勉強していて、それで”初めて”Webプログラミングをやろうって人にはオススメです。Webプログラミングで抑えるべきパスワードの暗号化やソルトなど、他の初心者本ではさらっと流されていることがちゃんと書いてある点は流石オライリーだと思います。情報も結構新しいですし。一冊終わらせればある程度のプログラムは調べながら独力で作るだけの力は付いていると思います。ただ、やっぱり日本語は何かがおかしいし、構成的にちょっと読みにくい？って感じる部分はあります。初心者が一番引っかかるオブジェクト指向などもさらっとなので、オブジェクト指向に関しては他の言語で学んでいるとすんなりと入れると思います。データベースに関しては、案の定初心者向けのことは書いていません。やはり、データベースが何であるかとか、データベースの基本構造のことがちょっとわかってないとキツイかもしれません。あくまでもプログラミングをある程度経験した人がWebプログラミングに手をだすための本です。Javaやデータベースを触ったことがあり、Webプログラミングにも手を出したいと考えている人は是非読んでみるといいと思います。
MOSの試験を受け続けています。後アクセスに合格すれば、マスターという所まで来ました。全てFOM社のテキストで合格しています。アクセスを基礎から勉強する方には良いと思いますが私のようにただスペシャリストに合格するためだけなら必要ないと思います。エクセルを理解していれば応用、基礎は飛び抜かしてスペシャリストのテキストを購入することをお薦めします。アクセスの仕組みをしっかり理解しようと思われる方には必要かと思われます。
言語にしろ、DBにせよ、現場でなれるという学習法もあるが、なにか１冊の本を最後までやりきるというのも、結構役に立つ。眺めているだけではだめで、実際に手を動かして、演習問題もとけば、それなりになんとかなる。
娘が独学で２級に合格。
すぐわかる
Accessの初心者用の本は、FOMさんの基礎編、応用編と「Access管理システムかんたん入門」、「Accessデータベース本格作成入門」を持っています。応用編は、基礎編に足りない部分は埋めてくれます。基本編同様、わかりやすいです。基礎編ではあまり出てこなかった関数の説明やサブフォーム・サブレポートを学ぶことができます。しっかり、マスターできたら、その後に「Access管理システムかんたん入門」を読むとFOMさんの応用編のサンプルをアレンジしたくなるはずです。これも基本をマスターしたからこそ、できることかなと思いました。
基礎編と一緒に購入大変よく理解できました。音声解説が欲しい。
内容は基礎編の続きで分かりやすい。しかし、曲がって届いた。本を使う上では問題ないし、本の内容に不満はないが、気持ちのいい買い物ではなかった。大きめの本は、アマゾンでは曲がって届く可能性があることを考えさせられた買い物だった。
ChatGPT✕Canvaすごい時代になりましたね。図解付きでわかりやすく、今後、Canvaでいろいろなものが、短時間でプロ並みに作成できる事もわかり、Canvaの魅力が伝わってきました。
ドラえもん世代は、この時代がやっと来た私は喜んでました！でもまだ怖い方がいるとかいないとか？だったらこの本を読むことお勧めしますとってもわかりやすいですよ
ChatGPT×Canva、マジで超簡単に作れますね！しかも難しいスキルが不要で作れるのが優秀ポイント！写真を撮らなくても、画像を作ったり買わなくても、ボタン1つでAI画像が作れる。すごい時代になりましたねぇ〜。
初心者向けで大変わかりやすいと思いました。どこからはじめて、どの順番でしていくのかがつぶさに書かれてあり、とてもよかったです。文字の色で黒地に赤字はちょっと見にくいかなぁとそこだけ気になりました。
Canvaの使い方をマスターすれば、電子書籍はもちろん、色々活用できそうですね。とても勉強になりました。
chatGPTやcanvaの使い方が基本から書かれてあって、あまり、知識のない私でもよくわかりました。お勧めします。
ズボラで、簡単にマネタイズできるのは、魅力しかないですね！AIが急激に広まり、明るい未来が、まってますね！
色々とやり方の図解がありイメージしやすかったです。初めてやる私でもそれなりに形になりました。今後練習していこうと思います。
ChatGPT × Canvaは、初心者でも使いやすい最強のツールですね！本書を読めば初心者の方でも、使いこなせるようになると思います。Canvaを使用した画像作成方法も参考になりました。ありがとうございます！
canvaへの登録方法から画像作成方法まで、とても細かく説明されています。さらにchatGPTを組み合わせて書籍作りを時短する方法も！書籍を作ってみたいけど…センスがないし、文才がない…と悩まれている方の悩みが解決されるんじゃないかなと思いました！オススメです。
のがいいかと。Excelの例文集もあるけど、会員登録するのがな～。
わかりやすく素晴らしい
マクロを覚えたくて、予備として購入。実際のテーマが無いので致し方ないと思うが、それぞれのテーマが異なるから見本があってもしょうがないかな。悪くはないと思います。
この関数はどのような意味かをダイレクトに調べられる。仕事では一から何かを作るということはなく、過去のファイルを調べることから始まるので、関数があった場合、それがどのような意味を持つのかを関数そのものから探すことが多い。この本は目次で第1章数学/三角関数などまとまった調べ方と、関数名インデック順（アルファベット順）の二通りがあり、非常に調べやすく重宝している。星4つは、最近SLOPEを調べたとき、y=ax＋ｂのaだと単純に説明してあれば分かり易かったのだが、好みの問題であると思うが、説明が回りくどく思えたから。
まさしく、王道。ごくごく当たり前の内容です。特質すべき点はなく、実社会の業務で即戦とはなりません。関数の基礎を学ぶ為の辞書です。
内容はしっかりしたもので確実に使える物になります。ネットで調べるより簡単に出てくるのでオススメです。問題は1関数に片面だけなので説明が多く必要な関数に関しては説明不足が否めません。そう言う関数はページ数を調整して見開き1ページとかにした方がよかったですね。あと、?とか*の正規表現が使える関数かの記述と関数を使用したときに出てくる答が数列か文字列かが見て解るようにしてくれると尚よかったかと思う。
より多く載せるためか、一つ一つの説明がそっけないというか不親切な点が目立つ。初心者・中級者には少し取っつき辛いかも！本来分かっていてメモ代わり、備忘録としてなら良いが使いづらい。
SUMIF関数が知りたかったが、この書籍の説明では分からなかった。
名前の通り全ての関数を載せているのでどういった関数があるかということは知れます。しかし使い方の用例は参考になるものが少なかった印象です。中〜上級者の方で更に関数に詳しくなりたい人なら参考になるかもしれません。
たとえばSUMIFで、引数と説明の色の対応がおかしなことになっている。合計範囲のピンク色の下線がなぜか検索条件の「"<>土"」に引いてある。実用に耐えるかどうかは今後の改版次第か。　欲を言うと、引数とセル図を対応づけるだけでは図として不足だと思う。このSUMIFの例で言えば、670という数字がどのセルの合計なのか、なぜそのセルの合計になるのかを、言葉だけではなく図で表してくれたらなあと思う。SUMIFが比較的わかりやすい関数なので例としては不適切かもしれないが、それが感想。
２０年近くまえ、会計処理のチームの管理職をしていたときに、業務の効率化のためにアクセスを猛勉強した。仕訳の全データをCSVで吐き出して、そこから会計システムでは作成できない帳票を自動作成したり、仕訳の摘要欄の入力内容のチェックをしたりする際に、アクセス＋VBAが強力なツールとなった。最近になって、DX戦略という言葉が流行する一方、RDBの知識がほとんどない若手に基礎的な事を教えてあげようと思い、そのために本書を購入した。最近のアクセスの画面を理解し、リレーションの作り方を思い出したいというニーズにはぴったりだった。題名にもある通り、本書はアクセスの入門書ではなく、アクセスを軽く紹介しながらRDBの極く基本的なところ（＝SQL）の導入レベルの内容にとどまっている。誤字もあり、若干不親切な説明も多いので、私のような経験者でないと挫折してしまうかもしれない。私にはとてもフィットしたが読む人を選ぶと思う。なお、経験者の思い出し用ということであれば１日か２日で読了できる。
とても分かりやすいです。最初の一歩に最適と思います。
カバーがスルスルすべるので、持っていると疲れます。またページをパラパラめくろうとすると、失敗しやすいです。内容は他の本に載っていないような、サポートに教えてもらうようなレベルのことが載っていると思いました。ただし、レスポンス対策の３割から半分くらいは、エンタープライズ版でないと対応できない手法でした。
１００の技といいつつも、Oracleやってる現場では当たり前な内容が多く、私の職場では70%程度は実践済でした。まぁ、情報の整理としては良いかも。
現場で、ORACLEデータベースを管理しています。数Gから数TByteクラスのものまで、様々なものを管理しています。何かあれば、サポートとやり取りすることが多いのです。この本にはサポートに問い合わせないと教えてもらえないことが書いてあります。普通の本だと書いてないことが書いてあり、本当にヤバいことがあった時に役に立つ本だと思いました。特に、共有プールなどのメモリについての解説は、一読の価値があります。動的メモリ管理で自動変動するPGAサイズが、実行計画に影響を与えることもこの本を読んで初めて知りました。システムがスローダウンしたり、障害を起こしているとき、どういうSQLを投げれば、どういう機能を使えば、原因が分かるかTips形式でまとまっているのがいいです。主に、11g,12cが対象ですが、アーキテクチャの話は、過去のバージョンでも役に立つ内容だと思いました。SPMについては、一度も使用したことが無かったので、他の本やマニュアルを読んでも、どんな時に使うのかピンときませんでした。この本には、どういう時に使えばいいか書いてあり、使用目的が分かったので理解できました。ORACLE社や、サポートセンターにいる方が書かれた本なので、内容的には信頼できると思います。内部的な仕組みについての解説や、障害復旧についての対応方法も、著者の経験をもとにかかれているので、分かりやすいし、納得できます。個人的には、自分が過去に経験した障害のことについて、どう対処したらいいか書かれていて、あの時、大変だったなあと思いだしながら読めたのもよかった。
この前の2年間、小林先生と同じ現場で仕事をしました。小林先生のお世話になっておりました。
この本の説明にあんまり気に入らないんです、ちょっと理解しにくくて実用性が高くないです
表題の通り、OracleDBの実践的なテクニックが詰まった良書です。Oracle Database はマニュアルが充実していて、一通りのことはマニュアルを読むだけでも出来てしまうのですが、出てくる情報の活用方法やコマンド・DBMSパッケージなどのサンプルが不足していて、それが悩ましいです。本書はそう云ったマニュアル類の不足を補う、良書だと思いました。本当はこう云う書籍を買わず、マニュアルだけで理解できると良いのですがｗｗｗ
現場で使えるテクニックが分かりやすい例と語りで著者の実体験を元に紹介されており面白いです。
私は数年のOracle Databaseサポート業務経験をもつOracle Databaseエンジニアです。著者の一人が知人です。Oracle Databaseは非常に多くの機能を持っており、全ての機能を使いこなせているエンジニアはいないといっても過言ではないでしょう。そのため、現場の課題を解決するために、知らない機能について適宜理解を深める必要がしばしば出てくるわけですが、残念ながらOracle Databaseのマニュアルなどの公開情報でカバーできる範囲には限りがあります。機能の細部や実運用を踏まえた活用法などについては、検証や実運用などを通じて体得する必要があり、これが現場のエンジニアを悩ませていることもあったかと思います。本書は、別の現場でのそのような課題に対して、日本オラクルの一流のコンサルタントが顧客に対してプロフェッショナルサービスを提供する中で得られたノウハウの一端がまとめられています。あくまでも現場の課題に対する取り組みの過程で得られたものであり、単なる「詳細な知識の開示」ととどまっていない点が本書の最も素晴らしい点です。紙面で説明しきれない点については、マニュアルの該当箇所やMy Oracle SupportのドキュメントIDを紹介している点も誠実な姿勢であると感じます。また、私は数年のサポートエンジニア経験があり、Oracle Databaseの知識にある程度自信を持っていましたが、それでもこの本で初めて知ったことが多くありました。これだけのノウハウを蓄積するには、非常多くの努力と経験が必要です。現場での問題解決に役立つことが裏付けられたノウハウを簡単に得られる本書を、Oracle Databaseに関わる現場エンジニアの方に対してお勧めします。最後に、私が有用または面白いと感じた「技」をまとめておきます。（一般的なデータベースの運用観点中心でリストアップしました。→は私のコメント）16　システム開発でのSPM導入の勘所　　→単なる技術にとどまらない導入推進の観点でのノウハウであり、導入時に大いに参考にできる17　スピーディにトラブル原因を切り分けるテクニック　　→ 例とはいえ、「図2.1 性能遅延切り分けフローの例（現在遅延発生中の場合を想定）」が大いに参考になります19　インターコネクトのボトルネックを見つけ出すパフォーマンス分析のコツ　　→具体的なコマンドや統計値まで記載されており、利便性が高い24　SQLが遅いと感じたときのチェックリスト　　→チェックリストが具体的であり活用しやすい32　SQL性能分析情報を簡単に取得する　　→ My Oracle Supportで公開されている有用なツールSQLHC, SQLLTの紹介34　自動メモリ管理機能の使いどころを理解する　　→ 具体的なシステムの特性に応じて自動メモリ管理機能を使用すべきかをある程度明確に整理35　自動共有メモリ管理機能の調整ルールとIMMEDIATEモードを理解する　　→ ブラックボックスとして捉えられがちな自動共有メモリ管理機能に関する有用な説明37　共有プール設計の勘所　　→ 非常に詳細な設計項目が提示されており、有用41　PGA_AGGREGATE_TARGETが実行計画に与える影響　　→ 意外と知られていない実行計画変化要因の１つを紹介42　ラージページで大規模メモリ環境でのトラブルに対処する　　→ ラージページの細かいノウハウがまとまっており有用44　索引の作成順番が実行計画に与える影響を理解する　　→ CREATE INDEXの高速化テクニック（知らなかった！）45　意図しないパラレルクエリの実行を防ぐ　　→ 意図せず並列度が設定される落とし穴を避ける方法46　削除処理の高速化テクニック　　→ 検証をベースにした高速化テクニックの紹介（意外な結果！）60　データベースの状況をリアルタイムで把握する　　→ My Oracle Supportで公開されている有用なツールoratopの紹介66　アプリケーションサーバーとデータベースサーバー間で発生した無効接続を検知する　　→ 意外と知られていない無効接続検知機能の紹介。12c新機能も併せて紹介67　簡単にインデックスの効果を検証する　　→ インビジブルインデックスの活用方法を紹介72　外部表を使ってcsvファイルをSQLで扱う　　→ 意外と知られていない外部表の紹介74　バッチ処理の進捗状況をログ出力する　　→ 自立トランザクションの思わぬ活用方法（なるほど！）75　調べたい内容が書かれたマニュアルを効率的に探す方法　　→ 非常に機能が多いOracle Databaseを使いこなすためには、マニュアルと仲良くなる必要があります。ここで記載されたテクニックはその際役に立ちます
最初に書いておくと、私は著者の関係者で同じ職場です。だからこそ分かるこの本の売りを紹介したいと思います。通常は現場で伝承されるようなノウハウを本にしたという点で価値ある一冊だと思います。一般書をトラブルの現場で開いて見ていると、たまに白い目で見られますが、この本はそんなことはありません。ベンダーからもらったスクリプトは現場でも使用します。自分が良く使うコマンドもスクリプト集にしたりしませんか。それを考えれば、この本は現場でこそ見るべき、そしてコピペするべき本です。こういう本こそ電子書籍として、パソコンの中に入れておきたいと思いました。マネージャの皆さん、この本を部下がトラブル現場で見ていても怒らないであげてくださいね。実際の効果として、トラブルが数時間短縮される、とか、作業が数時間短縮されると考えれば、この本は安いと思います。SPMや待機イベント、実行計画といった分野で実際に使われているワザが最新の方法で紹介されています。ノウハウはブラッシュアップしないと古くなります。Oracle8や9iといったバージョンでノウハウを学んだ人にも読んでもらいたいです。また、マニアックな検証とその謎解きもいくつか含まれていて、往年のオラオラオラクルの連載として楽しんでもいいと思います。
この本を一言で言うと「オラクルコンサルタントのノウハウモロ見せ」です。困った時の辞書として、現場に置いておくと必ず役に立つ一冊です。本のタイトルはTips集ぽいですが、一つ一つの技が深く濃く、これで2,980円はお買い得だと思います。
単にコマンドや機能を紹介するのではなく、なぜこのように機能するのか、なぜこうなるのかという基礎原理や仕組みを理解させようとするスタンスの入門書です。また、本書の特徴として最新版のOracle(11g）だけでなく旧バージョンの複数Oracleにも言及しており新旧幅広く対応可能となっています。　職場では旧バージョンを使っているがような場合、最新のバージョンだけ勉強しても現場ではあまり役立たないし、かといって現場の旧バージョンだけ勉強しても最新バージョンになった際にまた勉強しなおしだし…というジレンマから開放してくれる良い本だと思います。Oracle機能の遷移を学べるので、旧バージョンから触ってきたDBAのような知識を身につけることができると思います。
Accessの解説本は、書店でも多くの類書をみかけます。この本の良さは、すべてを網羅しようとせず、初心者がAccessの機能の片鱗に触れることが可能なように配慮されている点にあるかと思います。個人的には良書だと思います。この本を読んで「自分でもAccess使えるようになるかも？」と思えるようになりました。今はAccessを用いた業務改善のことを考えるのが楽しく、もっと前にこの本で出合えていたらという気がしています。今まで、Accessの解説本を何冊も購入しては挫折していましたが、そういうご経験のある方にはおススメだと思います。
全体的に絵もあり、読みやすい。初心者向きです。
他のAccess2019を購入し、２冊を比べて見やすくて分かりやすい方を職場に置くつもりでした。こちらは中身が緑と黒とグレーで説明やグラフが書いており、ただひたすら文字を読んで、グラフなどを見て、言葉や文字が頭に入りずらかったです。もう一冊の方は赤や青などカラーで書かれていたので"これは大事！"だと言葉が頭に残りやすかったです。こちらは文字で読み込んでいく事が得意な方は良いですが、私のような視覚から文字が頭に入るタイプは向かなかったように思います。ただ内容はもちろん要点を得ているので、出来れば店頭で一度手にとって、パッと見た印象で違和感がなければ大丈夫だと思います。
本当に良かった。この本を読んだ後、ネットで少し調べるだけで、作りたいデータベースが出来た。
アクセスは独学で学んだため、自己流な使い方しか知らなかったので、一般的な正統派の使い方を確認するために購入。アクセスのお決まりのパターンの使い方がわかった。
とても理解しやすく、また躓きそうなところには復習ポイントを入れていただいていたりしたため、問題なく演習も進めることができました。
会社でDB管理をする様になりましたが、まったくの未経験で概要がわかり、かつ実際のコードなどが記されているものを探していました。概要把握とほんの少しコードを理解したい人にはいいのではないかなと思います。ここを足がかりに次はがっつりコードが載った本を買い現在勉強中です。
新品で購入しましたが、カバーの角がよれてたり傷があって、本当に新品なのか怪しいです…。
現在CakePHPは下火だが古いアプリの保守のために購入した。とても役立っている。
サンプルコードが多く載っているapiのチートシートがある全体的にある程度網羅されているCakePHPに一旦触れてから、補足知識として使うといいかと思います。
パーフェクトＰＨＰでフレームワークで躓き、この本を購入しました。初心者には複雑な内容で頭が混乱しつつも何とか読み進めています。しかし初心者用の入門書ではないのか、とても丁寧な説明とは言えません。（初めての方にも、と謳ってはいますが・・・）もし私と同じような初心者の方であれば、ある程度自分で調べる事を覚悟した上で購入されるのであれば問題ないと思います。
入門書としてはあまりにも説明が不足していると思います。ある程度理解している人向けでしょうね。
ケーキさんの本は少ないのですが、この一冊で困る事はありませんでした。実際、開発は3でするでしょうが概念の理解はコレで。
機能が一通りまとまっていますが、マニュアル読んでネットで調べたほうが良いと思います。
まだ、使いきれてませんが、とても参考になりまりた。これからも愛用させて頂きます。
レビューを見て購入しましたが、あまり役に立たないです。初心者が躓くような部分の解説はなく、中級者には物足りなく、全体的にざっくりと書かれているので、どのレベルの人にもうーんという内容です。この内容でこの金額は高いと思います。
6人の著者がそれぞれの分野で思い思いのことを書いてるだけなので、情報が四散してまとまりがない。入門用というより、一通り学んだ者がコラム的に読んで知識を肉付けする、そんな内容。リレーコラムやブログであったらそれでもいいと思うが、「実践入門」を語る書としてはいささか心許ない。各著者は著名な方ばかりで期待していただけに、残念。
プロパティグラフデータベースの利点が理解できるように書かれており、その点について理解が捗った。中盤、Neo4jのcipherクエリやAPIの説明が初学者には粗く感じられ理解しずらかったのがマイナス点。もっとCipherやAPIの説明にページを割いてほしかった。
そのまま、OS、ストレージ、ネットワークを介してデータベースがどのように動いているかがわかります。情シスにとって必須知識だと思います。説明も平易な言葉で非ITでも簡単に読めます。
利用に問題無し
データベースの本などは沢山ありますが、この手の本はなかなかないかなと思います。わかりやすい構成ですし、内容も面白いです。
焼けはありましたが了承の範囲です。読めますし。きれいな本でした。配達も予定通り届きました。
読むのに30時間ぐらいかかったと思う。新人の時(6年前)から何度も途中で諦めたりした本。OSやストレージ、DBMS、ネットーワークとシステム周り全般のボトルネックがどこか、リソースをどう使っているのかなどをコマンド実行レイヤ、絵を通して詳細に解説してくれている。個人的には詳解システムパフォーマンスの前に読んでおくと良いのではないかと思った。内容はオンプレミスのシステム前提で少し古いので、今のクラウド時代での内容に即した内容ではどうなるか気になるし、どんな本がそれにあたるのか気になる。このような本読みたい。
OS/ストレージ/ネットワークの専門書はあるけど、結局何が肝かよく分らなかったという人は多いと思います。この本は著者のOracle社でのトラブルシューティングの経験を基にOS/ストレージ/ネットワークでどの部分がボトルネックになるか、どうやって原因の切り分けを行っていくか、そもそもどういう仕組みなのかを図を使って説明しています。LinuxやOracleの動作だけでなく、WindowsやDB2、そして最新ストレージの特徴をも記述されており、多数あるColumnではどの部分にはどういう障害が多いかなど実践的な内容が書かれています。障害時のソケットエラーに関する記述が無い等、少しネットワークの記述が浅いかなという感もありましたが、この本の内容をすべて把握出来ていればITスペシャリストとしては申し分のない活躍ができるのではないでしょうか。中級者以上の人にはぜひともお勧めしたい本です。
私はネットワークエンジニアですが、非常に役に立つ本だと思います。サーバーがあまり詳しくないので、システムの理解がいまいちだったのですが、この本でばらばらの知識が一つにつながりました。ネットワークはデータを運ぶための存在だということを再認識した次第です。データを統括するデータベースからシステムを眺めるとこんなにも全体が理解しやすくなるとは！それぞれの分野に経験と知識を持つ筆者だからかけた本ですね。データベースエンジニアだけでなく、これからサーバを学習して、インフラ全体を扱えるエンジニアになりたいネットワークエンジニアにも強く勧めます。
既存の本では、それぞれの視点(OS/ストレージ/ネットワーク)に注力したものはありましたが、この本はそれにのっかっているアプリとしてのDBから、それぞれがどう見えるか、といううまいまとめ方でそれぞれを説明した本。薄さのわりにはこれらをうまく俯瞰することができます。連載時には汎用的なDBとして説明していたもの(DBマガジンの連載)を、書籍化する際に付録としてOracleに特化した補足がついているのもGood ! DBの仕組みを一通り理解し、システムに目を向ける際にオススメできる良書です。惜しいのは本の大きさが小さいため、図版のうちでも書き込んだものは、やや見にくいところですが、それを差し引いてもオススメできる良書です。
【感想】DB担当はまずはDBを中心に勉強をしますが、その次のステップとしてとても便利な教材です。DB周辺の知識を身につけるととても視野が広がりますが、OSやNWの本を個別に勉強しているとちょっと非効率だなぁと感じる中、この本はとてもいいと思いました。特にDB技術者としての観点で記述されている点がうれしいです。また、OSもUnix系（Linux含む）とWindowsそれぞれについて解説してくれている点もとてもいいです。【読者に必要な前提知識】ただし、「DB担当向け」ということもあり、ある程度のDB知識は必要になります。Oracle Masterの資格で言うところのSilver程度あれば十分でしょうか。OSの知識はsar,vmstat,netstatを使ってみたことがあって、何をするためのコマンドかを知っていればまずは十分です。Windowsであればパフォーマンスモニターを知っている程度で。それらをどのように見るべきかはこの本に記載されているのでまずはこの本で勉強すればいいでしょう。もちろんこれらの前提知識を大きく上回る人向けにもTips的な内容も含まれているので、レベルとしては幅広い読者に受け入れられると思います。
DB管理者として5〜10年経験を積むうちに肌感覚としてつかめる知識が、とてもよくまとまっています。これらの知識を正攻法で得ようとすると最終的にLinux KernelやオープンソースRDBMSのソースを読むハメになるので、この本を使うことでそれにかかる時間を大幅に短縮できます。個人的には知識の整理という部分で役に立ったのと、あと「絵で見てわかる」部分がとても良かったです。社内向け資料に図表をずいぶん引用させていただきました。ありがとうございました。また、入社3年目でORACLE MASTER Goldの後輩にこの本を渡したところ、目からうろこが落ちたそうで、大絶賛していました。ちょうど一通りのIT知識がついたところで、いよいよ主力として働きはじめるあたりのメンバにこの本を渡すと良いみたいです。
ちょっと内容が薄い。算数の図形、文章題と比較すると内容が簡単すぎるので受験には満足する内容ではないです。
本書が執筆された時点(2016年4月頃)での最新版であるPHP 7.0に沿って記述されています。現在(2021年3月)は、既にPHP 8.0が正式リリースされています。また、PHP 7.xの最新版はPHP 7.4です。最新のPHP 8.0には新機能や下位互換性のない変更点も含まれることに留意しておく必要がありますが、言語の構造・用法が根本的に変更されてはいるわけではありませんから、教本としては十分に使用することができます。初学者の方は初心者向けの本を終えてから手を出した方が無難な難易度です。他の言語の知識・経験がある方であれば、楽に読み進められると思います。私は散々迷った結果、紙の本とKindle版を両方購入しましたが、読みやすさとリファレンス性で紙の本に軍配を上げます。いずれ第4版が出たらきっと紙の本で買い替えるでしょう。
私自身は簡単に感じましたが、読む側の基本的な知識がないと分かりにくい内容だと思います。IPAの情報処理技術者試験である程度の知識があって、かつ別の言語を一つでもやったことがある人にとっては単語の意味も分かりますし、機能は大体同じで少しだけPHP特有の機能が書いてあるくらいの本です。PHPだからといって、基本はオブジェクト指向の言語なので、そこまで大きな違いにはならないわけです。まったく知識がない人がいきなりこの本を読んだ場合、理解できない内容でしょう。もちろん易しい表現で書いてありますが、紙面の都合で全部を事細かに解説することもできないでしょうし、ある程度の知識があることが前提に書かれているように感じます。
個人的にこういった技術書は紙の質や本の構造が大事だと思っております。悪いと、中身がどんだけ良質でも開いたままにしてタイピングし辛かったり、めくる度に「キィキィ」鳥肌の立つ音がなったりでそれだけで読む気がなくなります。こちらのシリーズは紙が柔らかくめくりやすいですし、開いたままにもしやすいです。内容は広く浅くといった感じです。Mysqlの簡単な命令文、オブジェクト指向の基本のプログラムまでしっかり書かれております。この本でとっかかりを作り、あとは必要時に公式ドキュメントで調べていけば、現場では困らないのではないでしょうか。ただ、本書の例に使われている変数名ですが、現場にもよりますが私の現場では「このような意味のない変数名は付けないで」と注意されてしまったので、独学でされている方は変数名の付け方のセオリーも合わせて調べておく方が無難だと思います。
先日のPHP5技術者認定初級試験に高得点で一発合格した者であります。この対策としてアマゾンで購入した参考書を羅列すると「独習PHP第2版」「よくわかるPHPの教科書」「PHP＋MｙSQLマスターブック」「初めてのPHP5」「基礎からのMySQL」「PHP5技術者認定初級試験合格教本」「PHP5技術者認定初級試験問題集」の7冊で、これだけ読めば初級試験など落ちるはずがないだろうと思われるだろうが、そのとおりである。ところが、これらのうち「独習PHP第2版」だけは最初ちょこっと読んで放棄した。その理由は当該本のレビューにも記載したが、自らのPC知識不足が原因であった。さて、件の初級試験になんとか合格したので、現在、気楽な気持ちで本書「独習PHP第3版」を読んでいるが、上記に掲げたPHP参考書群の中で、本書が一番優れた参考書であると思う。なぜならば、PHP言語の細かい部分までページを割いて丁寧かつ掘り下げて説明してくれているので、読んでいて実によく理解と納得ができるからである。だが、章末問題は解答を見てしまうことが多いが、結構難しいからである。所詮、PHP5技術者認定初級試験合格の実力などこれくらいのものなのか。以上、本書はPHPの入門書としてはちょっとレベルが高いので、小生のように少々かじった初級レベルの者が、PHP言語をもう一度最初から正しく学習し直すために使うべき基本書であると思われる。ところで、例題リスト6.40の「gen_prime.php」ですが、if( $value % $i === 0 ){ return false; }ではありませんかな？
私はこれまでWebアプリの開発環境としてASP.NETを勉強してきました。最近Webサーバサイドスクリプト言語としてPHPのことをよく耳にするようになりました。PHPは中小型のWebサーバでよく利用され、Webサーバソフトウェアとして最大のシェアを誇るApacheとの親和性が高いということです。　そこでPHPの勉強をするための本を探しました。本を何冊も読むのは時間の無駄なので、PHPの書籍の中で価格が高く分量も多い本書を購入しました。　本書を読めばPHPの仕組みについて一通りのことが理解できます。PHPの全体像を把握するには本書一冊で十分だと思います。PHPはC#などのオブジェクト指向型言語とかなり類似点があります。ただ微妙に異なる仕様も多いので読解に時間がかかりました。　個人的には次の箇所が印象に残りました。・第10章「オブジェクト指向構文」におけるアクセサメソッド、インターフェース、トレイトの説明　これらはPHPだけではなく他のオブジェクト指向型言語に共通する技術も多くあります。私もこの説明を読んで他のオブジェクト指向型言語で理解があやふやであった点が明確になりました。・第11章「セキュリティ対策」における各種脆弱性とその対策の説明　近年特にセキュリティ対策の必要性が高まっています。サーバサイドとしてはセキュリティに配慮したサービスを提供することが必須です。　本書ではPHPの仕様について疑問点を一つ一つ解決していくような形式で平易で丁寧な解説がなされています。PHPは独自の仕様も多くとっつきにくい点もありますが、著者の丁寧な解説に従い読み進めていけば必ずPHPの仕組みを理解できると思います。
PC歴は長いのですが、恥ずかしながらプログラミングは未経験です。PHPの知識がないとWordPressのカスタマイズ内容が理解できませんので、レビューされていた内容を参考にして購入しました。読み始めて間もないのですが、感じたことを書かせていただきます。まず最初に、表紙を含めて「紙が柔らかい」ことに驚きました。例えば、本を広げた状態で前半の30ページ付近で折り目をつけたとすると、今まで私が購入した書籍の殆どは本を閉じた後は必ずと言ってよいほど表紙や前半のページが浮き上がるのですが、この書籍は表紙を含めてほぼ平らに戻ります。本文の文字が小さめなのと、小見出し（1.2.1 ●●●）がページの最終行付近で始まるものが有るのですが、これはページ数の関係もあったと思いますので、やむを得ないですね。全体的に文章がとても丁寧で、優しく語りかけているような表現で、とても理解しやすいです。今まで何度かプログラミングに挑戦し、途中で内容を理解できなくなり挫折しています。今度はそうならないように、自分を奮い立たせて読み進めていきたいと思います。
何度もPHPの本を買って勉強していますが、一番、長く読んでいると思います。それにしてもオブジェクトのところは、どんなご利益があるのか、もひとつピンときません。どの本でも同じですが。
ところどころ表が出てくるのですが、電子書籍のフォーマットに対応したものとそうでないものが混在しています。対応していないものは拡大できず、かなり見づらいです。また、演習の答えのページは本の一番後ろにまとまっているため、電子書籍だといちいちページ移動が必要となり、これも見づらいです。また、独習と言う名の割には、そこまで演習は多くありません。普通の入門書と大差ない気がします。バリバリ演習をこなしたい方には肩透かしかもしれません。
わかりやすい。基本的な部分が、書いてあります。後は実行して自分でコードを書けば良いと感じました。
よかった
本書はDBA（データベース 管理者）が、DBRE（データベース リライアビリティ（信頼性）エンジニア）に進化するためのフレームワークを記している。データーベース関連の技術的内容にとどまらず、チーム、組織として、いかに他の分野（アプリケーションエンジニア、運用メンバ）のメンバと協業し、システムの信頼性確保のために、自律的に継続的改善サイクルを持つための観点にまで言及してくれて居る。それらの内容はデータベースの信頼性にとどまらず、運用全般にも通用する観点として落とし込んでくれている。ベースとなる技術的知見として、ビルドスクリプトや各設定ファイルなどをGitやchefを活用して、冪等性を確保してバージョンごとに自動化できるようにする仕組みで環境構築の効率化と、人的ミスの介在を排除する手法を推奨している。それを踏まえて、インフラレベルからの技術説明に入り、各種DBが扱うメモリ管理とチューニングの目安の指標などを解説。ストレージにおいては、SSD,HDDの違いとそれに対するチューニングの指標などを解説。仮想化においては、DBaaS(DataBase As A service)について言及してくれて居る。バックアップ（オンライン/オフライン、フルバックアップ/差分バックアップ/増分バックアップ）はデータ損失の対策として、ロギング、バリデーション、インフラ環境のバージョンの追跡、安全なAPIを要してアクセスする（手動で不用意に操作しない）、OSログメトリクスで兆候監視などを解説。セキュリティにおいては、データ漏洩に関する予防策、DoS、SQLインジェクション、Network脆弱性をついた攻撃の対処を解説。データベースのアーキテクチャとして、データモデル（リレーショナル/ドキュメント/キーバリュー/ナビゲーショナル/グラフモデル)やトランザクション(ACID属性、read uncommitted/read committed/repeatable read/serializable、dirty read/non repeatable read/phantom read)、DBデータブロックとOSファイルシステムのブロックの関係、DBデータ(バイナリツリー）、インデックス、レプリケーション(単一リーダ、複数リーダ[それぞれのリーダが書き込み/全ての他のノードに伝播する書き込み])などの定番技術を紹介。その他のデータベース、データストア関連技術として、データプロキシ（レイヤ4/レイヤ７）を活用したスケールや信頼性向上、インメモリストア、キューの紹介、データアーキテクチャとしてLambdaを紹介している。全体として、技術的知見だけにとどまらず、実際のDB運用業務における現場での協業観点なども学びたい人に価値が出てくる著作だと感じた。以下、内容メモ-------１章：イントロダクション今日、DBのプロフェッショナルは管理者でなく、エンジニアでなくてはならない。コードを書き、ビルドができないといけない。> DevOpsを習熟することでチームは一つになる。DevOps:ソフトウェア開発手法の一つ。開発 と運用 を組み合わせたもの。開発担当者と運用担当者が連携して協力する開発手法をさす。エンジニアであればこそ、オペレーション作業にける繰り返しの多い作業や、固定化された手順において設計、ビルド、データ構造といった観点から問題点を洗い出し、最適化できる。DBREの指針・データを守れ　アクセス可能な領域、権限の適切な設定＞チーム間に壁を設けない権限設定と責任モデルの導入　バックアップとリストア、手順の定期的テスト＞手順標準化と自動化　　プロビショニング、デプロイ自動化  手順へ行の場合は、テストや代替策の準備、影響範囲の把握　セキュリティ脆弱性の監査＞セキュリティ方針の標準化　DBやストレージの最適選択・周囲を巻き込め・骨折り仕事を減らせ　決まり切った作業の自動化・分業制のとらわれるな　自分の守備範囲を狭めない＞ソフトウェアサイクルについて学習し、勉強会にも参加オペレーションの本質　システムとソフトウェアを構築し、運用し、保守するための必要なスキルと知識の集大成  アーキテクチャやそこで実行されるコードのパフォーマンスについても知るべき　GCP, AWS..PagerDuy, Datalog...など代わりにオペレーションをしてくれるサービスがあるからこそ、それらを使いこなすために、学習する。欲求段階説：マズローが提唱DBに当てはめてみる・生存と安全の欲求：バックアップ、レプリケーション、フェイルオーバ・愛と帰属の欲求：データ管理＞修復可能になるように構築　　　　　　　　　可能な限り、メンバー全員がDBに習熟するよう働きかける・承認の欲求：欲求ピラミッドの中で最も高い　　　DBが観測可能、デバッグ可能、内部で起こって居ることが把握可能なこと　　　ツール分析が可能　　グラフで可視化＞つくりすぎてノイズが多く見逃してしまう状況にならないように２章：サービスレベルマネジメント サービスがあるべき運用レベルを見定めること SLA:サービスがどういった環境で運用されるかの仕様 SLO:サービスレベル目標。設計、運用にかんして遵守すべきことをまとめたものSLOの指標・レイテンシ：レスポンスタイム・可用性：システムが利用可能である状態を時間枠に対してパーセンテージで示したもの・スループット：一定時間に正常処理されたリクエストの割合：秒単位・耐久性：一定の成功率で書き込みができるかどうか・費用対効果：SLO定義から見過ごされがちサービス目標の定義・レイテンシ指標：100ms以下　　amazon:100ms遅延で売り上げの1%が失われる　　google:page読み込みに500msの遅延＞ゆーざの25%あ離脱　　facebook:500ms遅延＞トラフィックが3%現象　　一般的サービス：遅延１秒＞ユーザ満足度１６％減少SLO例：リクエストの99%においてレイテンシは２５ミリ秒から１００ミリ秒の間に収めること・可用性の指標　サービスはその稼働時間の９９．９％において利用可能なこと  年間５２６分：約９時間のダウンタイムを許容・スループットの指標・費用対効果の指標　コンテンツプロバイダ：ページビュー　オンラインサービス：ユーザ数　小売業：トランザクション数３章：リスクマネジメント　リスクを適切の評価して、軽減する手法の繰り返しで影響範囲を小さくする・潜在的な障害や脅威となるリスクを洗い出し一覧を作成・各リスクについて発生する可能性と発生時の影響度について評価・発生する可能性と発生した時の結果を分類・発生する可能性を低くする手段、サービス影響を軽減する手段を洗い出す・各リスクに優先順位をつける・監視と対応策を実装・上記を繰り返す４章：オペレーションの見える化見える化の重要性・システムがいつ壊れたか、壊れそうになって居るのを検知できればSLO違反を防げる・パフォーマンス測定で、現状のシステム状態のトレンドを把握できる・キャパシティプラニングでリソースの有効活用・デバッグとポストモーテムで、問題の早期発見この障害はSLOにどういった影響があるか、どのようになぜ発生したかを知る必要があるOpVizツールをOpsチームの所有物にするのではなく、ビジネスインテリジェンスツール(BI)として活用の幅を広げる必要がある。５章：インフラストラクチャエンジニアリングサーバレスや、DBaaS(Database as a Service)も含めた、データベース構築例の紹介・物理サーバ：一般的にDBは、CPU,メモリ、ストレージI/Oを多く必要とする　　リソースの奪い合いが起きないように、専用のデータベースサーバを用意するのが適切　DBREとして、データベースサーバに使用するホストは、適切なカーネル設定を施す必要がある。  ・ユーザリソースのリミット：ファイルディスクリプタ、セマフォ、ユーザプロセス　・I/Oスケジューラ：　　　noopスケジューラ：I/Oコントローラによって制御荒れて居るSSDアレイのうち、最も適切なターゲットとなるブロックデバイスを選択。SSDは、シーク時間が安定していて、各I/Oリスエストは同等に処理される　　　デッドラインスケジューラ：　I/O処理が待ちぼうけにならないように、　　　　締め切りを設けて、I/Oレイテンシが最短となるように最適化  ・メモリ割り当てと断片化：　　　MYSQL:InnoDB5.5は、glibcのmallocに手を加えた独自ライブラリを使用　　　　GitHubによればカスタム版のtcmallocでレイテンシを30%おさえられる　　　PostgreSQL:mallocをカスタマイズした独自ライブラリ　　　　メモリを巨大なチャンクとして割り当てている＞memoery contexts  Apache Cassandra 2.1:デフォルトメモリ管理に加えて、off-heapなメモリ管理が可能なjemallocをサポート　　　MongoDB3.2:デフォルトメモリ管理はmallocだが、設定によってtcmalloc, jemallocに切り替えが可能　　　Redis2.4: jemallocを使用  jemalloc, tcmallocは、glibcのmallocより負荷軽減、パフォーマンス改善できる　　TLB(translation lookaside buffer)は仮想アドレスから物理アドレスの変換において高速化を図るため、そのキャッシュを保持する。　　　＞大容量のメモリとページを管理するためににはTLBのヒットミスは痛手となる。　　THP(transparent huge pages):Linuxのメモリ管理。TLBのオーバヘッドを軽減。巨大なページの断片化は致命的＞全メモリの１０％を断片化阻止の設定に割り当てる　・スワッピング：メモリに収まりきれなくなったデータをディスクに退避　　　＞OSの最後の手段　　　スワップを無効にするのは、絶対確実なフェイルオーバが可能な時だけ　・NUMA:non-union memory access:非均一型マルチプロセッシング　　　cpuが各自ローカルバンクのメモリをもち、リモートバンクにアクセスるる場合は共有バンクメモリにアクセスする方式＞リモート爆のアクセスはコストが高い　　　メモリは最適に処理ができるであろう特定のノードに割り当てることが多々発生する＞特定ノードに大量メモリが割り当てられ、他のノードには割り当てられないといった事態が発生　　　＞このアンバランスさによって物理的に利用可能なメモリが余っていてもスワッピングが発生するケースがある。  TwitterにおけるNUMAとSQL（OSのメモリ管理まで踏み込んだ解決法）  numactl --interleave=all  インタリープアロケーションを強制する　　 MySQLデーモン起動前に、Linuxのバッファキャッシュをフラッシュ　　　sysctl -q -q vm.drom_caches=3  肥大化したデータがOSのバッファキャッシュに乗っていても清算できる  MYSQLデーモン起動後に、即座に強制的にOSにInnoDB buffer poolが必要とする　　　分のメモリを割り当てさせる　　　MAP_POPULATEを使用：カーネル2.6.23+から使用可能　　　これにより、memsetによるバイト埋めを回避　　　NUMAノードに割り当て決定を即座に強制させる　・ネットワーク：　　　トラフィックの種類：データストアが分散して居ると仮定　　　・クラスタにおける各ノード間の通信　　　・アプリケーションのトラフィック　　　・管理用のトラフィック　　　・バックアップとリカバリのトラフィック　　　物理的にNICを分けるか、一つのNICに仮想インタフェースを複数割り当てるか　　　複数のNICをボンディングして冗長性確保　　　ボンディングのアグリケートで帯域増大　・ストレージ　　　キャパシティ：保存とロギングのために利用可能な容量。　RAID構成の検討　　　ストレージのスループット：１秒あたりの入出力性能：IOPS  ストレージの可用性：Googleの調査結果 100このディスクのうち、３個は　　　　最初の３ヶ月で故障する傾向がある。  その後、６ヶ月から１年で、５０個にうち一個は故障　　　＞RAID構成  ・仮想化　　　・OSのバージョン　　　・データベースサーバのバージョン　　　・OSとデータベースの設定　　　・セキュリティやパーミッション　　　・インストルするソフトウェアやライブラリ　　　・管理スクリプト　　　これらの設定をコード化できる　　　一つのサーバに複数の仮想サーバを割り当ても可能　　　ストレージのI/Oレイテンシ：ハイパーバイザが仲介するので物理サーバより遅い　・コンテナの活用　　Docker:仮想マシンより軽い。しかし、本番環境で使うにはさらなる　　ツールキットが出てから　 ・DBaaS　　　デプロイ　　　フェイルオーバ　　　パッチとセキュリティアップデート　　　バックアップとリカバリ　　　メトリクス収集　　　これらが自動化され、オペレーションフリーとなる  だからといってデータベースエンジニアが不要になるわけではない、　　　適切に使いこなすためにDBREが必要６章：インフラストラクやマネジメント 手作業による繰り返しをなくし、自動化によって素早く安定性のある　インフラストラクチャをいつでも構築できるようにする。　新規ノード増設、障害ノード置き換えなど自動化対象の作業・OSと必要ソフト、DB、関連パッケージ、ユーティリティツールのインストール・環境や負荷に合わせたOSやソフトウェアの設定・データベースサーバの初期設定・監視、バックアップ、運用ツール、管理ソフトウェアのインストrーう・新しく構築したインフラのテスト・静的および、動的なコンプライアンスのテストバージョンコントロールツール：git,subversion　インフラのコード化に当たって、コードを管理するデータベースインフラの定義:chef など　設定管理ツール＞データベースクラスタの設定をコードとして定義  定型処理をコード化７章：バックアップとリカバリ最重要プロセス・物理バックアップ：データを内容して居る実際のファイルを爆アップ・論理バックアップ：データベースからデータを然るべきフォーマットで抽出して移植可能にすること  一行ずつデータを取り出すため、時間がかかる。　リカバリにも時間がかかる＞全世代のundo,redoログを実行する非町があるため、　　その間データベースはロックが必要になる。＞行ベースのバックアップ　ステートメントベースのバックアップ＞レプリケーションオンラインバックアップか、オフラインバックアップか　オンラインは本来の処理を圧迫しないよう注意が必要フルバックアップ、増分バックアップ、差分バックアップデータ損失の問題と対策・ユーザのエラー：本番環境で手動変更などの変更許可は与えない　　用意したAPIで安全に変更できるようにする　　変更はテストされ、ロギングされ、適切なチームに通知されるようにする・アプリのエラー：データのバリデーションを常に実施する・インフラのエラー：インフラもバージョン管理の対象として追跡可能にする・OSとハードウェアのエラー：　　定常監視して居るログメトリクスに兆候が現れるものである８章：リリースマネジメントCI:continuous integration 継続的インテグレーションCD:continuous deploy　継続的デプロイこれらをワークフローの妨げとすることなく最適化することが重要・教育と協力データベースエンジニア以外も、高いレベルでのデータベースの知識を持てるようにするDBREは自ら、キュレータとなり、DBの情報を発信していく（SNSなどの最新情報）ドキュメントシステムの構築　静的に作成されて、実際の環境とずれたドキュメントはナンセンス　設定ファイルやコードから、ドキュメントを生成できる設定管理ツールを活用アプリケーションコードと同様に、インフラ構築に必要となるコードや設定、　データベースの環境の構築スクリプトも、バージョン管理システムにコミットすべき・データベースオブジェクトの変更履歴・トリガ設定・プロシージャと関数・ビュー・設定・サンプルデータセット・データ削除スクリプト９章：セキュリティバックアップ、リカバリと同等レベルに最重要・盗難・破壊（意図的破壊、意図しない破壊）・データ漏洩・コンプライアンスと監査の標準化機能としてのデータベースのセキュリティ・結合テスト：SQLインジェクションの混入、認証レイヤの例弱声チェック、暗号化・オペレーションの見える化　アプリレイヤの見える化：成功失敗のSQLステートメントのトレーサビリティ　データベースレイヤの見える化：　　設定変更　　データベースユーザ　　実行したSQL  新しいデータベースオブジェクト　　ログイン監査　　応急処理とバイナリ変更　OSレイヤの見える化　　設定変化　　新しく追加したリソース（ソフトウェア、スクリプト、ファイル）　　ログイン監査　　応急処理とバイナリ変更・STRIDE:どのように脆弱性が悪用されるかの分類手法Spoofing identity:なりすましTempering with data:改ざんRepudiation:否認Information disclosure:情報漏洩Denial of service:サービス拒否攻撃Elevation of privilege:特権奪取・DREAD:驚異のリスク分析と優先順位をつける分類手法Damage potential:攻撃の損害範囲Reproductibility:攻撃の再現可能性Exploitability:攻撃の技術レベルAffected users:攻撃の影響範囲Discoverability:攻撃手段の発見可能性予防策・不要な機能、設定の削除・パッチ適用：脆弱性定期的チェック・デフォルトユーザの削除・ネットワークとホストのアクセス制限  MongoDBのデフォルトbindアドレス：0.0.0.0 = どのIPアドレスからも受け付ける　　危険＞デフォルトから変更すべし攻撃・サービス拒否攻撃  データを盗む、壊すなどの破壊的ではない　迷惑行為、反競争的行為　対策：　　リクエストに再送信までの時間に一定の制限を儲ける　　リクエストに優先度を設けて、重要でないもの、悪用されそうなものの　　　優先度を下げておくことで、影響を最小化　　クエリを一時的に性能低下させる　　　＞負荷状況に応じて低性能処理を用意して実行させる　　リソースを長時間占有するリクエスをを強制終了　DB-Dosを悪用されているばあいは、データベースの継続的改善で対応　ログでモニタリングし、攻撃者をトレースできるようにする・SQLインジェクション　動的クエリを避ける実装にする。＞バインド、バリデーション・ネットワークと認識プロトコル　脆弱性を利用して、直接データベースに攻撃を仕掛ける場合があるデータの暗号化・転送中のデータ・データベースクライアント上のデータ・ファイルシステム上のデータ　　ファイルシステム状のデータの暗号化　　ファイルシステム自体の暗号化　　デバイスレベルの暗号化どの地点でも盗聴のおそれがあるが、どこを暗号化するかは、セキュリティ方針とのトレードオフデータベースへのアクセス・TLS1.1または1.2(1.0は脆弱性あり）・SSH2,RDP(リモートデスクトッププロトコル）１０章：ストレージ、インデックス、レプリケーション単一ノードでデータを格納する大規模なデータセットを分割して格納複数ノードでデータをレプリケーションするデータ：ブロック単位　データサイズが1kでも、読み込みにはブロックサイズ16kが必要になる　データベースのブロックサイズがOSのファイルシステムのブロックサイズより小さいと、複数のページを無駄に消費することとなる＞むだなI/Oバイナリツリー構造　多くのデータベースは、データをバイナリツリー(B-tree)のフォーマットで構造化　データが増えても、自分でバランシング（二分探索）する性質を持って居る　プライマリキー＞バイナリツリー構造　セカンダリインデックスは、インデックスされたデータのみを含む：行全体は含まない　　＞軽い、メモリに乗せやすいバイナリツリーの書き込み　正しい葉ノードの探索が行われる　データを挿入することでノードが付随するルームと共に作成される　ノードがルームを持って居る場合は、順番に従って挿入　ルームが全て埋まって居る場合は、分割が発生>新たに二分木で決定される  場合によって、さらに追加でルートまでたどって分割が発生する場合もある　削除も、リバランスが発生する場合がある。　データが書き込まれていないデータベースの場合は、初期は読み込みと書き込みが線形で推移。　データが増えるにたびに分割が発生し、I/Oにかかる時間もランダムになってくるSSD:小さいブロックサイズのほうがパフォーマンスがいい場合ありHDD:大きいブロックサイズにたいして３０−４０％ほどレイテンシが高くなるインデックス・ハッシュインデックス・ビットマップインデックスレプリケーション非同期：レイテンシ優先同期：耐障害性優先順同期：レイテンシと、耐障害性を両立して妥協したもの・単一リーダによるレプリケーション・複数リーダのレプリケーション  ２台のリーダがそれぞれ違うデータセンターに配置されて居るケース　　＞各々のリーダの役割を持ったノードが書き込みを行い、レプリカに伝える　どのノードも書き込みと読み込みができ、他のノードに伝播していくケース１１章：データストフィールドガイドデータストア：データベースフィールドガイド：多種多様なDBの特性を明らかにし、使用すべき時と場所、適切な設定、運用方法を提供データモデル・リレーショナル Oracle, MySQL, SQL Server..既存のSQLにとって変わろうとして居るもの　NewSQL: Google Spanner, Amazon RedShift, NuoDB, Firebird・キーバリュー・ドキュメント  キーバリューから派生：ドキュメント構造のメタデータを管理・ネビゲーショナル/グラフモデル　　階層的：ネットワーク状のデータベースが起源トランザクション　ACID属性read uncommitted：アントムリード、ノンリピータブルリード、ダーティリード発生read ommitted：ファントムリード、ノンリピータブリリード発生repeatable read : ファントムリード発生serializablePostgresSQL:read committed, repeatable read, serializableOracle:read committed, serializable(repeatable readに近い実装）MySQL:read committed, repeatable read, serializableCAP定理一貫性(Consistency)、可用性(availability)、分断耐性(partition tolerance)のうち2つは満たすことができるが、3つ同時は無理ほとんどのシステムは、CA, APで構成１２章：様々なアーキテクチャデータベースプロキシ　レイヤ７プロキシ：　・バックグラウンドのサーバのヘルスチェック、ヘルシーなサーバへリダイレクト　・読みこみはレプリカ、書き込みはマスタへ送る　・コードでチューニング不可能なクエリを書き換えて最適化　・クエリ結果をキャッシュ　・トラフィクが少ないレプリカにリダイレクト:スケーラビリティ　・クエリのメトリクスの生成　・クエリタイプやホストごとにファイアウォールとしてフィルタを実行　レイヤ４よりレイヤ７のプロキシの方がレイテンシが大きいイベントとメッセージシステム　キュー、分散キューキャッシュとメモリストア　インメモリデータストア、キャッシングシステムデータアーキテクチャ　Lambdaアーキテクチャ　　バッチ処理レイヤ　　リアルタイム処理レイヤ　　クエリレイヤ１３章：実践DBREアーキテクチャを決定するプロセス全てにDBREは関わるべき開発の初期段階でデータベースの設計に携わるべき以上。
原書の詳しい説明を雑に言い換えたり、原書にはない独自の説明を加えたり、大事な言葉を翻訳しなかったり、翻訳が本当に雑すぎる。(2022/6/12追記)現時点でも正誤表が無いのでメモ。p.95「JBODはRAID 0よりも障害発生確率が高いものの、MTBFはN-1になります。」原文“JBOD will have more frequent failures, but unlike RAID 0, the other N–1 disks will be available.”
書いてある内容は良いが、論理構成が今ひとつ。誤訳が多く、訳されずに省かれた文があるなど、原著を参照しなければ意味を理解できない箇所が多くある。
他の人も書いていますが、訳が本当にひどいです。誤りも多く日本語としても成り立っていません。
著者が2000年に「10年前にこの本があれば・・」と言っていたが、2015年の現在、私も10年前に買っておけば・・と思った。経験者、それもモデリングを行う程の設計者が読む本。DBと向き合ってこなかったSEが読んでも良い。が、業務のイロハが分からない初級システム屋が読む本ではない。他のDB設計入門やモデリング入門など読んだ方が100％良い。文中にあるER似の図など正直どうでも良い。こう表現すれば破たんなく稼働し続ける業務テーブルを作れる可能性がある、と言う知識の一つとして参考になると思います。仕入販売と、業務に偏りがあるが、中小ならこの1冊を真似すればシステムが出来上がるどころか、業務改善まで出来てしまうのでは？とも感じる。システム部（システムを使う側）が読むなら初級者でも読むべき。ただやはり少々古い気がするが、ざっと読むと全く良本と感じなかったが、1ページ1ページじっくり読むとかなり深い。そういう意味では他に類似書籍がないので、現在でも買い。何故廃盤にならないか理解できた。余談だが、オンデマンド (ペーパーバック)  は凄い。普通に本屋で買うのと見分けがつかない本が来て驚いた。
時代の流れが早いので、今のテクノロジー文化の中で読んで参考になるか？と言われれば、悩む本です。後輩に「読んだほうが良いですか？」と言われれば進めないかもしれません。読まなくても良い本です。しかし、読んでおくと為になるかもしれません。著者が特徴的な設計方針を持っているようなので、一概に全てのビジネスモデルに当てはまるモデリングではないので注意は必要です。ただ、著者の想定するビジネスモデルや設計範囲であった場合は強い設計になるかもしれない。という印象です。「入門」とついていますが、初心者や新卒の方が読むと、間違いなく混乱すると思うし、業務では役に立たないかと思います。あくまでも、ある程度の設計経験や開発経験、また実際のビジネスモデルをモデリングに落としこむ様な業務（作業）をした事がある人が、改めてモデリング入門という気持ちで読むのは良いかもしれません。テクノロジーには何事も歴史と流行があります。それを意識して読めば素晴らしい知識となる本だと思います。
私は新卒で3PL会社に就職し、配送センターに配属されました。配送センターの業務上、知っておかなければならない業務の流れや用語が2部の2章までにかなりコンパクトにまとめられています。初めて読んだときには、「あれ？これってうちの職場でやっていることそのものじゃん」と思いました。この本は、データモデルの技法と同じ位、実際の業務における、モノと、情報の流れにも力を入れて解説してあり、「業務屋」＝システムのユーザーにとっても参考になる本です。私の職場を含む多くの倉庫事務の現場では、WMSを駆使したオペレーションを行っています。この本は、ユーザーがWMS内部でどのようにデータが処理されているのかを知るのに、最適な本です。加えて、それ以外の章は、荷主や納品先の業務の流れを理解することにもつながります。もちろん、ベテランの「業務屋」にしてみれば、常識的な事柄なのかもしれないですが、一度体系的な理論で、業務の流れを振り返り、分析してみることは、有意義なことと思います。
業務系の設計のための入門書といえるものが少ない中で、この本は業務の基本を押さえるには役に立ちます。ただ、ユーザーの業務において同じものはないので、これで基本を理解してから応用することになるのでしょうが。
これすごく良いです。例えばあたらしい業種の仕事が入った場合なんかはもうすごく役に立ちます。僕の場合は実際、生産管理系の仕事なんかしたことがなかったのですが、これでとてもよくわかりました。一般的に業務の視点から書かれた本なんかは、その業務については確かになんとなくわかった気になるのだけれどもそれだけじゃあ果たして、『じゃあそれシステムとして考えたときにはどうなるの？』ってのがすっぽり抜け落ちていたりします。或いは逆に、システムの視点からの本だともうシステムべったりで業務の現場おかまいなしのはなしばっかりだったりして、実際に仕事になったときに『ああ、本にかいてあるみたいにうまくいくわけないじゃん、例外だらけ。』みたいになりがち。これ、その間を上手くとりもってくれている本だと思います。ですからまあ、でもやっぱりどっちつかずってとこもありますが、それはそれこの本を読むことで業務とシステムの間はどうなっているのかがぼんやりわかった上で、さらにそれぞれの専門書を読んだり実践で経験値高めていったりしなくてはならないですが、まあこの本のタイトルにもあるように、これ『入門』ですから。これでいいのだ。
データモデリングの考え方と業種ごとのデータモデルの例からなる本です。得に、前半のデータモデリングの考え方は、非常に、わかりやすいものです。専門家以外にもわかるように、丁寧に説明してあります。このデータモデリングの考え方は、情報システムだけでなく、いろいろな場面で応用できると思いました。わかりにくい資料を作らないため、自分の持つ情報を整理するため、等です。情報を扱わない仕事をしている人は、いないと思います。前半だけでも、日々の仕事に十分なヒントを与えてくれる気がしました。後半は、少し、しんどいですが、前半だけでも、元は取れます。比喩の使い方、説明の方法が、エンジニアっぽくって、鼻につきましたが、ま、愛嬌です。
下の方同様、前半は非常にわかりやすく3章まではよく理解できる内容です。ですが業務別データベースの設計は初心者には理解できません。実際の仕事を経験し、仕事の流れを十分にわかっている方でないと読めないでしょう。初心者の方に対してだけの評価で☆二つとさせていただきます。
第一部で著者は、システム屋と業務屋の溝、意思疎通のインフラ整備の遅れを嘆いている。本書の初版が２００１年。それから４年以上経った現在、状況は何も変わらない。我流ＵＭＬなどが出回ってむしろ現場は混乱する一方だ。小手先の技術でごまかしても本質は何一つ変わらない。システムと業務知識が双方向で解説された本はいまだ数少ない。その意味で本書は４年経った現在も色あせていない。流行ばかり追うよりも本書のような汎用的なスキルを身につける方がはるかに大切だと思う。データモデリングと業務知識を分離せずにコインの裏表のように一つのものとして解説している。後半がやや駆け足気味だったのが残念。
前半は比較的分かりやすいので、データベースのモデリングとは何かを知りたい方にはお勧めです。後半は詰め込みすぎと言う感じで、前半を読む人とは別のかなりの経験者向けでしょう。
進化も早く人手がいらなくなりそうな時代はすぐそこまできてますね
ChatGPT や AIによるエキサイティングが未来がたのしみでもあり、また便利さの反面で、この進化スピードの速さには不安も感じます。ただし、そんな不安もきっと今だけのことで、これが当たり前となる日も近いのでしょうね。
AIの進化が凄いのは聞いてたけど、ここまで何でも出来ると思わなかった。これをきっかけにchatGTP使ってみようと思った。
AI技術って難しくてとっつきにくいけどスラスラ読めました。
日能研のカリテ・公開模試対策に。発売して１０年で問題はやや古いです。ただ類似問題があります。副教材としては有効です。算数の基本問題の方がおすすめですが。
うちの子は数学が得意ではないので、中学生なのにこれをやらせてます。いま、コロナで休校なので。これ中学生でもできない問題多いと思います。公式や解き方を覚えるのではなく、自分で考えさせるのにちょうどいいです。こういうのを解けないまま、中学の勉強をしてもあまり意味がありません。
○○算の説明があり問題に移るのだが、説明に則った問題が出題されていないことが多い。私には解いた問題の解説が充分でなく、子どもにどうしてこういう計算方法をとるのか教えることができなかった。
電算室や保守業務を担当されている方にはお勧めできます。しかし資格取得や本格的な勉強を考えている方やSQLが使えないと仕事にならない現場でお仕事さるている方にはお勧めできません。書かれている内容は、現場ですぐに使えるものばかりです。ただし開発現場でと考えた場合、内容が乏しいです。本のタイトルに書いてあります「現場で使える」というのは開発現場ではなく、電算室や保守業務の現場という意味です。具体的には、社長から内線電話が掛かってきて「販売実績のA品番の5月から7月までの期間のA社とD社とK社の集計表が5分以内に欲しいんだけど、なんとかならない?」という問い合わせに「はい!すぐにメールで送ります!」と言えるようになるでしょう!
本自体はきれいな商品でした。やはり日焼けがあり新品の商品とは別物でしたが、よい取引が出来ました。
IT企業に努めていて、職場の後輩に教えるために、この書籍を含め20冊ほど比較検討した結果この書籍を選びました。仕事で使うような使い方を網羅しているのと、難易度が低かったので、この書籍に決めました。練習問題の難易度を下げて、問題数をもっと増やすと良いと思います。更に、練習問題の解答を別紙にするか、インターネットからダウンロードにできるようにすると、集合研修でも使えて便利です。
本書は初心者が基礎的なSQLを一通り書けるようになる為の良書で、初心者の教育の為に良く使われている比較的有名な書籍です。完全な入門者の場合、「はじめての〜」的な入門書を読まれた後で次に読むべき書籍が本書といった位置づけです。項目名に論理名(日本語)を使用し、簡単な例題を元に分かり易く解説されていますので、初心者の方は容易に基礎的知識とイメージをつかむことができるかと思います。最後の方には基本的なチューニングも少し触れており初心者の方には十分参考になるかと思います。但し、本書の知識と概念だけでいきなり現場に入るのは少々危険であり、もう少しSQLで考える力を身につける為に、更に、
達人に学ぶ SQL徹底指南書 (CodeZine BOOKS)
を読んで理解を深めると良いでしょう。なお、現場で普段手元に置いておくには、
【改訂第3版】 SQLポケットリファレンス (POCKET REFERENCE)
などのリファレンス本の方が便利かと思います。
SQL Server 2005 に対応しました -> じゃ　INTERSECT 使えるじゃんconnect by は Oracle だけ -> じゃ CTE の説明も追加してよーー（自分も試してないけど）SQL Server 2005 にはちゃんと対応してるとは言えない気が・・・・・＃そういう意味で手抜き感を感じるのは、初版をずーーと使ってた自分にとっては残念です現在は第2版を使っていますが
レイアウトが悪い。見開き２ページ、あるいは１ページで各項目を簡潔にまとめてもらいたい。例文が長いうえ、改行の仕方が悪く、詰込過ぎ。実務的とは思えない。
クエリの使い方はかなり細かく書かれています。.netからのアクセスしたときの手法についてもう少し説明があってもいいのではないかと思われる
しっかりした構成、分かりやすい日本語、適切な索引、適所に配置された用語説明、身近なサンプルで、初学者にやさしい入門書です。分からないまま読み進めなければならない、といったストレスがありません。トランザクション、ストアドプロシージャ、バックアップとリストアまでカバーされているので、経験者にとっても、開発時の辞書代わり、体系的な知識の整理に活用できます。職場ではSQL Server 2008 を使っていますが、十分役に立っています。
ようやく見つけたという感じです。いろいろある中で一番問題になるところのない本では困るからです。
初心者に教えるためにとても丁寧に書かれているのですが、丁寧すぎて逆にわかりづらいです。まだそこは教えなくていいんじゃないの？後から追記したので間に合うんじゃないの？という細部まで、最初から突っ込んで書いています。同シリーズの「10日でおぼえるVisual Basic 2005入門教室」がまさに”慣れて覚える”の実践型でとてもわかりやすく、SQLの勉強にもこの本を購入したのですが、著者が違うせいか理論型色が強く、とっつきにくかったです。最終的に理解できたので買って間違いはなかったのですが、終わった後はとても疲れました。
一通りのことが解説されている。SQL CLRや実用の機会の多いストアドプロシージャはもう少し複雑な例題があっても良い。
言葉の説明も丁寧で、初心者に分かりやすい。段階を追って学習できるので、SQL Serverが初めての人に適している。解説は入門書にありがちな、くどくどとした感じがなくて、サクサク読み進むこと ができて、且つ、要点がしっかりしているので良かった。 インストールからデータの操作、管理などコンパクトな本の割には、結構 内容も充実している。個人的には、課外授業となっていたXMLDB、SQL CLRや帳票なども興味深かった。
体系立った構成にはなっていないため、データベースに関して知識を整理したいという人には向かないでしょうね。データベースのパフォーマンスチューニングや障害対応を話題にする立場だが、DBAというわけでもない中級のアプリケーション開発者が読むには良い本です。意外とみんなオプティマイザとか実行計画とか分かってないですからね。
作者の真野正さんはER図の教科書とも言える
実践的データモデリング入門 (DB magazine selection)
を書かれた方です。初めてデータモデリングをする方でも、モデリングの必要性を理解し、描く事が出来るようになると評判になりました。最近はER図どころかRDBとは何かも気にせず、単なるファイルとしてRDBを利用するITエンジニアやフレームワークが増えてきました。そこで改めて「現在の目で」RDBそのものに立ち返って再整理されたものが本書です。ＮｏＳＱＬとＲＤＢとの考え方の違いについても解説されています。＜課題編＞　１．ＤＢＭＳに起因するシステムトラブル　　　　　　２．ＩＴエンジニアが陥りやすいＤＢの誤った使い方＜理論編＞　３．リレーショナルモデルの理論　　　　　　４．ＲＤＢＭＳの内部構造＜解決編＞　５．ＤＢＭＳを踏み込んで理解する　　　　　　６．ＤＢ設計最適化の具体策　　　　　　７．ＳＱＬ最適化の具体策　　　　　　８．ＤＢ利用の心得これらを真野氏特有の分かり易く平易で朴訥とした語り口で解説されますのですっと理解出来るでしょう。チューニング視点からみたＲＤＢＭＳの使い方に力点を置いた解説ですので、オンプレミスの技術者には特に参考になります。
日頃から、データベースと関わっていますが、本書によって自分の知識や経験を整理する良い機会になりました。持っている知識が正しいことの再確認、知識を深めるための原理や背景を得られました。技術書にありがちな読みづらさもなく、すらすらと読むことができました。特定のRDBMSに傾倒していないので、RDBMSに共通する知識を深める(広げる)ことができました。
本番稼働中に実際によく発生するシステムトラブルを例にして、それぞれの問題点や改善点、そもそも設計時に気をつけるべき点などがまとめられていて、とてもわかりやすいと思います。SQLについては開発時に必要なので、ほとんどの人がわかりますが、私も含め、DBの仕組みについて一からしっかり勉強している人は多くないので、レスポンスやデッドロックの問題が発生しても、どうしてもSQLで解決しがちです。確かにSQLを見直すことで解決することも多いのですが、SQLでは解決しない場合、自分たちでは原因がわからず、仕組みまで詳しく把握している方に調査していただいたりして、時間がかかってしまっていることが多いのが現状です。個別の情報はネットで検索しても出てきますが、システムトラブルに絡めて、その原因、対策についてまとまっている記事というのは案外少ないので、この本のように、ある程度ピックアップしてまとめられている本があれば、システムトラブルが発生した場合でも、調査が早くなるのではないか、また、それ以前に、問題発生頻度が下がるのではないかと思いました。
【簡単なデータベース設計は研修等で学んだが、まだデータベース、アプリサーバを構築、運用したことがなく、システムトラブルに対するメンタルモデルを構築できていない人】向け教育用として入手。立ち読みした際に、一般的によく起きるトラブルの例が第一章から記載されており、そこから理論、解決へと流れていくという構成が、他の本ではあまり見かけない感じで、教育用資料として面白いと感じた。　データベースの問題解決の中では、「実行計画」に関する記載が充実している。テーブルスキャン（テーブル全数検索）ではCPUコストの消費が多いので、設計時にテーブルスキャンを行っていないか逐次確認し、SQL文を検討しなおす必要がある。その流れについては色々な箇所で触れられており、説明が多く、教育用としてだけではなく自分でも再度見直してみようと思わせられた。　全体として、【小さめのデータベースを少人数で運用開始し、ちらほら問題が出ており、対処方法に困っており、周りに詳しい人がいない人】が読者として一番適している感じの一冊。　第七章にある「SQL改善チェックシート」は、初級者～中級者がレビューの際につい漏れがちな部分を確認するのにも適している。　SQL文やデータベースのシステムに依存する部分は、各部分によってOracle、PostgreSQL、SQLServerのどれか準拠で書かれているため、記載された内容を自分が使うデータベースではどうすれば良いのかは、別途調べる必要がある意味でも中級者向け。　ただ、問題に関する記載が本の最初にあるため、頭から順番に読んでいくと、話のつながりが多少分かりづらいと思える部分が多い。　本の使い方・読み方として、最後のほう、第八章（P.191）に、第一章のトラブル事例、第三・四章の理論、第五章の解決編がどうつながっているかの一覧表（因果関係図）が描かれているので、まずそのページを見てから、自分やチームに不足している考え方について押さえていく方向で読んでいくほうが良いだろう。　あるいは、第六章にあるDB物理設計のフローチャート（インデックス設計、パーティション分割）が、ただ「データベース設計としてER図書いて」、だけでなく何をどのタイミングで考えると良いのかが分かりやすい。こちらのフローチャートを見つつ各項目を押さえていく方向でも良いかもしれない。　このように、本の最後のほうに、全体の総括、インデックス的な記載が集中しているので、誰かに薦める際にはその旨は一言告げておいたほうが良いだろう。
この本の最初の感触としては、いわゆる「技術書」ではない、という感じです。言葉はラフで、非常に読みやすいです。「再入門」とタイトルに掲げている通り、初心者なら説明や注釈を要する部分でもサラっと言いまわしているので、今さら入門書を飛ばし読みするよりは良いと思います。しかし構築に関わる人ならばDBそのものの設計よりも、最近ではストレージの特性や冗長設計(クラウドに移行しつつありますが)やコスト(お金)の調整に多くの時間を割かれる現状があるし、プロダクトによってアーキテクチャも違うので、みっちり読み込んだり、逆にチップスをサッと引いて活用できるような本ではないと思います。とはいえ、構築から運用まで万遍なく携わる人なら、夫々の段階でつい見落としがち、あるいは軽視しがちなポイントを、この本でサラっとおさらいするのはアリだと思いました。筆者自身が本書を紹介しているプレゼン資料をSlideshareで見ることができます。
半分くらいまで読んだ感想です。非常に残念ですが、十分に作り込まれていないと思います。コンセプトは、すごく良いものだと思いますし、期待しましたが、このまま読み進めて良いものか、時間の無駄にならないか、不安です。文中で参照すべき図表の番号を指定していないため、分かりにくいところが多々あります。場合によっては、正解を想像しながら読む必要があります。細かい誤植が多いです。何を言いたいか、意図を汲み取れないところが、ところどころあります。読者が本筋以外のところで無駄な労力を使わなくて良いように精査するのがプロの仕事だと思いますが、その努力の跡が見えません。今のところ正誤表もないです。きちんと精読していれば、気付く問題です。著者というよりも、出版社の問題なのかもしれません。
情報システムの基盤ともいえるデータベースに関わる技術者であれば目を通しておいた方が良い。筆者の経験に裏付けされたテクニックが余すことなく披露されている。まさにデータベース技術者にとっての必読書！
RDBをそれなりに利用している人が基礎からのおさらいと理論と背景知識の整理に最適な本だと思いました。実際にDBを運用していて起こりうるトラブルを例に問題提起して解決方法を提示する章などは実際に困っている人には目からウロコではないでしょうか。また多く挿入されている最新のNoSQLまでを網羅したコラムは特に勉強になりました。実際にトラブっているDBを見るとインデックスが効果的にハラれていなかったり、インデックスはあってもSQLの書き方ではインデックスが利用されないこともあり解決までが慣れていないと時間がかかってしまうこともあります。そういう例も紹介されていてなぜインデックスが利用されないのかなど丁寧な解説は復讐という意味でも特によかったです。
「実践」入門のタイトル通り。この本は初心者向けではなくひと通りMySQLを触ってみてCRUD文は書けるけど、MySQL or DBについてもっと詳しくなりたい/知っておきたいという人のための本です。本書の一番の読みどころは10章以降のWEBでは拾えないバグフィックスの具体例やDBを運用していてデータが増えた時のスケール方法と思います。また、マスターに障害が起きた際のリカバリー方法の部分も非常に参考になると思います。私自信もWEBエンジニアとしてMySQLの運用をしていますが、色々とスケーラビリティや運用で悩んだポイントについて書いてありますのでこれからソーシャルゲームのDBを運用する人にとっては有益な一冊になるでしょう。また、本書は「software design」と「WEB+DB Press」に掲載された記事に加筆・修正されたものをまとめた本ですので、上記2冊を定期購読されている方はまずは書店で手にとってから購入を検討するのがいいと思います。
現Facebook (元DeNA, Oracle(Sun, MySQL)の松信さんの本。もともとはSDでの連載や単発記事、Web+DB Pressの記事を再編集、加筆したもので、これだけでも貴重な記事が散逸せず、まとまってくれているだけでありがたく感じます。私もソフトウエア業界には長らくいて、さまざまな技術者、(サブ)リーダをみてきています。当然ピンからキリまでいます。そしてまた、ここ数年はデータベースを中心としてさまざまな書籍を見てきています。書籍もやはりピンからキリまであり、ひどいものはマニュアルの劣化コピー(にもなれない場合もあり)のようなものまでさまざまです。現場で働き、リードしてそれを「イン」として、そしてこのようなバランスで「アウト」できる存在は稀です。なのでとりあえず松信さん(やミックさんも同じですが)の本は出るというだけで予約し、そして購入してもがっかりすることはないです。今回の本の場合はとっかかりは「データベースがないとなにがこまるのか」ですので、さすがにそこらへんはスキップして読みましたが、後半はの興味深い内容とトピックが多くじっくり読みました。9章10章はMySQLに特化した内容ですが、オープンソースならでは、の内容ですので、インフラとしてMySQLを利用する人は一度は目を通すことをおすすめします。ただ、細かな間違いなどはあります。これらは次の版で直るとして、私も実は書名には少し違和感があります。SD連載時の「データベース技術の羅針盤」じゃだめだったのかな。。。。
インデックスやトランザクションなどといった基礎知識を理解した上でレプリケーションなどの機能をごく日常的に使っている人にはごく当たり前の内容が多いです。他の方のレビューにもあるとおり「何が実践なの？」と思われるかも知れません。なので、タイトルで失敗していると思います。ですが、本書は基礎知識・MySQLによる具体的な知識・ＤＢ利用現場のトレンドについて広く薄く説明されていて、うまくまとまっているなと感じました。第１章のタイトルが「データベースがないと何が困るのか」であることから、この問いに答えられる明確な回答を持ちあわせていない人がメインの対象読者だと思います。　・情報系の学生や新卒エンジニア　・MySQLを「データの入れ物」として長年使ってきたエンジニア　・基礎知識について不勉強な割に「これからはNoSQLだ」などの扇動には敏感なエンジニアまた、現場でデータベース技術を既に[実践]されているエンジニアにも、11章・12章はおすすめです。大量のリクエスト・データにどう対処するかという最近の技術課題に対する、現在の技術動向が把握できます。これも[実践]というには薄いですが、入門書としては十分すぎる内容です。
「実践入門」と書かれると、DB初心者がこの1冊を片手に現場に出ていけそうなイメージですがこの本はその前段階ですね。現場に出る頃にこれを読み始めてたら手遅れもいいとこです。しかし、データベースの勉強を始めるための下地としては良書だと思います。私はDBに関する知識がほとんどなかったので、勉強を始めようとこの本を読み始めたのですが右も左も分からない初心者には読みやすく理解しやすい内容でした。本書の冒頭を引用しますが'@「Excelではなぜ十分ではないのか」と聞かれた時に答えに困る方'A先輩社員から「DB技術は重要だから身につけるように」と言われたもののなぜ重要なのか分からない方'Bデータベースに興味があるものの何から勉強すれば良いか分からない方これらが該当すれば、読んでおいて損はないと思います。特に'Bが該当する方にはオススメです。少なくとも、まず何を勉強していこうかという方向性は見えてくるとお思います。
恐らく著者の造詣はMySQLに深いためか、MySQL(RDB)はソースの解析からチューニングの方法まで記載されておりますが、Webエンジニアのためと銘打っている程にはNOSQLの説明が詳しくはありません。WebエンジニアというよりはSIエンジニア用でRDBをこれから勉強したい人用で、MySQLを使用予定で勉強するためには最適だと思います。
正直なところ評価が難しい。読者ターゲットが絞られていないと思う。実践入門と言うほどに実践の入門になっているかと言えばそうでも無いと思う。内容的に総花的でMySQLを中心に今のRDBMSの状況はざっとわかるけれど、「入門と名のついた書籍として」これで何かがわかって、何かができるようになるかと言えばそうでは無い。とりあえずRDBMSいまいち良くわかんねぇというあなたにはお勧めしても良い本だけど、これで何かできるようになるわけではきっと無いので、入門と名のついた書籍としては、この先に進むための参照書籍一覧とかあった方が良かったんじゃ無いですかね。
この本はウェブサービスでどんなデータベースが必要か、技術が必要か、等の全体像を確認するような本だ。まさに、「実践への入門」というだけの本だ。各章ごとに浅い話題だけなので中途半端感が否めない、これならば純粋な初心者用データベース入門と、現場でのノウハウが詰まったバイブルと呼ばれるような本を２冊を買ったほうがいいだろう。現場の技術者が買うと言うよりも管理者側の人が読むような本だと思う。ウェブアプリケーション開発の実践的な内容を期待したので星２つ。
プログラミング経験皆無の私がiPhoneアプリの作成に興味を持ってしまい、最初に読んでみた本がこちらの電子書籍です。一読目はとりあえず流し読み。二読目は実際にXCODEを操作しながら一通り。なぜか書いてある通りにならない事も幾度かあり、その度に前に戻りやり直すことを繰り返し本書の通りにできる事にチャレンジ中。来週は三読目にして解説通りに作成できることを目指します。それだけ、初心者にも読みやすい本書でした。お勧めです。
webページが表示されるまでという題名が気になり購入。サポートサイトもあり何とか全て記載通りにできた。完全初心者には難しいかも？
「Webページが表示されるまでの流れ」の部分で「Dockerを利用する方法を誌面では説明しています。」とサポートページにはあるが、特に明記はなかった。開発環境は Linux を前提にしていて、初心者には2章から進められない人も多そうだなと感じた。
図形が少し苦手だった息子に冬休みの課題として与えました。基本応用問題で基礎問題とは違うような気がします、ステップアップに良いかと思います。
日能研数学の副教材では、図形中心の問題集は少ないです。ウイニングステップは分野別に分かれていて、４年生、５年生、６年生すべてに図形の分冊があります。段階的に図形の基礎を習得できます。６年生は入試問題中心です。学力が自身ない方は４年、５年から。ＡＢＣ難易度で学習し易い。
Linuxの低レベルプログラミングの初心者であっても、良くまとめられて考えられた文章とサンプルプログラムによって軽快にシステムコールを学ぶことができます　それぞれのサンプルプログラムは、そのシステムコールの動作を確認できるだけの最低限の短い構成となっており、コードを入力しながら読み進めてもさほど負担にはなりませんちなみにUbuntu 64bit環境で問題なくサンプルが動作しています（ご参考までに本書の初めの32bitアセンブラのサンプルを動作させるには、32bit版ライブラリであるlibc6-dev-i386を事前にapt-getしておく必要があります）
Linuxのエンジニアではないので、あまり詳しいわけではないですが。Cからシステムコールを読んだ例などが書かれていて、とても分かりやすいです。低レベルでこうやって動かしているんだなぁというのが感じられるので、自分はWindowsメインですが勉強になっています。全体的に読みやすい工夫がされていて、よくデザインされていると思います。ぱらぱらと読んでも面白いので、教養としては悪くない本でした。
表紙の右下に対応しているディストリビューションが小さく書かれていますが、この書籍に対応しているのは Fedora, FreeBSD, Solaris のみです。その点だけが致命的に残念な点で、私は Ubuntu でさっそく第一章からエラーとなりました。
Head First C ➡︎ ふつうのLinuxプログラミングという流れでＣ言語の復習をしてました。前2冊でもうちょっと説明が欲しいなと思ったところ(システムコール)が詳細に説明されています。Ｃ言語のリファレンスはこの本とCリファレンスマニュアル第５版で充分です。この本を読んで詳解UNIXプログラミングとLinuxプログラミングインターフェースを読み進めるスピードが早くなりました。著者に感謝です。
データベースのバックアップについて、読み切れる分量でうまくまとめてあります。
RACの物理構成を踏まえたバックアップ・リカバリを行う際の注意点について大変参考になりました。ただ、本の中で行われている検証例において、コマンドの表示結果に対し、目的に対して期待した結果がどのように得られたのかの説明が足りないのでは？と感じることもありました。
バックアップリカバリはデータベースでは重要なテーマだけに、しっかり理解したいところですが、わかりやすさと網羅性を兼ねている本、というのはなかなか無かった、と思います。この本は、その二つをカバーしています。Oracleの基本はマスターした、と思っている人が読むと、知識が整理でき、さらに新しい発見もでき、とても良いのではないでしょうか？
実際にMySQL Clusterを構築する上で必要な情報が集約されていました。MySQL Cluster導入にぐっと近づける内容です。
以前、書名の「ビッグデータ」の文字を見て一般向けの解説書と思って買ったものの、実際にビッグデータに触れる機会は無さそうなので読まずに放置してあったのにふと目が行ったので、改めて開いて見たところ、我が偏愛の「DAG」(p.200以降)型のデータ構造やPythonのスクリプトの話も載っている真面目な技術書だと分かったので星4つにします。この本の具体的な内容についてもレビューに書くべきかも知れませんが、既に増補改訂版が出ていて今からこの旧版についてコメントする意味は無いので省かせていただきます。
こんな人におすすめできると感じました: 「通常のRDBや業務システムを扱ったことがあるが、これからBIや機械学習のためにデータを扱い始めたい、あるいは勉強していきたい」。この本では、データに関する基本的な用語、Hadoopを起点とするエコシステム、データパイプラインの冪等な実装などを解説し、最終章では実際に手を動かして簡易的なデータパイプラインを構築する方法を紹介しています。以下のような用語を、自分の言葉で人に説明できるかと問われて「No」 or 「あいまい」である人にとって、この本は助けになると思います。分散処理システム、分散ストレージ、列指向ストレージ（フォーマット）、データウェアハウス/データマート、BI、MPPデータベース、スタースキーマと非正規化、クロス集計、時系列データ、構造化/非構造化データ、NoSQL, Hadoop、Hive、Spark、Presto、バルク型/ストリーミング型データ処理、データパイプライン、ワークフロー、データフロー、etc...
社内にはRDBでJoinかければいいや、程度のデータしかないのですが偉いひとがビッグデータだの人工知能だのやりたがるのでお勉強用に購入。技術的な内容は非常にわかりやすく書いてあり、データインフラ構築のコツも障害発生時のリカバリまでガッツリ書いてあります。サンプルコードの内容はざっくりなので、すぐ使えるサンプルコードがほしい人は他を当たってください。……結局、非構造化データから構造化データを取り出すという根幹は変わっていないのね。ということは構造化データをどう読み解くかというのは変わらないのね。どうも弊社に限らず、Hadoopにデータを放り込んでPythonのライブラリをインストールしてサンプルスクリプトを走らせれば「機械が勝手にETLを行い、勝手にディープラーニングの全ハイパーパラメータをチューニングし、最適な施策を探して人が分かる形で結果を教えてくれる」と思い込んでいるえらい人が多いようです。
ビッグデータにおけるデータパイプラインに使用される各技術を概観するための本。データパイプラインとは、発生したデータを取り込んで使いやすく加工し、分析で利用できる状態を作り出す作業。本書では画像や音声といった非構造化データは対象外で、構造化・半構造化データが対象。内容的には、Webを検索すれば入手できそうな情報が多い印象を受けたが、初心者ではそもそも何を検索すればいいのかがわからないし、ビッグデータのエコシステムではオープンソースがたくさん存在しておりどれが現時点で主流なのかも判断がつかないため、手っ取り早く全体像を把握するために購入。自分の目的にはとても役に立ったが、それほど技術に深入りした本ではない。前半をもう少し薄く、後半の技術解説がもう少し深ければなお良かった。あと、著者はトレジャーデータの社員であるが、概ね公平に記述されていたと思う。
2019年3月に読みました。現時点でデータエンジニアリングをする上で知っておくべきツールのリスト（Insight Data Sciense提供）と、本書での解説の有無です。見たとおりほぼカバーされていてとても助かりました。パイプラインとは何か、概要を理解するにはとても良い本だと思います。Airflow - 有Kafka - 有Hive - 有Spark - 有Presto - 有Flink - 無PostgreSQL - (MySQLは有）Elasticsearch - 有Hbase - 有
題名から様々なビッグデータ技術について概念のみ大雑把な解説...と誤解されるかもしれないが、実際に手を動かしながら、様々な技術でビッグデータの分析を試しながら理解できる良書。今となっては、やや情報が古い部分もあるが、それでも十分に活用できる。
ビックデータを扱ったことがあるエンジニアにはあまりむかないかも
HadoopとNoSQLを利用したモダンなDWHの構築・運用を知ることができます。RDBでDWHを構築していて、ビッグデータに耐えらず困っているという人は、ぜひ読んでもらいたいです。ただし、インストールや設定などび具体的な内容は書かれていないので、そこは自分で調べる必要があります。個人的には、データを取り込むためのデータパイプラインやデータのビジュアル化について、色々な方法が紹介されていたのが良かったです。
HadoopやSparkの技術書はたくさんある中で、ログの格納やETL~分析までをカバーして実務的な全体感を見通せる、数少ない貴重な本。オープンソース・ソフトウェアだけでなく、AWSやTableauなど商用のソフトウェアでデファクト・スタンダードになっているものも挙がっており、実務に近い。システム構成はWeb系など大量のログを扱い、スピーディーな分析が求められる業界が念頭に置かれているような印象。先端的な内容を含む分、今後新しい技術が出たタイミングで時代遅れになる部分もあるような性質の本ではある。
この本を読み始めた背景としては、”バッチ型”と”ストリーミング型”のデータ収集・加工のフローの全体を抑えたいと考えていたことがあった。特定の要素(例：Hadoop/Tableauなどなど)だけを取り上げるわけでなく、全体のアーキテクトやその際の選定ポイントを抑えるのに役立った。個人的には、ビックデータのインフラ部分だけにフォーカスするだけでなく、テーブル設計・整備（データマートの非正規化や再ラン可な構成）の地味だけど大切な部分がしっかりフォローされている所に好感が持てました。
入門書で買いましたこれからＷＯＬＦをやろうとした人オススメですネットで調べるよりこの本で調べるのがいいです
もちろんそうじゃない人にも良いと思うが、ともかくコモンイベント周りで自分なりのシステムを作りたいとき、このハンドブックをリファレンスとして使うと痒いところに手が届き、Wolf RPG Editorの低レベルな挙動についてもかなり正確なメンタルモデルが構築できる　（と、思う）作者さんがプログラマーなので、同じプログラマー向けに「欲しい情報・解りやすい説明」という物の勘所をバッチリ押さえられている印象
値段はそこそこする割に内容はあまり濃いとは言えないが、初めてやる人にはすごいおすすめ。やる前に読め、というかこれ読まなきゃはじめるなというぐらい初心者に優しい。ＲＰＧの作り方からはじまりウディタの基本的な使いかたはこれ一冊ですべてわかるはず。自分も普通にこれ読んでＲＰＧ一つ作った。ただやっぱりやる気が必要。あと表紙に書いてある通りＲＰＧの作り方しか書いてないがシューティングとかやりたいなって人でも読んでおくとあとあと使える部分が出てくる。
第一,二章は基本システムを使った解説のためネット上でもある程度資料は見つかりますが、第三章のコモンイベントを作るために必要な知識については、2019年7月現在では具体例を含むまとまった資料がサイト消失等によりほぼないため非常に助けになりました。その第一,二章についてもRPGを作るうえでのテクニックやイベントの作り方などが解説されておりとても為になります。
「WEBに全部のっている」「WEBで見る方が速い」というセリフをよく聞きます。もちろんそれはそうなのですが、WEBで調べながらの学習というものは、わからない個所だけを場当たり的に学習していくことになりがりです。この様に書籍の形態になっていると、通しで学習ができますし、関連項目の情報など書籍ならではのメリットもあります。またPC関係なしに、ベットに寝転んで勉強することもできます。とりあえず、読破してしまえば、基本システムまではおおよそ使いこなせるようになると思います。内容はWOLF氏の言われていた通り、基本システムまでです。コモン制作などの続編もも期待したいところですが、いかんせんマイナーなので難しいのでしょうかね。ちなみに付属のCD-Rはネットで配布されている本体やサンプルゲームなどなので、あくまでもオマケ程度の物です。これがオリジナル素材セットなどであればいっきに値段以上の価値が出てくるように感じるのですが・・・
具体的なシナリオの進め方、進めるにあたっての条件設定など、わかりやすくまとめられております。右も左もわからない方にはオススメ出来る一冊だと感じております。一つ注意する点は、条件設定の特定の項目をどのようにして開くのかなど、多少飛ばす箇所もあります。添付写真をよく見ると何とか解決する事も可能ですが、どうしても分からなければ、そこだけネットで検索すればほぼ解決できると思います。
内容はEditorの基本マニュアルといった所。スクリプト状の命令文が紙面にどどんと出てくるため、まったくの初心者には不向き。かといって、自作システムのhow toが網羅されているわけではない。この本を買うべきなのはツクール等で最小限ゲーム制作した人でネットで調べるのが面倒な人だと思う。
ＣＤ−ＲＯＭにサンプルとして収録されているＲＰＧを参考に、『WOLF RPGエディター』の使い方を１つ１つ覚えながら実践して読み進めていくタイプの本です。【内容】・第１部　基本システムで短編ＲＰＧを作る・第２部　基礎知識・第３部　システム自作テクニック内容は初心者向けですが、帯に書かれているように『やる気』が必要です。ツールの使い方を覚えることに時間がかかりますので、やる気がない方にはオススメできません。ただ、第１部の第２章まで読みながらゲームを作り、実際にサンプルゲームが出来上がると「確かに自分で作ることが出来た」という達成感が味わえました。第２部では、第１部で使わなかったコマンド等を含めて、『WOLF RPGエディター』の基本的な機能全般が紹介されています。自分でＲＰＧを作っていて、困ったときに開くと便利そうなパートです。第３部にはＲＰＧ用のシステム自作の初歩テクニックが載っています（十数ページ）。ここまで出来たら楽しそうだなという印象を持ちました。この本で特に面白いと思ったのは、本の途中に挟まれている著者のコラムです。著者は数々の個人制作ゲームを作っているので、その経験に基づいたアドバイスは大変参考になりました。次の著書にも期待したいと思います。
イベントコマンド、データーベース（武器、装備など細部まで）を自分で新しく作って追加して使えるようにしたい。どうすれば、いいのでしょうか？。もし、それに関して記載されていれば私の理解不足ですみません。
要点ごとにしっかり整理されていて、使いやすいと感じた。試験の種別と、レベル別に分類されている点も良い感じである。
不正解の選択肢についても、殆どの場合はその理由を述べられており、自習に役立ちます。一方、"読者特典のWebアプリ"は、翔泳社IDへの登録が必須です。これはすなわち、住所氏名電話番号といった個人情報を提供しなければアプリは使えないという意味です。さらに、500問という問題数はすべての試験区分を含めたものです。受験する対象によって範囲外となる問題がいくつも含まれることに注意が必要です。
これと午後試験用の同シリーズのテキストで無事PM試験に合格しました。
午前Ⅱの試験区分でどの問題が出題されるかがわかりやすいです。でも1年で二つの種類の硬度試験を受けるのは大変な労力がいるので、これだけで午前Ⅱは大丈夫。といったことにはなると思います。ただし、ほかの分野が全く出題されないというわけではないので、ざっと見て、自分の受験する試験と関連性が高いものを選んで読むことができます。特に、セキュリティとネットワークは関連性が高いので両方読むといいですね。誤答選択肢についても解説が出ているので、類似問題が出ても対応しやすいと思います。いずれにしろ、過去問を100%解けるようになることが合格への王道ですから、頑張ってほしいと思います。
いろいろ悩みましたがこちらに決めた理由は以下の通りです。学習内容が包括的にまとめられていて学習しやすい解説が端的にまとめられていて自分に合っていた。ビジュアル的にはカラーページがいろいろあってよかったです隙間時間などにサクッと学習できそうです。自分にとってこの資格は決して楽なものではないと思います。相当な時間をかけて取り組まないと合格は厳しいでしょうが、これで勉強がはかどるかもしれません。ま、これ一冊で合格かどうかは自分の努力次第ですね。
午前Ⅱは受ける資格によって出題範囲が異なりますが、本書ではどの試験区分において出題されるかといったことがひと目で確認できるようになっています（問題文の上方orページ右下の端に書かれている）これにより自分の受験する試験と関連の薄い問題を避けて読みすすめる、といった形で時間の有効活用ができます全分野が網羅されているので、使用時期としては一通り試験範囲の学習を終えてから、ということになるのかなと思います解説は正答選択肢だけでなく誤答選択肢に関しても詳しい解説がなされているので、解説をしっかり読むことで単純な問題演習だけでない学習効果が期待できるでしょう重要箇所が赤字で記されているので、付属の赤シートを使いつつ学習や確認を進めていく、といった使い方もできます
教科書というよりは問題集である。解答解説は簡略簡潔だが、一通り勉強を終えている人なら問題なく理解できる。計算問題の解答解説は、解法の一例を示すだけの箇所が多い。解答の根拠がガイドライン等である場合は、ガイドライン等の該当箇所を引用して示す。「苦手な分野があるのか無いのか」探るのに使える。
情報処理技術者試験の問題集です。2022年度に出題される可能性の高い問題だけを著者が絞って掲載をしているようで、合格までの勉強時間が時短になりそうです。解かなくてもよい問題を飛ばせるのは、効率が良いですね。資格試験を知り尽くした著者だからこそできる教科書だと言えます。全500問のWebアプリも使えるそうなので、コストパフォーマンスが高い書籍だと思います。
試験の合格には過去問のやり込みが必要だと思うので厳選された500問の問題集は満足できる問題数だと思います赤シート対応＆付属で、問題のすぐ後に解答と使いやすいつくりです繰り返し解くことで知識の定着が図れるので、取り組んで損はないと思います
情報処理系各種高度レベル試験の、午前試験の対策本です。各問の上の部分に対応表というべき一覧と、小口側に索引的になっているインデックスがあり、午前Ⅱがどこがどれに対応するかというのが読みなれないとなかなか混乱します。午前Ⅱの区分については、自分が受ける試験の色分けを小口で見たほうがわかりやすいかな。飲み込むと理解できます。問題の形式は、赤シート付で、とにかく問題を解いていく形式。問題の後にすぐに解答があって、問題を解いたら即座に確認と学習に移れるので、利便性高し。予備模試形式でなければ、やはりこうしてすぐに答え合わせができるほうが、便利ですね。やはり出てくるのは過去を踏まえたバリエーションなので、解いていくと力がつくかと思います。巻頭の解説は受験についてや試験分析などいろいろ載っていて、この部分も読んでみると役に立ちます。私はまだ巻頭解説を読んで、すこしはじめたばかりですが、学習はしやすいと感じました。
論理学や集合論の話が出てきて初心者には難しかった。ただ、SQLの背景には奥の深い学術的な背景が広がっていることは感じられた。二値論理から三値論理に拡張されるとどのような発展があるのかをもう少し理解できたら面白そう。
Kindle版のレビューになります。まだ読み始めたところですが、目次がないのが謎です。  書籍版は持っていないのですが、目次はあるはずですよね？ページ番号も6860ページもあることになっていて謎です。  1ページめくると20ページほど進むので、辻褄はあっている模様？文字検索ができない。  他の書籍でも文字検索ができないのは多いので、仕方ないのでしょうか？しかし、読破していないと読みたい箇所を探す事ができない現状のフォーマットには疑問符がつくばかりです。改善されることを願ってやまない。でも、本の内容は良さそうなので星は3つです。追記：2014/10/27文字検索できました。でも、目次はないですね。追記：2014/12/21Android版Kindle(Ver 4.8.1.10)では目次が表示されました。しかし、自分が使用しているiOS版(Ver 4.6)では表示されていません。Kindle Fileなどは持っていないので、未確認です。Android版では目次が表示されていたので、星4つに致します。
fontの問題があるようでソースコード部分が表示されないときがあります。紙の本のfontとはだいぶ違いそのせいで、kindle版は非常に読みつらいです。kindle版でイライラしたので、夜中に買いに出かけ、本屋でやっぱりね！気分になりついつい紙版も買いました。内容はそれくらいいいです。初心者向きではなく、中級くらい向きで、記述の技法、考え方の理解を実例ベースで深める部分に重点が置かれています。特定のDBMに関する記述はほとんどありません。そのために、エキスパートを目指すのであれば、例えばPostgreSQLを使うのであればそれようの解説本が必要になります。内容は、なかなか良いのですが、なんとなくコードの最適化のレベルが低いような気がします。もっと他に書き方のバリエーションが存在する場合も多く、「達人」であれば、その辺りどのように考え、どのような選択を行うのか、説明があると素晴らしい本になりそうです。副問い合わせを行うときは、処理時間はN^2になる可能性を考えたほうが良いと思います。中のコードの例は、本編+2重の副問い合わせみたいな例もあって、実行時間が心配になることもあります。
SQLの基本的な構造がわかる目的に適しています。直接SQLを書くよりアプリケーション層からAPIでSQLにアクセスすることが多いので細かい設定は知る必要がなかった。けど、大枠の考え方、基本的な構文の構造、効率的な設計などを知りたかった。そういう目的に適正ていました。直接SQLをがんがん書くレベルで知りたい場合は公式ドキュメントで十分でしょう。
半分読み物ですね。しかし、そこがいいです。SQL文のポリシーや集合論、DBMSの高速化がわかって、納得して、スマートなSQL文を書けます。CASE式、Having句、自己結合、相関問い合わせが軽く使いこなせたらいいなあ。なにか、すっとする内容でした。
「入門書でSQLの文法・関数の使い方は身に着けたが、複数の関数の組み合わせパターンや効率的なSQL文の書き方はどうすんねん」そう思ってた私にはピンズドの本でした。本代はかかりましたが、"SQL テクニック"とかでググるよりストレスなく技術を上澄みできます。
サポートページがあり、利用しながら読み進めることができました。但し、本文に対応するサンプルデータが一部無く少し残念でした。参考書としては良かったです。
インターネットの連載記事を読んで面白い内容だと思い、書籍を購入しました。SQLでもこんな事が出来るのだと感心しました。ただトリッキーな内容もあるので、実践にすぐに役立つかは不明です。
SQL初心者でしたが、例題を踏まえながら書き方のテクニックをわかりやすく学ぶことができます。内容は少し古いですが、初心者にオススメの一冊です。
Kindle版を購入し、iPhone6 Plus で利用しています。内容は他の方もおっしゃっている通り中級者向きですが、具体的な内容でわかりやすく、ステップアップに適していると思います。iPhoneのKindleアプリでは、目次も索引もあり操作性に問題は感じません。
SQL SERVERのAdminに対して、大切な本です。
中級以上のスキルレベルを持つ管理者が対象です。インストールなどの初歩的な項目は省かれています。流れとしては構築よりも保守に力点が置かれて、保守に必要な監視やチューニングに実務的な説明をしています。フェールオーバークラスタは構築から詳しいです。フェールオーバークラスタは、障害パターン別に復旧手順までカバーしています。SQL Server 2008でのフェールオーバークラスタの構築と管理がこの本の個性を出しています。フェールオーバークラスタを採用しているシステムの管理者は「買い」の本です。
Canvaの進化した多機能だけでなく、画像生成まで出来てしまうとは驚き！自分が使ってた頃よりもかなり素材や拡張機能も多くてビックリです！暇な時いじって見ますー
Canvaは私も使うことがあるので、紹介にあった機能の一部は使ったことがありました。とても便利です！他にもまだまだ知らない機能があったんですね！大変参考になりました！
Ｃhat GPTとCANVAを組み合わせることで、多種多様なことができるのに驚きました。使える種類や方法が詳しく書いてあり、CANVAがよくわからない自分でも理解することができました。使いこなすまでには、時間がかかりそうですが試してみたいと思いました。
CANVAの存在は知っていましたが、いろんな機能が新しく使うことができ、文章を作ってくれるAIも使うことができると知りました！また、Chat GPTとCANVAを使ったAI画像までできるなんてすごい！実際に試してみたいと思います。
CANVAはいつも使っていて、最近出来ることが増えたのはしっていましたが、その何倍も知らないことがありました。今回、この本でわかった内容を試してみたいと思います。
もともと神ツールだが、AIでさらに簡単さが増しました。ChatGPTと組み合わせれば、かなり効率的にデザインができることが分かりました。
毎日使っているのキャンバ。こんなに多くの新機能が追加されているなんて知らなかった...！袋文字は最近発見しましたが、消しゴムとか全然知らなかったです！とても参考になりました。ありがとうございます！
キャンバって使ったことなかったけどchatgptを使うとこんなに便利になるとは知らなかった。めちゃくちゃ良い事教えてもらいました。
CANVAは使っていたけど、ここまで機能が進化していたのには驚きです。特にAI画像生成は面白そうなので、早速試してみたくなりました。AI初心者におすすめです。
問題を解きました
初めての返品でしたが、あまりたいへんではありませんでした。注文する前に確認しましょう。
レッスンが進むとそれなりに知識がないと難しいと思う。
テキスト形式では、段階的に操作方法を覚える物が多いです。CD・DVD等が同梱されており、それに沿っての学習で、自分には合っていませんでした。退職者であり、使わないでいると、キーボード操作もおぼつかなくなります。練習と操作方法の復習・確認用には、演習問題が多い此方の方が、やり応えが有ります。回答・必要な素材は、ネットでダウンロードして使用する方式です。2016用と有りますが、検定試験用として捉えず、演習問題ですので、オフィスバージョンに拘らずに、似たような作表・計算表を作れれば良かったので、気楽に取り掛かれたのも良かったです。
良かったです！ありがとうございます
内容は、良かったです。まだ少ししか、やっていませんが、実践的です。
ちょっと意地悪な問題も出てくる、実用的な本。本当に説明がなくて、最終的な結果の画面が表示されているだけなので、応用力が身につく。（ヒントはある）例えば、グラフの問題でも、まったく切り口が違う問題が、複数出てくる。説明がなく、薄い本で、税抜きたったの千円。使い方として、問題がわからなかったら、調べずにすぐ解答を見る。考える必要はない。なんだそうかと思ったら、参考書や、ネットでやり方を理解する。空白のブックから入力して作成するタイプの本ではあるが、時間がムダなので、第２章から始めることをオススメします（Lesson21までのブックは自分で作る必要はない）1周したら、もう一度やってみる。最初の頃にやった問題は、程よく忘れるので、反復学習が役に立つ。MOSを目指すためにも、購入必須。
ドリルで基本を学んだ後に、これで演習をやると良いと思います
かなり幅ひろく実践的なRedisを使った実例が解説されている良書。決して入門的な内容ではなく、高度な内容が含まれれるので、タイトル通りの入門を期待している人には、少し重いと思います。(原著のタイトルは、確か「Redis in Action」だと思うので、そもそも入門として書かれていた訳ではなく、邦題を決めるにあたって「入門」となったのではないかと思います）Redisを単なるKVMとしてだけでなく、バリバリ活用したい人には、良い内容だと思います。実践的に役に立つテクニックが多数ありますし、そもそもRedisでそこまでできるのか！という驚きがあります。書籍のかなりの分量をしめるサンプルコードは、Pythonで記載されているので、Phythonに慣れている人には、より分かりやすいと思います。Kindleだと折り返しやページの切り替わりでPythonのインデントが分かりづらくて読みづらいので、「紙の書籍」がオススメです。
Redis入門ということで、ある程度の内容がまとまっている感じです。ただ、特筆すべき良さも悪さもない感じです。
入門なんて名ばかりで、プロフェッショナルむけのコマンドリファレンスです。動きだけ説明し、皆さんで美味しく調理してくださいたい内容です。KVSの基本わかってないと辛いかな。
5年以上SEをしていますが、知らないこともあり勉強になりました
この本、私には合いませんでした。全体的に議論が浅いです。たとえば、データ設計のアンチパターンとして「ねずみ算：結合する表が多すぎる」というのがあり、その「典型的な原因」として以下のものが挙げられています。・SQLの規約を作っていない。もしくは規約が守られていない・SQLのレビューをしていない・性能テストをしていない・単体テストフェーズで実行計画の確認をしていない・将来を想定した多量データでテストしていない「結合する表が多すぎる」に対して、この説明では一般的すぎます。それに、これらは直接の発生原因ではなく、その問題を回避、発見できなかった理由です。性能テストの有無などは、その問題が発見できなかった理由にはなりますが、問題を引き起こす原因ではありません。性能テストの実施、SQLのレビューなどは、原因としてではなく、対処として記する方がすっきりすると思います。原因については、「なぜ結合する表が多くなってしまうのか」という点について、要件上避けられないことなのか、設計者のスキルによるところなのかなどの根本的な原因を明らかにし、記述すべきだと思います。具体例が少ないのも不満です。SQL に関わる問題であれば、「Cプログラミング診断室」のようにそのコーディングの実例を示して欲しいものです。結局、「結合する表が多すぎる」というアンチパターンの説明を読んでも、多いとはどの程度なのか（何を以って、多いとしているのか）、多くてもそれが適切であるのはどのような場面か、そういった詳細を判断できるほどには至りません。それから、そもそも、設計・開発の指針を、アンチパターンの形式で記述することにどれほど意味があるのでしょうか。「インデックスを適切に設計すべし」と言えば済むところを、「データ量の暴力」、「過ぎたるはなお及ばざるがごとし」とよくわからないパターン名で症状を分類し、アンチパターンの書式に無理やり押し込む。それこそ、「問題点を説明するのにアンチパターンの書式に頼りすぎる」というアンチパターンではないでしょうか。
自分がDB担当になる前に読んでおきたかった一冊です。DBエンジニアとして4年ほど過ごしましたが、ここに載っている事例の半数近くを体験しました。特に、1章のデータ設計、6章設計やテスト、運用のあたりはほぼ遭遇しました。本書にはアンチパターンとその解決策が提示してありますが、本書の解決策を提案しても社内の政治力で負けてしまうことが多いので殆ど役にたちませんでしたがアンチパターンを作る前に食い止めるという意味で本書を読んでおくことをオススメします。
アプリ、インフラ、ＰＭとよくあるパターンがまとめられていると思います。特に、バインド変数やコネクションの再利用など、システムを作る上では基本的なことですが、守られていないこともあり参考になると思います。絵で見てわかるＯＳストレージネットワークに比べると、読みやすい内容になっていると思います。インフラにはそこまで強くないけど、アプリケーションはそこそこ組んだことがある人向けではないでしょうか？感覚的には３、４年目の社員か、オラクルマスターを少し取得して、自信をつけてきた人に読んで欲しい内容です。
表紙にもある通り、実際にあったダメなDBシステムを反面教師にして回避策を学ぶ本です。読んでみると「あ〜、あるある！」というアンチパターンも多かったです(「データの保持期間を決めていない」とか「不法占拠」とか)。内容も明快でとても読みやすいです。私は2日ぐらいでほとんど読み終わりました。全体を通して感じたのはちゃんと本番環境と将来を見据えて設計、テストしなきゃダメだってことです。ローカルPCと数件のテストデータで開発しても、ちゃんと動いているように見えるだけで実際には使い物にならないことが多いです。ちゃんと使えるシステムにしようと思うと色々なことを考慮しなければならないわけですが、この本はそういう「色々な考慮点」をうまくまとめてくれていると思います。システムを設計したり開発したりするときのチェックリストとしても非常に有用なのではないでしょうか。
歴史とは何かと考えてみると、《現在》が存在するためには、過去からの連続（或いは非連続）による変化の結果それは形成されている。と考えた時、すべての物質は歴史を持つ事になる。また、人類史とは、人工的な技術 ［言語、技術、文化・・etc］によって創作された人為的な制作物であり、それらは過去の変化のほんの一部を現在に継承する物と言える。　「歴史は繰り返される」、「人類は歴史に学ばない」と言った言葉があるが、歴史というのはある面では虚構の産物であり、その殆どは現在の都合に合わせて、ねじ曲げられる存在であり、実質的に鑑賞物以上の価値を持たないのかもしれないと思う。ただフィクションと明らかに違うのは、創作の根拠や対象が物質的に存在する事であり、その部分の評価が歴史を複雑にしていると思う。　本書によれば、中国は近代以降政治的混乱の中、欧米に助けられ、学術的な面では一貫して海外の知識や技術を求め続けたとある。1909年の中国人留学生にアメリカが求めたのは、アメリカで学んでキリスト教文化を身につける事だったが、中国の目的は、アメリカの技術を得る事だった。大学的なシステムの再建も外国人に助けてもらった。特筆すべき例は清華大学で、同大学は「義和団の乱」のアメリカへの賠償金から捻出した基金で設立され、教官は主にアメリカ人で、アメリカの大学に進むための予備校として始まった。その時代、中国は日本にも多く留学している。　1949年に中華人民共和国が誕生してからは、ソ連に接近し科学技術のインフラを中央に集める体制に変わった。基礎科学より、応用科学が重視され、1950年代からは重工業に力点が置かれるようになった。この時期、ロシア人の科学者や技術者から莫大な恩恵を受け、その一つが核兵器製造プログラムである。それに加え、中国の核開発における最重要人物である銭三強と楊承宗の二人は共にフランスで学び、「科学技術委員会」の委員長で、初期の核開発プログラムを指揮したニエ・ロンジェンは革命前にベルギーに留学している。　その後、毛沢東の政策が続くが、最大の失敗は「文化大革命」であり、戦略的に重要なプログラムが止まってしまった。　文化大革命で国が退廃した後は、手段を選ばず技術を入手する必要性がさらに高まり、国を再建する必要性に迫られた。科学技術重視の新しい政策は、「国家高技術研究発展計画」で具体化した。通称「八六三計画」と呼ばれ、中国を世界レベルの国にするためのカギとなった。　以上、近代以降は海外に依存して、様々な手段や、政策で海外技術を入手し自国の技術力等の国力を高める政策をとっていることがわかる。本書はその入手方法やルート、産業スパイについて詳細に記述されている。　本書によると、中国が急速に力を付けて来たのは、2000年前後以降のウェブによるオープンソースの情報収集を推進してきた所にある。中国が他国との相違点は、その行為のスケールの巨大さにある。オープンソース情報収集者は機密情報が機密解除されるスケジュールを綿密に調べ待っている。９０年代末には中国が「世界の工場」になると共に、多国籍企業が研究開発施設を劇的に増やし始めた。2000年には30ヶ所だったが、2010年には1200ヶ所に急増している。中国には外国技術移転組織が多数存在し、アメリカにも中国の技術移転組織が多数存在し、アメリカから中国に通じる複数のルートやネットワークが出来ている。　例えば［華源科学技術協会］。中国との結びつきについては「20世紀が中国にとってアイデンテティーや世界で自分の場所を見つけることが困難な時代だったとするなら、21世紀は中国が舞台の中心に戻る時代になる」という理由を挙げている。　産業スパイに関しても、「FBIが操作している産業スパイ事件のうち、およそ３分の２が中国が関係している」と語っている。例えば、原子物理学者のピーター・リー（李）はのちに起訴された記録に「中国の科学技術力をアメリカのレベルまで高めるのを助けたくなり」、自分が関わっていた慣性核融合による核爆発のシミュレーションの研究について話したと言う。　アメリカ国家防諜室は2011年に『サイバー空間でアメリカの経済機密を摂取する外国のスパイ』と言うレポートの中で、「中国は世界で最も活発でもとも執拗な経済スパイを行なっている」と断言している。　中国側の対応は、2010年にグーグルが侵入された事に、中国外交部のスポークスマンは「中国の法律はいかなるハッキングも禁止している」と答えた。　中国に対して、アメリカは科学技術関係の大学院に進む学生は減少しつつあり、研究予算は減少し、製造業の空洞化が止まらない。将来のアメリカの競争力には黄色信号が灯っている。　中国は世界のトップレベルの施設を作って世界の科学界から優秀な科学者を引き入れようとしている。世界の優れた人たちが、今後もアメリカに来続けることが期待できなくなっている。中国は世界が多極化する事を強調し、中国は世界の優秀な人たちが中国に集まることを望んでいる。　以上に加えて考察すると、アメリカと中国を比較した時、歴史と土地に着目して見ると共通点がいくつか見られる。それは、どちらも広大な土地を持ち、多民族国家であると言う点。その点で、中国は多極化する世界の受け皿となるだけの体力のある国家である事は、過去の歴史や中華思想の存在からも伺える。相違点は、先鋭的か保守的かと言う所。アメリカはフロンティア精神の強い国であり、海洋国家であり、歴史の浅い国。中国は歴史の古い国である事、大陸国家、同胞を大事にする文化であり、つまりは保守的な要素の強い国だと思う。中国に世界の文化が集中する時代は、歴史が強調され、保守的な要素が強い世界になるのではないかと個人的に推測している。　本書は、経済に関しても少し記述されており、IMF(国際金融基金)のスポンサーがアメリカから中国に移り、IMF内部でアメリカとヨーロッパが分裂する可能性が高くなった。なにしろ、アメリカの財政はすでに破綻している。世界は本当の意味で、新しいシステムを必要としている。　中国の高度成長も、そろそろ鈍りつつあり、大気汚染や物価上昇、ゴーストタウンの出現、役人の腐敗、急増する負債などネガティブな要素も多く、富裕層の47パーセントは外国に移住したいと思っていると言うレポートもある。　EUでの支配力が強いドイツは中国との結びつきが強い。EUは将来の通貨システムとして金本位制のシステムを考えており、中国も金本位制の仮想通貨〔デジタル元〕を準備している。EUの〔デジタルユーロ〕が手を結べば、国際通貨としてのドルの地位は急降下してしまうだろう。　中国が今後、産業スパイと技術転移システムを辞めることはあり得ない。日本は防諜システムを充実しなければ、世界からさらに引き離される事態になり兼ねない。　以上、ブロックチェーン技術によるデジタル通貨が現代のマグナカルタとなるかは、確定してはいないが、遅かれ早かれ、ドルは国際通貨としての地位を今後下げてしまう状況にあり、先端技術に追随していくことが、日本が世界から遅れないための要の一つかも知れない。本書からは、中国の近代成長と世界覇権の変遷について考えさせられる内容となっていると思う。本書から個人的に考察すると、まず日本は防諜システムを拡充させなければならない。文化的には、歴史が古い国であり、海洋国家であり、米中のどちらにも対応できる国であると言えると思う。ゆえに、米中摩擦の緩衝国として、それなりに力のある国家として存在し、両者の均衡のバランスの要となる席を獲得していくのが今後の方針としては妥当ではないかと思う。中国はまだ台頭して来た段階で、将来世界の中心になるかどうかはまだ見極められない段階にあり、日本は様子を伺いながら自国の底上げをしていく事が今後の方針として良いのではないだろうかと思う。
大変参考になりました。日本も他人事ではないと思います。日本人は人が良すぎるので、是非、多くの人に読んで欲しいです。日本と同じ価値観を共有する欧米先進国の方にも読んで欲しいです（最近の事件では、積水化学工業の技術情報（世界トップクラスのシェアを誇る「導電性微粒子」に関する情報）を中国企業に漏洩したとして、大阪府警が１０月、不正競争防止法違反容疑で男性元社員が書類送検された事件（産経新聞インターネットニュース）など過去にも多数の新聞記事やニュースなどで報道されています。）。また中国以外にも韓国やロシアによるスパイ活動で数多くの技術情報が漏洩した新聞記事やニュースを見ました。
衝撃的な内容です。中国政府の基本姿勢として、中国が自ら基礎研究を行いその事業化を目指すのではなく、海外での基礎研究をあらゆる手段（公開情報、海外中国人、対内投資、情報機関、サイバー攻撃など）を最大限活用して奪い取り（一種のアウトソーシング）、それを中国内に還元して事業化することを「中国独自のイノベーション」と呼び、これを行う企業の法人税を減税したり、このようにして作られた製品を政府調達で優遇するなどの取り組みを進めているそうです。このような考え方は、例えば中国政府の科学技術部の政策ジャーナルに掲載された「先導的なイノベーションと模倣するイノベーション」と題された記事によく表れているそうです。この記事ではイノベーションを「率先創新（先導的なイノベーション）」と「模倣創新（模倣するイノベーション）」の二つに分け、以下のように主張しているそうです。・人はとかく前者を評価し後者を無視したがるが、実際には後者（模倣）のほうがずっと重要。・技術とは独占的に保護されるものではなく、開かれたものであり移転できるものであるため、創造性を強調するのは誤りである。中国は先導的なイノベーションを盲目的に追及するべきではない。それはエネルギーと機会の損失である。本書ではこのための具体的な取り組みが網羅的に整理・分析されておりますが、例えばオープンソース情報の収集・分析方法として、海外の科学技術関係の定期刊行物、会議記録、レポート、政府刊行物、専門書、工業規格、製品サンプル、パテント書類、新聞、図面等を100万人以上の人間が協力してデータベースに登録することにより、2005年の統計では延べ2700万人のユーザーがこれらの科学技術情報をWebデータベースで閲覧しているとのことです。また、科学技術に関する情報だけでなく、外国の組織や個人に関する情報（例．経歴・達成事項・著作・活動領域、中国の訪問歴等）なども広く収集し、データベース化しているそうです。洋書も含め、中国の産業スパイについてこれほど網羅的に記載された書物は他に見たことがありません。ハイテク企業・大学・研究機関・政府関係者などにおいて広く読まれるべき書物と考えます。
日中関係を専攻する若者にはお勧めです。日本には中国側の意図、能力を正確に測る必要があるからです。
著者たちは米国政府やインテリジェンス関係の会社に勤める中国専門家です。本書は中国が主にアメリカにおいてどのように科学技術を収集しているか、を整理した本です。8章構成で、第1章は中国の近代化以降の西洋の技術を取り入れてきた歴史、2-5章は公開情報や外国企業の研究開発施設の誘致、学術交流などを通じた合法的な情報収集について、6-7章は留学生や帰国した研究者を通じたややグレーな情報収集、8－9章がスパイ活動、サイバースパイについてです。第10章は他の技術移転の方法や日本からの技術移転について少し触れています。産業スパイというものの、完全に非合法なのは8－9章だけで、その部分の追及は若干浅め（要は中国のスパイの仕方は他の国とあまり変わらないという主張と、アメリカで発覚したスパイ事件のリストぐらい）です。合法的な情報収集活動の方は、どのような機関が関係しているのかについて結構丁寧に整理されているので、こっちの方が読みごたえがあります。こういった記述面のバランスの違いもあって、読後感は、実は産業スパイというタイトルはあるが、アメリカが太っ腹に色々と情報公開をしているのを丹念に利用している、という当たり前にどの国もやるべきことを大規模でやっているということが中国の情報収集の強さなのではという感じです。
本書は主として産業・技術分野における中国の脅威について、米国の中国研究者やサイバー戦略研究者によってまとめられたものである。著者によれば、中国は他国が開発した技術を安価に取得することで、投資を早期に回収し、結果として現在のような経済大国になったと主張する。その手法は、国を挙げてオープンソースの情報を収集し、外国企業との合弁や研究開発施設の誘致で技術を呼び込み、海外留学生を増やし、外国の技術を中国に持ち帰って来ている。また、情報機関による産業スパイも行えば、サイバー攻撃によって産業・技術情報を盗み出すことも行っているとする。中国に技術が安易に移転されていることを認識し、その対応策を講じる必要がある、というのが筆者の警告である。
本書は、信号を周波数成分に分解する離散フーリエ変換(DFT)、高速フーリエ変換(FFT)、離散コサイン変換(DCT)について、数学的な基礎を丁寧に示した良書である。各章で結論の数式まで導く過程を丁寧に解説し、例題で信号に具体的な数値例を当てはめて計算することで信号処理を体感できるように配慮されている。このため、タイトルが「やり直し」になっているが、初学者でも大学の教養数学を履修した方なら十分読み進めることができる。過程が冗長的というレビューもあるが、本書で繰り返し述べられているように、計算過程を読者自身で確認、検証することを求めているためである。信号が具体的にどのように処理されるのかイメージできるかが大切なので、数式の展開を目で追うだけの読み方は初学者はすべきではない。時間はかかったがペンを片手にコツコツと丁寧に読むことで、これまで漠然としていた信号処理の数学的なバックグラウンドが理解できるようになった。
分かりやすく書かれています。DFT・FFT・DCTなど、デジタル処理で何かをやるためにはとにかく数学の理解が必要ですから、「やり直し」でも「これから」でも、一度は読んでおくと良いと思います。
すべてを読んではいませんが、内容的には、１．簡単なケース（DCTなどでは、４点）で演算式の導出２．その後、一般式を定義するスタイルのようです。そのためか、１．の導出までの過程が冗長ななところがあり読み疲れました。個人的には、一般の証明、定義の後、具体例で確認するといった普通のスタイルが好みです。
仕事でデジタル信号処理を扱うことになり、その基礎理解を深めるために購入した。大学の時、教養の数学をかじった程度の数学能力であったが、難なく読め理解することができた。内容は演習中心で手を動かしながら理解を深めていくというもの。簡単な例で直感的な理解を深めた後、一般式を導入するスタイルをとる。このため数式に苦手意識のある人も理解を深めることができる。ただ、数式−証明型のきちんとした数学書に慣れている人にとってはやや物足りないかもしれない。再勉強したい人だけではなく、初学者にもオススメな入門書。
本書の構成は以下のようになっています。第1部 基礎第2部 DFT第3部 FFT第4部 DCT第5部 総括第3部のFFT(高速フーリエ変換)の章はやや説明がわかりにくく、他のFFT解説書を購入して、補完することにしました。第3部の内容は、全面的な改訂が望まれます。全体としては、非常に説明がていねいで、私のような初学者でも、信号処理の基礎である離散フーリエ変換(本書では、意図的にディジタルフーリエ変換と呼んでいます)をかなり深く理解できました。実務に直結する細かい情報が盛り込まれており、著者のサービス精神が感じられました。これ以上により深く理解したいという方は、フーリエ解析学の専門書を購入するしかないと思います。
解法から、その意味まで、非常にわかりやすくまとめられた本です。初心者でも、真剣に読めば、信号数学の何たるかを理解出来ると思います。しかし、第二版を購入したのに誤字が多く、正誤表も公開されていないので、本当に理解した内容が合っているのか、もやもやが残ってしまいます。正誤表が公開されれば、買いではないでしょうか。
趣旨は良いが、とにかくくどすぎる。読者に対して、数学力を想定していないため、おそらくこのようなスタイルになったのであろうと考えられる。例えば、和をとる部分に、Σを使わずわざわざN-1個の和を計算するような表記があるが、見辛い。また、幾つか論理の飛躍がある部分がある。離散フーリエ変換の一般式がいきなりP61で出てきている。明確な理由付けもなく。この部分が最も大事であるにもかかわらずきちんと説明が載っていない。まったくの素人に説明しているわけではないのだし、もう少し読者の数学力を想定し、スマートかつ各部分の有機的なつながりが読み取れるように解説すべきである。それと、具体例で解説するより、一般論で解説する方がはるか分かり易い。数学がそこそこ出来る人にとっては読みきるのはかなり辛いであろう。通常、理論を理解するとき、一般論を理解してから各事象への適用例を学び頭に定着するものである。しかし、この本では、いきなり具体例が延々と述べられており、その数式の意味が後のほうに冗長に述べられている。理工書としては、この順番は好ましいとは思えない。
この本の題名は、「やり直しのための通信数学」となっていますが、フーリエ変換とウェーブレット解析について解説されています。ウェーブレット変換についての本はほとんどが、数学的立場や信号処理理論的立場から解説されているので、この本のように電子工学的見地から解説されている本は少ないと思いますし、具体的に解説されています。よって、ウェーブレット解析を電子工学的立場から勉強されたい方にはお勧めの１冊だと思います。
第1部、第2部まで読みましたが、読むのに疲れますし、時間がかかります。導入、例題、演習、まとめ、のようなスタイルをとっている本です。DFTに限っていうと、綺麗にまとめきれていない印象を受けます。冗長で回りくどい表現を通して、ぼやっと理解できる程度です。好みが分かれる本だと思います。
現在開発中の参考書として、活用します
内容はわかりやすかった。関数やスクリプトなど理解しやすかった。
私のようなデーターベースの素人には少し高度すぎる内容でした。ただ、部分的には、私でも理解できるテクニックもありましたので、早速取り入れて使っています。もう少し平易に書いてもらえるとよりよかったです。
紙の本の版面を画像化しただけのニセ電子書籍。文字検索すらできない。内容は中級以上向けで、実践的な内容でデータベースアプリの作り方を指南してくれる。プロっぽいテクニックが披露されているが、なぜそうするのかの説明がない。リレーションとテーブルオカレンス等は難しい概念だが、基本原理の説明がなく、とにかくこうすればできる、真似をしろ的な教え方。わかる人はわかるのだろうか。学びたい人には少し不親切だ。
本誌を全て読み切ったわけではないが、初歩の段階から懇切丁寧に説明があり、理解しやすかった。
今まで木下唯一郎氏の作品は愛読していましたが問題解決に結びつくもっともっと親切なガイドブックを御願いします　検索項目をもっともっとつけて下さい例えば検索、ソートした結果ソート後の表示を思うように出来ない時は？
まさにプロが現場で積み重ねてきた知恵が惜しげも無く書かれています。書かれていることには、なぜそうした方がいいのか、その方法の欠点は？など、分かりやすく説明されているので経験の浅い方にはよい指針となると思います。小手先の工夫ではなく運用に耐えられる作りはどうすればいいのかに迷っているなら、ぜひ手元におくことをおススメします。
長年Filemakerを使って仕事をさせて頂いておりましたが、様々な疑問などが解消されてとても助かりました。ありがとうございます！
分かりやすい、使える方法が。満載です。実践的な内容で書かれており、ソリューションの開発を始めて、いろいろな壁にぶつかっている人、スキルアップして、さらに優れたソリューション開発を目指す人には、本当に役立つと思います。
今までのマニュアル本では、初級編か高度なシステムをとらえたものがほとんどでしたが、ちょうどその中間で悩んでいる私などにとって非常に助かるガイドです。このソフトは実はとても使い易いものだったんだと思えるようになりました。
大きく分けて、SQLの構文・テーブル設計・もう一度SQLという流れ。SQLとはなんぞという層を対象にしているようですが、知識0でこれを読むのは中々苦労すると思う。構成というか、目が滑る文章できつかったです。MySQL/MariaDBとPostgreSQLの構文の違いなど、記載されている点は良かったです。
テラバイト、ペタバイト級のビッグデータに対し、リアルタイムで分析結果を返すシステムのアーキテクチャの紹介を記した著作。アーキテクチャを要約すると以下の３層に大きく分かれている。・バッチ層　データを完全正規化したマスタデータを持ち、この全マスタデータから様々な用途に利用するための汎用的な中間データとしてバッチ処理を行いビューを作成しサービス層に提供する。　データは追記のみ。理由としてデータ汚染が起きた場合、追記のみなら問題の起きた行を取り除いてビューを再計算すれば正常化できるようにする。　高レイテンシの計算を行う。・サービス層　バッチ層の作成したビューを持つ。テーブル結合などはコストが高いので事前に冗長なデータを含んだ非正規化した状態のデータに加工したビューであり、各用途のクエリに特化したビューを複数保持している。　インデックスが張られ高速にアクセスできるインタフェースを提供。　ランダム読み出しをサポート。・速度層　バッチ処理に含まれなかった新規データ分のみによる計算結果を数ミリ秒単位で返す。以上により、膨大なデータ量をバッチ層で事前計算しサービス層でビューとして提供する事で、リアルタイムの計算は、サービス層のビューの計算と、速度層の新しいデータ分の計算を処理したものだけで済む。本著作では数ミリ～数十ミリ秒での応答を想定している。また将来的に更なるデータ量増加などの負荷増大にも対応し、各層ごとに分散スケール可能なミドルウェアを使用し耐障害性も考慮している。・バッチ層：Hadoop(HDFS),MapReduce・サービス層：ElephantDB・速度層：Apache Cassandra,Apache Kafka, Apache Stormなど更に、分散環境で計算を行う環境でありながらも、同一であったり集約するデータはサーバ間で分散されないようにハッシュなどを利用して一つのサーバに集約して複数サーバ間で応答を待つような事が起きないようレイテンシを短くしたり、サーバ内のデータ配置も同一パーティションに連続記録されるよう考慮しディスクシーク時間のレイテンシを短くするなど工夫も行っている。そしてこのアーキテクチャを元に、次の機能を例に、データ論理設計や実コードによる実装の紹介を行っている。各機能ごとにデータの特性があるので、独自の機能追加を想定した場合の参考にもなる。・時間区切りのURLごとのページ閲覧数・時間区切りのURLごとの重複なし訪問者数・直帰率分析ビッグデータをリアルタイムで分析し、かつ各機能レイヤごとにスケール可能であるという、今までの古い伝統的なミドルウェア類、論理データ設計の経験がある場合は複雑に考えて仕舞いがちかもしれないが、本書のアーキテクチャ(ラムダ・アーキテクチャ)は至ってシンプル。分散スケールや耐障害性機能の大半をミドルウェアの機能に頼ったのもあるが、過去のレガシーな呪縛を脱ぎ捨てて新しく柔軟な膨大なデータを扱えるリアルタイムシステムの事例の一つとして大変興味深く読むことが出来た。スタートアップでゼロベースからアーキテクチャを構想する経験のできる貴重な著作だと感じた。記載概要メモは以下の通りです。------------------------------------------1.ビッグデータを扱うための新しいパラダイムビッグデータによってリレーショナルデータベースなどの伝統的なデータベースシステムは限界にきている。NoSQLデータベースなどは、巨大なデータ集合に対してスケールで対応できるが、これらの新技術を効率よく扱うには複数の技術を組み合わせる必要がある。ビッグデータに対しより単純な代替手法としての新しいパラダイム＝ラムダアーキテクチャ伝統的なデータベースを使ったスケールはデータベース負荷がボトルネック。例）　->処理タイムアウト発生。　->アプリとデータベース間にキューを挟んで複数のイベントを纏めてデータベース更新頻度を減らして対策。　->さらに利用者増加により負荷が上昇。水平分割（シャーディング）を迫られる。シャーディングのたびにデータ格納整理、多数の稼働中のワーカスクリプトの管理、アプリケーションの修正など複雑さが増していく。　->サーバ数が増える＝耐障害性問題が深刻になっていく。　->追い打ちをかけるようにプログラムバグによるデータ汚染。ビッグデータ技法がどう役立つのか：・分散システムの特性を意識：シャーディング、複製などはシステムが代わりに行ってくれる。スケールも、こちらはノードを加える程度で済む。・データを不可変にして扱う仕組みにすることで対人為障害などによるデータ破壊を防ぐ。ラムダアーキテクチャの持つ特性・頑強さと耐障害性・低レイテンシの読み出しと更新・スケーラビリティ・汎用化：様々なシステムが利用できる・拡張性・非定型クエリ：任意のクエリが実行できる・最小限の保守・デバッグ可能性：問題時に必要な情報を提供できる完全増分アーキテクチャ・ディスクの索引が増分方式で追加されたり変更されたりすると使われなくなった領域の一括回収（コンパクション）が起こる。コンパクションはCPUとディスクI/Oを大量に消費する副作用がある。->全体障害への懸念。ラムダアーキテクチャでは、コンパクション不要。高可用性と一貫性の両方を実現することは不可能。　ネットワーク分断障害が終わってから結果整合性を回復するにはアプリケーションからの大量な支援が必要。分散データベースが高可用性実現のため保存情報の全ての複製を複数保持しているので、ディスク障害やネットワーク障害があっても情報を使い続けられる反面、複製によって受け取る更新が異なり、複製の内容が枝分かれしてしまう。・何らかのミスがデータベース内の状態を変更し、データ汚染を引き起こしてしまう。同一性情報の扱い　例：複数のIDを利用するユーザを同一人物と換算して閲覧履歴情報を分析する。　もしも、新しい同一人物と紐づけられる情報が後からわかると、あらゆるクエリの結果が変わる可能性が出てくる。完全増分型では、エラー率が高い近似法を使わざるをえない。ラムダアーキテクチャと比較しても完全増分型はレイテンシとスループット両方でパフォーマンスに影響が出る。データアクセスもランダムアクセスになるのでHDDのシーク時間がボトルネックとなるのでSSDが必須となる。ラムダアーキテクチャ：下記の3つの層で構築される・バッチ層　数十テラ〜数十ペタの全データをバッチで事前計算する層　マスタデータを保持・サービス層　バッチで計算したビューへのアクセスを提供する層　何らかのデータ汚染が起きても、バッチ層からデータを再計算すれば良い。・速度層　バッチ処理開始より後の新しいデータの増分を低レイテンシで応答する。　データに対してランダムアクセスを提供。　ユニークユーザ換算などは、近似値計算を利用することになる。------------------------------------------2.ビッグデータのためのデータモデル正しい情報を生み出す源＝マスタデータの集合。唯一データ汚染から完全に守る必要あり。サービス層、速度層のデータ集合を失うことになっても、バッチ層のマスタデータ集合から再構築できる。・非構造化文字列の方が生データに近い。これらを保存すべき。・データは不可変にする。データは追加するのみ。更新はしない。　->耐人為障害性を持たせることができる。・データ汚染が起きたらビューを再計算する。・データの変更履歴を辿れるような形で追記のみの実装->簡潔さ。・事実ベースモデルによるデータ格納方法を推奨。　データをこれ以上分解できない基本的な部品まで分解する方法のこと。　事実を一意に同定可能なデータと断定できるようにnonce(64bit乱数値)をスキーマに追加する。・データ集合に任意の期間の変更履歴をたどることができる。　データ汚染が起きても、誤った事実のみ削除することで正常化する。・バッチ層、サービス層で利用するデータを分けることで、正規化、非正規化データの良いところを利用できる。　->バッチ層：正規化　->サービス層：データをクエリ加工用にテーブルを結合した非正規化されたデータを利用できる。結合処理が不要になりパフォーマンスも上がる。・データの格納について　グラフスキーマというデータ集合の構造を記録したグラフを事実ベースモデルを利用して格納する手法と、必要フィールドが全て存在するか定義をチェックする強制可能スキーマを使う。------------------------------------------3.ビッグデータのためのデータモデル詳説Apache Thriftによる静的に型付けされた強制可能スキーマを定義・フィールドの存在と、期待する型のみチェック。　値の範囲や、存在しない未来のタイムスタンプ値の禁止などの高度な属性確認はできない。------------------------------------------4.バッチ層のデータストレージ分散ファイルシステム・ファイルを複数のバイト列で構成しディスク上に連続して格納できる。・ファイル圧縮が自由。・細かい粒度のパーミッションシステムは不可変性を強制するのに都合がいい。・クラスター構成でマシン追加でスケール。・耐障害性設計がある。Hadoop分散ファイルシステム(HDFS)・ファイルは複数ブロックに分割され、ブロックはクラスター内の複数データノードに分散される。・ファイルを多数のノードに分散->並列処理を可能にする・ブロックが複数ノード間に複製->個々のノードがダウンしてもデータにアクセスし続けられる。・ネームノードがそれぞれのファイルに対するブロックを追跡、格納先を管理。データの垂直分割を考慮・データ全体から、関数の計算に関係するデータだけにアクセスできるようにデータ分割を容易にする。例)：日付ごとにフォルダ分けフォルダ内のファイル操作でシェルなどでデータ集合の操作を行うには低レベル言語すぎるので注意：操作自動化などのライブラリを利用すべき。　->Pailライブラリ（後述）------------------------------------------5.バッチ層のデータストレージ詳説Hadoop(HDFS)を採用。HDFS API紹介。MapReduceと連携する場合は小さなファイルを格納すると計算性能が著しく低下するので注意->事前にデータを集約すべきPailライブラリ・複数の小さなファイルを別フォルダに統合するときに利用。・MapReduceを使って実装されている。・データの垂直分割にも対応。・データ圧縮にも対応。ストレージに格納するまでの流れ　生データ->Thriftオブジェクト->Pail垂直分割------------------------------------------6.バッチ層事前計算としてマスタデータ集合をバッチビューに変換する。バッチビューはサービス層に取り込まれ、サービス層はインデックスを作成することで中間データへの迅速なアクセスを可能とする。速度層はバッチビューに取り込まれていないデータを使った低レイテンシの更新を提供する。バッチ層で全てのあらゆるパターンを事前計算できるとは限らない。汎用的な中間結果を事前計算しておいて、後でクエリが来てからその中間結果を使って処理を完了させる。性能と耐人為障害性、アルゴリズムの汎用性の観点から、増分アルゴリズムは使わず、再計算型アルゴリズムを使う。データ格納の問題URLごとの重複なし訪問者を調べる場合。再計算型は、URLと訪問者数のマッピングのみで済むが、増分型は、増分前の訪問者も比較できる様ユーザIDなどを保持しなくてはならない。　->従って再計算型が優れている。　更に再計算型は、データ汚染が起きても、問題のデータを修正、削除さえすれば、再計算で回復できる。バッチ層では、再計算型アルゴリズムをサポートし、補助として一部増分アルゴリズムを使用するなどに留めておく。MapReduce・分散計算のパラダイム。スケール可能で耐障害性の高いバッチ計算のための基本要素を提供。・キー・バリューのペアを操作するmap関数とreduce関数の視点で計算処理を記述できる。　例)：単語数カウント　-> map関数：テキストの行ごと実行し、単語ごとに単語、カウント１を設定　-> reduce関数：同じ単語ごとにカウントを集計・同時実行、マシン間のデータ転送、実行計画の作成の詳細はMapReduceフレームワークによって抽象化される。・map関数、reduce関数がクラスター内で並列実行される。・耐障害性も備える。バッチ処理を考える自然な手法としてパイプ図の利用。バッチ層は、高レイテンシの計算をする。それを逆手にとって実時間ではできない深い分析やコストのかかる計算をすべき。------------------------------------------7.バッチ層詳説パイプ図をほぼそのままマッピングするツール：JCascalog・MapReduce計算を表すために合成可能な抽象化を提供するJavaライブラリ。・MapReduceに対する高レベルインタフェースを提供。------------------------------------------8.バッチ層の例：アーキテクチャとアルゴリズム下記機能の設計・時系列に並べたページ閲覧数　時間、日、週、月など粒度ごとに事前計算し、あらゆる範囲計算のパターンを効率的にカバーする。　それぞれを組み合わせ最小の要素数で結果を出せる様にする。・時系列に並べた重複なし訪問者数　時間枠ごとの訪問者集合へランダムアクセスが必要だが高コスト。　正確さを犠牲にする概算アルゴリズム(HyperLogLog)の活用。・直帰率分析　2つの訪問間隔が３０分未満の場合、同じ訪問の一部。１つだけなら直帰と判定新しいデータの併合タイミング　バッチを動作させる度に、新規データをマスタデータに併合して計算を行う。　これにより、全てのバッチビューが全く同じマスタデータに基づいていることを保証。　バッチフローワーク中に新しいデータが入るのを防ぐ。------------------------------------------9.バッチ層の例：実装Thrift,Pail,JCascalogなどを利用して実装。------------------------------------------10.サービス層バッチ層が計算したビューに索引付けしてインタフェースを提供。事前計算したデータを迅速にクエリできる様になる。ハードウェアがHDDの場合はディスクシーク時間を考慮する。データを同じパーティションに連続して格納できる様に設計する。正規化されたデータのクエリは遅くなるので、敢えて冗長な情報を含むように表を結合したビューを作成する。->非正規化。マスタデータを含んだバッチ層と、サービス層を分離することで、バッチ層を正規化し、サービス層をクエリに最適化した非正規化を共存させることができる。矛盾やデータ汚染が起きたらサービス層をゼロから再計算すれば簡単に修復できる。サービス層データベースを複数マシンに分散。分散しているので耐障害性も必要。ランダム読み出しとビューの一部に直接アクセスするため索引をサポート。ランダム書き込みは不要なのでオンラインコンパクションは不要。------------------------------------------11.サービス層詳説ElephantDBを利用。・シャード数、サーバ数、複製数を指定可能。バッチビューを一定数のシャードに分割し、それぞれのElephantDBサーバがシャードの一部を担当。------------------------------------------12.実時間ビュー増分計算に基づき結果を返す。サービス層ビューに取り込まれる前のデータだけを扱う。速度層ビューは一時的。データがサービス層ビューに取り込まれたら即座に破棄できる。一般的にレイテンシがミリ秒レベルの資源効率に優れた方法で実時間ビューを作成する必要がある。・ランダム読み出し：索引付け・ランダム書き込み・スケーラビリティ：実時間ビューを多くのマシンに分散・耐障害性：ディスク、マシンに障害が起きても実時間ビューの取得は正常に機能させる。オンラインコンパクション、並行処理におけるトランザクション分離レベル機能などのロックは、扱うデータがサービス層よりずっと少ないので、切迫した状況は起きない。CAP定理：一貫性、可用性、分断耐性のうち、最大2つを実現できる。分散データシステムが分断された時は、一貫性か、可用性のどちらか一つしか選べない。可用性を選ぶと、障害中には古いデータ結果が返される可能性がある。速度層の実時間ビューのアーキテクチャの選択・非同期更新（キューなどを挟む）　バッチ更新を実行できるので帯域が増加　変動する負荷にも対応・同期更新　データベースに直接要求を発行し更新が処理するまでブロックする。------------------------------------------13.実時間ビュー詳説Apache Cassandraを利用。・カラムナ（列指向）データベース・ソートマップを持つソートマップ・入れ子になったマップで標準的な操作（追加、検索、範囲取得）が可能・複合カラムにより、マップを任意の深さに入れ子にできる。RandomPArtitioner:ハッシュマップの様にキーをクラスタ内のノードに均一に配置OrderPreservingPartitioner:キーを順番に格納。ソートマップ。------------------------------------------14.キューイングとストリーム処理耐障害性と再試行可能性が必要。・単一コンシューマキュー設計：　キューからイベントを読み出す際、イベントをその場で削除しないという考え方に基づいている。イベント処理成功(ack)か失敗(fail)を通知してから削除を判断する。->複数アプリケーションで利用するには、キューのコピーが必要->キューサーバの負荷増大。・複数コンシューマキュー設計：　イベントの消費済みと未消費状態をキューからアプリケーション自体に移す。ストリーム履歴の任意の時点からイベントストリームを再生する様要求できるようになる。-> Apache Kafkaキューとワーカーモデルは時代遅れ。ストリーム処理・逐次処理　タプルを一度に１つずつ処理するが、コードはクラスター間で並列動作する。->システムはスケーラブルになる。　Stormモデル：　->スパウト=ストリームの送出源。ボルト＝任意数のストリームを受け取り、任意数のストリームを作成。ボルト自体は関数の実行、データのフィルタリング、合計の計算、ストリームの結合、データベースの更新などを行う。　->中間キューなしで実装できる。・マイクロバッチ　１６章後述------------------------------------------15.キューイングとストリーム処理詳説Apache Stormでstormモデルを実装。ZooKeeperでワーカーの割り当て場所と他のトポロジ設定情報を管理。Apache Kafka(分散メッセージング), Apache Cassandra(カラムナデータベース)と連携。・スパウト＝Apache Kafka・ストリームメッセージ処理＝Apache Storm・読み出し、更新用データベース＝Apache Cassandra------------------------------------------16.マイクロバッチストリーム処理逐次ストリームは障害中に最低一回の処理しか保証しない。マイクロバッチにより、少しのレイテンシを犠牲にして、耐障害性のある正確さを手にすることができる。逐次処理より高い帯域を実現できる。・バッチローカル計算　バッチないだけで行われる保持されている状態に左右されない計算・ステートフルな計算　グローバルカウントの更新、バッチをまたいだ状態を保持する計算Apache Kafka：バッチが送信された時に、コンシューマは特定のバッチのどのパーティションからのどのオフセットかを覚えていることができる。バッチを再生する時は全く同じバッチを送信できる->トランザクションスパウト。マイクロバッチストリーム処理計算もパイプ図を使って表すことができる。------------------------------------------17.マイクロバッチストリーム処理詳説Apache StormのマイクロバッチAPIのTridentを使用。------------------------------------------18.ラムダアーキテクチャをより深く学ぶ可変性(CRUD)には基本的に耐人為障害性がない。唯一の解決策は中核データを不可変にすること。バッチ層で索引付けビューを作成し、ビューに対するクエリを低レイテンシで解決する目的がある。バッチ層のレイテンシを下げる方法として増分型にする選択肢もある。増分と再計算の両者の長所を活かす方法として部分的再計算もある。クエリ層：　バッチビューと実時間ビューを利用してクエリに答えること。ラムダアーキテクチャ・耐人為障害性・水平スケーラビリティ・低レイテンシ読み出し、更新ビッグデータシステム構築が伝統的なアーキテクチャに基づいたシステムの構築よりずっと簡単。------------------------------------------以上。
ラムダアーキテクチャの提唱者らがその説明及び実装について記載したのが本書です。ラムダアーキテクチャはバッチ層、サービス層、速度層の３層から構成されたシステムであると説明があります。同アーキテクチャは、定期的に更新し高い信頼性を保証するバッチ層と、逐次対応に重きをおいた速度層とに分ける事が特徴と読んで感じました。両層はそれぞれ得意不得意が出るので、そのいいとこ取りを行えるシステムにする事で従来のデータ管理よりもビッグデータ管理を行いやすくなるとの事です。本書では各層の説明とJCascalogやCassandraなどを使ったサンプルシステムの実装の両方がありますので、概念とコーディングが両方把握できる構成です（コーディングは時と共に修正が必要にはなるでしょうが）。そのため、ある程度Javaの知識は要求されます。ビッグデータ系のシステムを扱う方にとりあえず「これが基本」としてお勧めしても、まず外さないと思われます。大量のデータを処理するという関連で見識を得たい人必見です。
過去に読んだことのある本もあれば、へぇ〜そんな本があるんだと新たな発見があります。どんな方でも読んでみたい本が見つかるはず。
ビブリオバトル(知的書評合戦)から派生した平和バージョン。情報技術分野の研究者たちが「読んでもらいたい」「読むべきだ」と思う本について書評やエピソードを織り交ぜて40編。どの本も興味深い。そして技術を楽しんで、学んで欲しいという本への愛情を感じます。そして、各研究者の本棚を覗かせて頂いているような、未知の本との出会い。ワクワクしながら拝読させて頂きました。専門的なので「私には縁が無さそうだな」と勝手にあきらめていた面白そうな本→『Database Systems: The Complete Book』　英文なので読むのを躊躇していましたが、「まずは目次を見て自分の興味を持った章を」とのこと一文にやさしく背中を押されました　今一度読み返したい本→『理科系の作文技術』　文章書くのが苦手・・・良い「仕事の文章」について再認識。大人になっても大変有益な本なのだと再発見一見関係無さそうだけれど新たな知見を得られる本→『キャズム Ver.2 新商品をブレイクさせる』　ITにマーケティングってどう関係あるのかな？と思いましたが、技術を実用にするための良い考え方を得られました
『IT研究者のひらめき本棚――ビブリオ・トーク：私のオススメ』（情報処理学会　会誌編集委員会編、近代科学社）では、情報処理の研究者40人が、情報処理に関して皆に読んでもらいたい、皆が読むべきだと思う本を紹介しています。私が、これは読まねばと思ったのは、下記の5冊です。●『ハッカーと画家――コンピュータ時代の創造者たち』（ポール・グレアム著）「○ハッキングと絵を描くことにはたくさんの共通点がある。実際、私が知っているあらゆる種類の人々のうちで、ハッカーと画家が一番良く似ている。○ハッカーが（画家のように）ハックしながら学ぶという事実は、ハッキングと科学がどれだけ違うかということを示すもう一つの手がかりだ。○絵画から学べるもう一つの例は、次第に詳細化しながら創ってゆく方法だ」。●『ピープルウエア――ヤル気こそプロジェクト成功の鍵（第3班）』（トム・デマルコ、ティモシー・リスター著）「本書の言葉に、あなたが死を迎えようとしているときに思い出すこととして、温かい家族の絆や思い出とともに、『会社の中に素晴らしいコミュニティを築いたことも忘れてはならない』とある。素晴らしい成果を出すコミュニティを作ることは、個々の成果以上に偉業であり社会のかけがえのない価値となる」。●『THINK LIKE ZUCK――マーク・ザッカーバーグの思考法』（エカテリーナ・ウォルター著）「世界を変える仕事をするために必要な要素はいろいろありますが、著者の考えでは、『情熱（Passion）』『目的（Purpose）』『人材（People）』『製品（Product）』『協力（Partnerships）』の5つの『P』がすべての基本になるそうです」。●『理科系の作文技術』（木下是雄著）「仕事の文書を書くときの心得は、○主題について述べるべき事実と意見を十分に精選し、○それらを、事実と意見とを峻別しながら、順序よく、明快・簡潔に記述する――ことに要約される」。●『たいていのことは20時間で習得できる――忙しい人のための超速スキル獲得術』（ジョシュ・カウフマン著）「○分解＝スキルをできるだけ小さなサブスキルに分解する。○学習＝賢く練習できるように、また練習中に自己修正できるように、個々のサブスキルについて十分な知識を得る。○除去＝練習の邪魔になる、物理的、精神的、感情的障害を取り除く。○練習＝特に重要なサブスキルを少なくとも20時間練習する」。
書籍サイズの制限から文字が小さいが、サンプルデータをダウンロード出来るので確認作業に困ることはない。関数によっては使用例の他にも応用例もあり理解を深めるのに役立った。全体に説明は簡潔だが、ワンポイントやステップアップ等の情報もあり、参考になった。
初心者でもわかりやすく記載されておりよかったです。
ファイルメーカーの辞書代わりにもなる1冊
勉強
わかりやすい
解説写真がふんだんに掲載されており、FileMakerの超基本操作と概念を理解するのには良いと思います。システム開発に必要な情報はFileMakerの公式サイトから入手できるマスターガイドブックで。
仕事上データの統合が必要になり、FileMaker18にて構築しました。
まず書籍体裁は、比較的大判のフルカラー400頁程で、概ね『Windows10』版のスクリーンショット(SS)を大量掲載して、解り易く解説してあります。その内容は、表題通りに【FileMaker Pro 18】各エディションに対応した、指南書＆リファレンスブックと言え、前半200頁程では「フィールド配置＆レイアウト作成」から、優しく詳細に初心者向け解説が行われています。一方の後半では「ソート＆検索＆印刷」と実務手法から、「ポータル＆ファイル変換」そして「スクリプト＆関数」と高度な域にも踏み込み、拘る型の需要にも応えています。書面構成としては、活字解説とSS提示が半分ずつと言う感じで、SSも高精細印刷されているので、虫眼鏡を使えば小さな文字も読み取る事は出来ますが、老眼世代には厳しい感じです。勿論、巻末には索引も用意されているので、逆引きにも対応します。総じて、ソフト開発元【Claris】の初期から洗練されたGUIの影響もあって、前半部は1桁バージョンの【FileMaker】は元より、旧Macバンドルの【(ClarisWorks＆AppleWorks】にも対応する部分は多く、それらのデータベース機能の基礎を学びたいと言う方にも有用です。勿論、後半の専門部分も悪くは無いのですが、基本は初心者向けに編纂されており、関数＆スクリプトは基礎的な紹介のみで比率は少なく、応用方法等は大きく省かれています。従って、その点を理解の上でなら、豪華な体裁の割に価格は抑えられていますので、高評価に達すると感じます。
各段落には使用頻度という目安があり、一見して「今必要じゃないから飛ばそうかな」と思っても使用頻度が☆３つ(満点)だと「ちょっと見てみるか」となる。解説も丁寧で１つ１つの作業工程を端折らずにクリックする個所まで画像で指定してくれている。気になるワード等は巻末のINDEXで調べられるし終始親切な教科書だと思った。
タイトルに基本からしっかり学べるとあるように、基本的な操作や概念を幅広く取り扱った内容になっています。FileMakerそのものの経験があまりない方やMS Accessなら知っているというような方でも理解を深めて、実践的な内容を取り扱えるようになると思います。各説明に図を多く使用しているのも理解を助けます。貴重な本だと思います。
ファイルメーカーは、毎年の様にアップデートされるので企業ユーザーでも追随が大変になってきました。この手の解説書があれば、何が変わったかも分かりやすく、一気通貫で機能を確認できます。あとはスクリプトの解説書があれば困らないかと。私はオラクルのデータ取得にチャレンジしますよ。
ウォーターフォールで開発している企業は多いと思います。そこで働くプログラマは、何らかの不満を感じているはずです。プログラマは勿論、要求者、経営者、全てがハッピーになれる。それがアジャイル開発です。ウォーターフォールからアジャイルへの転身は大変なことだと思いますが、きっと、この本が助けてくれます。また、アジャイル開発を導入している場合も、さらにハッピーな方法がこの本の中で見つかるかもしれません。
網羅的で、資料も周到に裏付けをとってあり、著者の態度もフェアな態度。なのに、なぜかものすごーく読みにくい。まずページが傍注、脚注と注だらけで集中できない。そして、くどい。おなじことを伝えるのにもここまで網羅的にしなければ、もう少し薄く簡潔に述べられたんじゃないかと思う。別に原典なんかあれもこれもポインターを示さないで良い。信頼できるように調査したからって、それを全部披露しないで良い。そういうのは後ろにまとめて参考文献としてのせてあれば十分なのでポイントをもっとまとめることはできなかったんだろうか。資料も良い、材料も良い、見方も良い。構成もルールづけられている。なのに、なのに、なぜかものすごく散漫で、読むのが苦痛になってしまうという不思議な本。読んでも全然ワクワクしない。
ウォーターフォール型の開発を信奉している人は、現在でも多い。私はこの開発手法に疑問を感じ続けてきた。２０年も。ようやく、現段階での最良の方法にめぐり合えたような気がする。
ソフトウェア業界に長くいるけれど、最近の『アジャイル』とやらが、よくわからない。まずは入門ということで、手にした一冊。歳をとって、開発者をまとめるサイドに立つ者にとっては、精神論というか、開発思想というか、かなりコンセプトめいたものが多く、下手にツールの使い方など詳細に入らなかったところは、かなり好印象。完成形の設計書を持たずに、短期間で小さく試して、それぞれの節目で経営層に動くものを必ずデモするという、割りと簡潔なもののように、見受けられた。あとは特徴として、開発者の独創性というか、方向性みたいなものを、かなり尊重した開発モデルになっていると感じられ、社長と言えども、一旦開発が開始されれば口出しはできないと明言されている。印象的だったのは、これを単なるプロセスと位置づけているところ。『プロセスは、副次的な効果しか持たない。一人ひとりの個性、感情、素質、コミュニケーションの方が、影響が大きい。世の中には困難な問題があり、また、扱いにくい人々がいる。いかなる開発手法でもそれらは救済できない。』
でも、個別はやっぱり別で買ったほうがよいです。スクラムも浅かった。
アジャイル開発のことを知りたく、はじめに手にしたのがこの本です。どのような形であれ開発マネジメントに参画し、苦慮した事のある方にとっては、理解できる内容だと思います。この本だけでは、実践レベルのスキルを習得することはできませんが、自分のビジネス環境にあったセオリーを模索する基盤を得られました。著者の考えにより租借された本ではなく、論文や研究報告を元に情報がまとまっているこの本から入ってよかったと感じています。
ウォーターフォール型開発の問題点や当初から問題があるにも関わらず適用された来た経緯など、ウォーターフォールに関する分析は秀逸で説得力があります。重量級のプロセスであるUPが取り上げられている通り、アジャイルというよりもウォーターフォールに代わるインクリメンタルな反復型開発について取り上げられています。本書により、読者は初めての本当のソフトウェア開発に取り組む準備が出来るでしょう。
まず、システム開発の方法論についての整理から始まります。ウォーターフォール型開発の批判、反復型、進化型の開発方法論の説明、いろいろなアジャイル開発の方法に共通する、考え方や特徴説明です。そのあと～ここがメインか～、Evo、XP、スクラム、UPの４つについて、概要、そのプラクティス、成果物、進め方（手順）、適用するプロジェクトの性質、よくある間違った適応方法、Q&Aがあります。最後に、プラクティスを実施する際のヒント～イテレーションの期間は何を考慮して、決定すべきか等～があります。事例は、あまり、ありません。アジャイルの本って、どこか「モヤモヤ」としたところが多いですが、この本は、明解です。内容的には、概要レベルであると思います。しかし、うまくサマリーされているためか、分かりやすかったです。論点も明確です。章や節の長さも、特に節の長さが適切（？）なためか、前読んだ所を参照するのが、非常に楽でした。参考文献、そして参考文献の案内も大変丁寧です。題名どおり、特に「アジャイル」関係の前提知識はなくても、OKです。
a-ok. a-ok. a-ok. a-ok. a-ok. a-ok.
○この本では触れていませんが、前作「～本当は世界一の日本経済」で、増税を促す背後にはアメリカか中国がいると匂わせる一文がありました。日本に世界一になられては困るので、財務省に圧力をかけているのかと（個人的に）思った。○私も上念氏の本に出会うまで、「1000兆円の借金」に洗脳されてきた一人で、テレビ（特にNHKや朝日）や新聞の情報は嘘だらけという視点で観るようになりました。（上念氏に感謝！！）　○「ケント・ギルバート氏」の本などで知ったのですが、オスプレイや沖縄の米軍基地反対運動も「雇われ市民」が日当を貰って演出しているのをマスコミ（特にテレビ朝日）が沖縄の総意、世の中の正義であるかのように報道している。しかし、その背後には沖縄を取りたい中国がいるそう。○STAP細胞もマスコミは小保方さんを悪と決めつけ、総リンチを加えて潰してしまったが、ドイツやアメリカでは再現実験に成功しており、アメリカではSTAP細胞の特許審査の段階に入ったそうだ。（武田邦彦氏のブログより）これも恐らく数十兆円位の利権を手にしたいアメリカが圧力をかけたのだろうと（個人的に）思った。マスコミは都合の悪い事は一切、報道しない。そして日本の政府、マスコミはアメリカや中国には逆らえない。　我々に出来ることは真実を知る努力をしてマスコミの洗脳から解き放たれ、SNS等で抵抗運動をすることだ！！
私、まえがきの時点でビックリした人間です。「えっ、ニュース女子そういう事だったの。思っていた事と逆じゃん」本書は、経済を中心に書かれてあるが、読めば読むほど「官僚とメディアは、どうしてそこまでするんだ」と、思えるほどのノイズ満載。ただ、私もそうなのですが、経済に疎い人間には、記事の見出しだけしか読まない事もあり、専門用語が出てくると、読み飛ばしてしまいます。ただ、この本を読むと、しっかりしないといけないなと、思います。特に消費税。本当に上げるのでしょうか。私達が注意して見ないといけません。今後は、
ありがとうございました。
問題に対する視点が、なかなかです。特に、野党関連、朝鮮関連（なぜ韓国軍が海軍を強化しているのかなど）。この本を先に読んで、そのあと、『増税亡者を名指しで糺す! 』田中 秀臣氏(著)を読めば、もっと経済関連の理解が早かったような気がする。田中先生の本よりは、軽いタッチです。とても理解しやすく平易に書かれていることに感謝しています。
メディアや報道に騙されるなと言いたい事はわかる。この手の本を買う人はそんな事は分かっている。具体例を出してくるんだけど、その反論例がどれも極論であったり、間違っていたりもする。結局、この人も基本ベースリフレ派なだけで、あーそこまでわかっていない経済評論家どまりかとがっかりした。つまるところ、右と左のポジショントークを読んでるだけのつまらない本。具体例の反証が薄っぺらすぎる故に徐々に腹が立ってくるwという事で、素人が読むと、世の中のメディアとは逆の味方を知れるがそれもまた全てが真実ではない事に騙されないように。マーケット含めて、金融政策等のプロが読む場合は、がっかりだし、時間の無駄な本。もー少しまともな人だと思ってたけどなw
○デフレが貨幣不足で発生しているなら、日銀は物価目標を達成するまで貨幣を供給すればいい○バブル崩壊以降、デフレで融資先の見つからない銀行がなんとか食い扶持をつなぐためにやっていたのが債券のディーリング(中略)銀行は本業そっちのけで、債券のディーリングばかりをやった○安倍総理は憲法改正に意欲を燃やしていますが、憲法改正を実現したかったら、先に経済政策をしっかりやらなければダメ○緊縮財政派の石破氏が行う経済政策では、景気は必ず悪くなります
常々マスコミ報道には恣意的なものや、枝葉末節に焦点を当て過ぎているものが多いと感じていましたが、特に政治経済関係について筆者はこれを解りやすく指摘しています。報道を鵜呑みにせず自分でよく考えてみることと、複数の客観的な情報ソースを持つことが大切だと、改めて感じました。
わかりやすく、とても為になりました。どれが本当でどれが嘘か？が実例に基づいて書かれています
日経が間違っているとか、財務省が黒幕とかどうでもいい表題は「完全復活」でしょう。10年で米国が合計30%成長、日本は成長なし。どこが復活している？日本人が貧困化しているのも事実。逆に中国は富裕になった。「日本素晴らしい」論は、売れるから書くのだと思うが、ミスリードです。
「岩盤規制」を読んだ方が、日本経済は本当は好調で、財政再建も済んでいて（IMFの報告でも問題ないとのことです）、消費税増税など必要ないことを理解し、財務官僚の手下と化したメディアの報道にだまされないように一読してもらいたい。これを読んだ後は高橋洋一氏の新刊など定期的に読むようにしていくとよいと思う。
viの本も少ないですがEmacsの本も少ないんですよね。入門書としてみるなら良い本だと思います。残念なのは電子書籍化されていないことです。電子書籍化して長く入手できるようにしておいて欲しいですね
使い勝手のよい環境整備を実施するにあたり、大きな道しるべになります。改訂により最新版 25 に追いつき、読み替えの必要がないため、これから始める人におすすめできます。Emacs はマルチプラットホームながら、活用にあたり、それぞれのプラットホームの事情に多少影響を受けます。著者は macOS を使われており、Windows 版を利用するにあたって、解決しておくべき事情については言及されていません。
初心者から〜中級者向けです。前の本を持っているので見比べて見たのですが、パッケージ系など追加されています。しかし、ネットの情報である程度知ってる内容でガッカリ。筆者の方がどうつかっているか等、もっと加筆があれば嬉しかったです。
非常に良い
Accessのマクロの本が無くて困っていました。随分役立つ内容でした。しかし、もう少し色々な例題が見たかったので、続きの本がみたいです。
マクロとＶＢＡの配分がいい具合にとれていて、よかったと思います。正直、参考書として大事に持っていれるレベルだと思いました。
VBAは内容が理解しにくい本が多い中、大変わかりやすく、ほかのシリーズも購入した。
ACCESS マクロ&VBA開発工房！参考になりますよ！！いろんなサンプルが入っていて、参考になりました。まだ、３分の２程度までしか読めていませんが、これまで自作してきたものが恥ずかしく感じられるほどです。マクロで作ってきたものを少しづつVBAに変換しています。
書籍はpgpool2の内容を期待したが、内容が薄かった。残念。ついでに配送、サポートについて少しコメント。配送業者によって、ポスト投函、ガスメーター、対面の受け取り方がまちまち。戸惑う。サポートに問い合わせると、回答内容不明瞭。以前はサポート良かったのに、これも残念。改善を望む。お急ぎ便はいいですね。
表題通りの内容です。　PostgreSQL本体の詳細については詳しく書かれています。ただ、開発言語から利用する場合の設定などは書かれていません。ドライバーソフトについてもここまで書かれるなら記載した方が良いも良い。pgpoolやpacemakerなどを掲載してるのでしたらドライバーについても詳しく書くべきですよね。そういう所は少し中途半端かもしれない。
今までの仕事経験でOracle、DB2、Microsoft SQL Serverしか触ったことなかったので、PostgreSQLは初めての経験。やはりOracleだとあれなんだけど、PostgreSQLでは？って時に調べる本が欲しかった。数少ないPostgreSQL書籍で良い本に出会えた。
Postgresやるならコレとネットの公式マニュアルがダブルであると心強いと思います。
ＰｏｓｔｇｒｅＳＱＬの構造から、使い方まで。よく書かれてある本。
自分は今までOracleばかり触っていました。RDBMSの内部構造も知りたいと思うようになりましたが、膨大なソースコードの前におうじょうしていました。この書籍は処理内容や参照先の情報が整理されていて理解するのに大変助かりました。DBA向けの書籍は他にもあるので2章や3章の内容に興味がある方は買いだと思います。
いきなり2章の用語についていけずに閉口しましたが、これ、入門書じゃないんですよね。頑張って3章まで辿りつくと努力が報われます。重要な関数については適宜ソースの解説が入ったりしていて、C言語が読めなくても動作概念が分かるようになっています。また、3-20の耐障害性／高可用性については、アーカイブログ、レプリケーションやPacemaker等と組み合わせた場合の高可用性の比較の表があり、これだけでも読む価値があると思いました。PostgreSQL 9.2（本日段階で最新）に対応しているので迷ってるなら早いうちに買った方がいいでしょう。カメの写真の方は、インストールだとかPHPとかJavaのアプリを作ることがメインになっているような気がするので、RDBMSとしてPostgreSQLを極めたいならこっちがおススメです。逆にこっちはインストールの仕方すら載っていません。⇒と思ったらソースインストールの仕方が載っていました。　すいません。。。
著者によるPostgreSQLの関連本は「全機能リファレンス」→「完全機能リファレンス」ときて、今回「全機能バイブル」と、リファレンスからバイブルへと進化しました。"バイブル"とタイトルの変更にあわせて内容もリファレンス部分が減って内部構造の説明のページが増えています。リファレンス部分はネットに任せて本書ではもっとPostgreSQLの理解を深める方向に行こうということなんでしょう。第２章の内部構造と第３章のサーバ管理は必読です。ネットではここまでまとまった情報を入手するのは難しいと思います。私にとって開発作業中に本書を開く事は減りましたが、相変わらず使えるPostgreSQL本です。
内容は懇切丁寧に記載してあり　操作は迷わない。一通り実践すれば　基本操作ができるようになり、操作応用ができるようになります
大変分かりやすい内容でしたただ、操作についての説明(何故さの操作になるか)の説明があればよかった
基礎を読み終えてすぐに応用に取り掛かりました。よくわかるとある通り、よくわかりました。
問題は全くありませんでした！またの機会も利用させてもらいます！！
ACCESSデータベースに大量のデータを登録して長い期間継続して運用するっと言った事が操作だけでできてしまうとは！話に聞いていた以上に感激です。この本で、なるほど！っと思う事が沢山ありました。とっても分かり易いと思いました。印刷だって簡単です。でも、いずれオリジナルな形にしたいな～。それにはVBAとか使うんだと思う。でも、しばらくは操作だけで満足な形にできそうです。
一般的な疑問には十分答えてくれる1冊ですね。買ってよかった！
Access初心者ですが、このテキストが一番分かりやすかったです♪
バージョンの若い本で学習しましたので、再学習のために購入しました。とても分かり易く、おすすめの本です。
CDが付いているので、とても解りやすいです。表紙のところに書いている通り、本当に良く解ります。お勧めの教材です。
自宅PCが2003で職場PCが2010なので、機能アップとコンマドの違いを確認したく、このテキストを購入しました。付録の「2003と2010のコマンド対応表」目的で購入したのですが、大変役に立ち、助かってます。また、アクセスはクエリを使いこなせるかどうかが大変重要だと思いますが、このテキストは説明が丁寧でわかりやすいので、この内容をきちんと理解すれば、今後更に発展してSQLやその他のデータベースソフトの利用や開発に応用がきくと思います。(私は情報系出身で、プログラミングやシステム開発経験者です。)ちなみに2003バージョンでMOSのオフィスマスター取得済で、取得するまでに全てFOM出版のテキストで学習しましたが、このシリーズが一番説明がわかりやすく、合格までの近道だと感じます。合格後は、穴を埋めるように更に深いところを勉強しないと実務では厳しいと思いますが、基礎の土台固めとしては最強のテキストなので、オススメします!
書名をみて購入しましたが、、ちょっと期待はずれでした。翻訳に問題があるのではなく、原書が今ひとつですね。題名で売っている書籍。
この種の技術は問題の本質に泥臭いものがあるが，本書はそこに正面に立ち向かって解法を提示してくれている点．実用書として文句ない水準にある．
さすが開発元のエンジニアが書いた本だけあって、よくまとまっている。Oracle +.NETを使うには必ず参照すべき。もっと難しいリファレンスかと思ったが、要領よくまとまっており、ドキュメントの見本のような、すばらしい出来です。
ODP.NETについての解説はこの本がもっとも詳細に説明されてるかと思います。ODP.NETのインストールからアプリケーションの配布まで、ODP.NETについての一通りの説明が網羅されてます。.NETとOracleを組み合わせた開発はまだ始めたばかりなのですが、開発時はいつもこの本を自分の脇において、困ったときにはかならず参照するようにしてます。
Accessを一通り使いこなせる人が、これからVBAのプログラミングに挑戦しようとするとき、最良の教科書です。私は、東京駅裏の八重洲書房にいき、AccessVBA関係の参考書をすべて見ましたが、まちがいなくBESTです。再版すべきです。
Accessの本はいろいろ読んだが、自分で工夫しようとするとすぐにいろいろな疑問にぶち当たり、ネットで調べてもはっきりしないことばかりだった。結局基本からきちんと積み上げないと、自分で作りたいものは作れないと実感し、そういう本を探してみた。しかし、最近の本はすぐに結果を求めるものばかり。そんな時ネットの検索に引っかかってきた本がこの本だった。しかし、大手のネット通販には「売り切れ」の文字ばかり。ようやく中古のものを見つけることができたが、大変少なかったのには驚かされた。特にこの「入門・基礎編」は中古すらほとんどなかったので、値段は新品の倍ほどもしたが購入した。割ときれいで付録のCDも傷はなく良品である。ただ、汚れているかどうかよりも内容だったので、気にはならなかったが。読み進めると、自分が求めていたものだと分かった。Accessを起動しながら、読み進めている。今まで勘違いしていたことなど自分の理解を修正しながら、楽しく読み進めている。ついでに、中古本がなくならないうちにと、実践編も購入した。何とか読破して、自分が作成したい処理システムを作り上げたいと思っている。緒方典子様に感謝です。また、出品していただいた方に感謝です。
アクセスを勉強するために購入しました。今からですが役に立てたいと思います。
Ａｃｃｅｓｓ初心者にはネットの開発工房が役に立つ。非常に細かく丁寧に指導してくれる。これ以上の教材はないかも。「ＶＢＡは使わない」と思っている方もいるだろうが、クエリの中にＶＢＡやＳＱＬの構文を入れて操作することもあるので、この本は役に立つと思う。少なくても概要を理解しているか、いないかで、今後の活用に大きく影響するだろう。この辺は、いわゆる「わかる」「すぐできる」系の本では身に付かないので、興味のある方には一読の価値はあるだろうし、ＶＢＡを取り入れたい方にはいい入門書となるだろう。ただし、データベースやＳＱＬの概要がわかる本を並行して読むと基礎力が付く。Ａｃｃｅｓｓは奥深いので、浅くても周辺知識を身に着けないと使えないと思います。
ACCESS VBAの入門に最適！！いままで何冊もVBA入門書を購入して来ましたが、この本が入門書としては最適ですね。パソコンを片手にほぼ1週間で読破できました。あくまでも入門書ですね。
緒方 典子氏の書籍の殆どを読ませて頂き勉強させて頂きましたが、実践での「宝の山」でした。どれも、実践的で余計なものは入ってこず、必要十分且つ効率的に学習できました。お蔭様で2000からのブランクが払拭でき大変感謝をしております。同シリーズには本当に助けられました。つい最近でた最新作もかなり解り易そうで、サンプルアプリもシンプルかつ実用的な感じのようです。ぜひ買ってみたいと思っております。著者にはこれからもどんどん活躍して頂きたいです。著者のＷｅｂサイトには時々訪れています。是非未完成の部分もご無理しない程度に追加していっていただければと思います。緒方 典子氏を応援しております。
8年程まえ、著者のHP（魔法使いの開発工房）でACCESSを勉強し、かなり複雑な処理までできるようになって感謝していました。その後、業務上ACCESSをいじることが少なくなってご無沙汰していたのですが、最近また必要がでてきたので、HPを参考にしながら本書も購入しました。（残念ながらamazonでは中古品のみの取り扱いとなっていたので、他のbookwebで購入しました。）内容は簡潔で、テンプが良く、あまり悩まず引っかからずに読み進められます。ある程度の経験者であれば1日で読めてしまうのではないでしょうか？極基本的で抑えておきたい部分に絞っていてくれるので、VBAを始めてみたい人にはとても良い本だと思います。この本を仕上げてから、同じ著者の他の本に手を出されたら良いと思います（私もそうするつもりです。）。
基盤設計時、こいつがなかったら爆死してたweblogic関連の情報はOTN系のサイトにあるPDFを参照するとか、公式の糞難解なマニュアルを読むしかなかったけど、非常に助けられました。伊藤忠さんありがとう。。
１章３０ページで基本構文の説明。その後の章では、アクセスのクエリデザインビューとそのSQL文の解説という構成で、７８個のサンプルクエリを解説している。アクセス自体のSQLは本式のRDBソフトに比べて制限があり方言もあるが、アクセスのクエリ作成画面であるデザインビューとそのSQL文を丁寧に解説してくれる本書の構成は、初心者には学びやすくて良い。アクセスのクエリデザインビューの使用方法はクセがあるが、本書を読んでSQLと見比べれば、理解が進むと思う。エクセルに比べてアクセスはユーザー人口が少ない。結果的に、周囲に師匠になる人がおらず、書籍から学ぶ場面が多い。アクセスVB本はちらほらあるが、肝心のSQL本がほとんどない、というのがアクセス本の状況なので、実はとても貴重な本書である。ただ、サンプル数の水増しを狙ったのか性質の似た関数（例えばmax関数とmin関数)で別サンプルとしてあったり、VBにおけるSQLの使用方法についての記述がない、あるいはフォームからの連携について全く触れていないなど、SQLに特化した作りになっており、ある意味作りの丁寧さにはやや荒い点もあり、この点は惜しい。Part1　SQLの基礎を学ぶPart2　データ検索の活用サンプルPart3　集計・分析の活用サンプルPart4　レコード操作の活用サンプルPart5　テーブル操作の活用サンプルPart6　関数を使った活用サンプルPart7　データベース管理の活用サンプルAppendix　SQL予約語対応一覧サンプルファイルは下記なので、購入前に落としてみても良いかも。[・・・]
ＳＱＬサンプル活用辞典を読んで、とても参考になりました。ＡＣＥＥＳＳでＳＱＬを覚えるにはとてもよい本だと思います。
よい
bit誌に連載されていた、データベース版学園モノ連載小説です。今はやりのツンデレっぽい登場人物もいます。私は読み始めるとはまってしまいました。意外とおもしろいです。私は隠れた名作だと思いますが、意外と知られていないようです。データベースの解説のほうも分かりやすいと思います。レベルは初心者向けです。小説が読めてデータベースの知識もつくので、一挙両得かも。
現在、事実標準であるリレーショナルデータベースの利点と欠点から始まって、正規化のやりかた、データベースの将来の展望まで何度読み返しても、そのたびに勉強になる一冊です。
obj-c経験者に良い。swiftUIでの扱い方を短時間で習得できた。前章や前項で既述の説明であってもこの作者は一貫して省略せず解説しているし、コードのスクショもステップバイステップで一つ一つ掲載して説明をしていて良い書籍だと思う。
短いからすぐ読めるけど、とりあえずCoreDataを使えるようになった気がする。応用を効かせようと思うとまだ勉強が必要。
法体系に基づいてQ &A形式で解説されています。一読すればおおよその体系は理解できるようになっています。利害関係者だけでなく、法制度としての次世代医療基盤法に関心を持つ者にとっても有益な一冊です。
期待はしていましたが、あまり利用しませんでした。
AccessVBAでADOを使いたいと思っていたのですが、最近のAccessVBAの書籍で詳しく書かれている本はあまりありません。本書は非常に古いのですが、ADO、ADOX、DAOについて詳細に解説されています。サンプルファイルはAccess2000向けですが、当方のPC（Win7pro＋Access2010）でもほぼ問題無く動作しました。
MS　ACCESSで古いデータベースアプリケーションを再構築する上で参考になりました。
この本の下位本である初級編を読んでから入りましたので、大変スムーズでした。もし、ＶＢＡを勉強して難しい、やっぱり私にはだめという人がいれば、この本の初級編の本（同じシリーズ）をおすすめしますこの本に載っている事例を全てマクロで行っています。
仕事でアクセスを本格的に使うようになって半年ですが、実際の作業で大変役立っています。データベースを作成していて分からない場合、辞書的に引いて利用しています。用語の解説も詳細で、1冊あれば類書は必要ないと思います。具体的な事例については本書の後半部分か、別に設計中心のものを1冊かうといいと思います。厚い本なので、最初から読んでいくには根気が必要です。
初めて読んだときは全く理解できなかったが、他のVBA入門書で勉強してから読み直すと、意外なことにスッと頭に入ってきた。解説もとても丁寧。文面が硬いので初心者だった私の脳が拒否反応を起こしたようだ。VBAの基礎からADOやDAOまで網羅していて、VBA学習の教科書とも呼べる良書だと再認識した。初級編(マクロ)のVBA化ではあるが、紹介されている事例も大変参考になった。
Access2000を触りだして２年。ずいぶんいろんな参考書を見てきましたが、この本１冊で今までのすべてがわかりびっくりしました。VBAの基本的な設定やルールなどは中々載っていないもの。この本は徹底的に基本から解説してくれているのでちょっとAccessを触ったことがある人ならこれ１冊でことたります。ほんとに感謝です。
この本を一番最初に買い、その後色々とＡＣＣＥＳＳ　ＶＢＡ関係の書籍を買って読みあさりました。しかしなぜかこの本だけは会社、自宅でも手元に置いてます。これ一冊で大概出来ます。正に手元に置いておきたい一冊です。　内容が親切丁寧で、マクロの基本から、ＤＡＯ，ＡＤＯ，ＡＤＯＸの詳細な説明、そしてその比較。なによりサンプルのソースの読みやすさ、簡単さ、実用性に優れてます。　ＡＣＣＥＳＳで開発する際はいつもこの本を手元に置いて参考にしてます。　この本には感謝してます。私にとってＡＣＣＥＳＳ　ＶＢＡでの聖典といっても良いです。　もう本がボロボロになりました。
この本を読んだら、本当に助かりました.やっとADOとDAOの違いが分かりました。データベースの利用するには、この本からです。
この本は20名程度の著者による合作である。著者たちは日ごろからビッグデータと戦い、バッドデータに苛まされ続けている選りすぐりの人たちである。タイトルに処方箋と書かれているがこの本にはこれといった処方箋、あるいは銀の弾丸といったものは書かれていない。数少ないバッドデータを退治する方法：コードを書くことシェルスクリプトやpythonなどを使用して、データをパースしたり、フィルタリングをかけたりする実例もあるが、ビッグデータと向き合っている読者ならば、目新しいことは何もないように思われる。この本を読んでよかったことはデータに対する過度な完璧主義を捨てて、バッドデータとうまく折り合いをつけるということを著者たちの経験を通じて納得していけることだと思う。また著者たちは多様なバックグラウンドを持っており、例えばデータの格納に関しても様々な意見を持っているということが非常に参考になり、あるいは勇気づけられると思う。完全な解決策を求める前に行動する重要性を教えられる。「みんなやっぱりこれで悩んでるんだなあ」この本はそうした著者たちの悩みと限られた解決策について述べられたものであり、読者はそうした告白に共感を覚えるだろう。
どこかの桂木桂馬さんのようなコメントですいません。バッドデータというのはどこにでもあるものです。ですが、品質工学で有名な一節にあるように「幸せなデータはどれも似たようなものだが、不幸なデータは各個の事情があって不幸なのである」というのも真実です。この、各個の不幸な事情をどのように解きほぐして幸せに近づけるか、というのが本書の課題です。正直、これは事例集として見るべきかと考えます。実際のバッドデータはとても社外に出せないようなひどいデータが多いものです。今から手さぐりで社内データの整理をやらなきゃ、という方は読んで損はないと考えます。高いけどね。
タイトルはバッドデータだが、実際には現実世界のデータに関する様々なアドバイス等が書かれた本。内容は広く浅くで、これからデータ分析を始める人にとっては役に立つが、既に関わっている人なら知っていることが多いはず。ただし読み物としても面白いので、後者の人も(監訳者まえがきにあるとおり)「あるある」ネタとして楽しめる。また1トピックが10～25ページと短いのでさくさく読める。
日頃悩んでいることをスッキリまとめてあり、注意すべき視点からの読み物として有用な１冊です。
書名通り、この本ではバッドデータを扱っています。Excelに書かれているデータやテキストエンコーディングの問題など技術的なバッドデータも紹介されていますが、おかしなところがあるデータに対して「このようなおかしなデータは何故発生しているのか？」という一見バッドデータに見えるものもデータが集められた背景がわかると必ずしもバッドデータとは言い切れない、「データサイエンティストは自分が取り扱っているデータが何物なのか理解すべし」ということを説いた章もあり参考になります。一つ残念なのは、誤字・脱字が非常に多く本書自体がバッドデータになってしまっていることです。（笑）
普段から様々なタイプのバッドデータによく遭遇します。本書で紹介されている悪いやつらにも何度も遭遇してきました。また、本書で取り扱われていない悪いやつらの中には良い解決策がないものもあります。悪いやつらと戦う中で、過去自分なりに対処してきたり、本書と同様の切り口で対応してきたものもありました。そんなバッドデータについて、自分とは別の視点からのアプローチで解説されているものは非常に参考になります。本書を読んでいて一番良かったと感じたことは、自分の経験と近い内容が紹介されているので私と同様に苦しんだ仲間がいるのだと勇気をもらえたことです。
【2015/11/16 Update】以前は解像度や目次に問題がありましたが、Kindle版がアップデートされ、問題が解消されています。・Kindleの目次が追加され、章ごとに細かくアクセスできるようになりました。・解像度も上がったようで、ipad miniでも問題なく読めます。　・ただし、ページ自体はスキャンされたものであることは変わらないため、文字列検索はできません。素早く対応していただき、感謝しています。内容については以前と変わらず、HBaseのアーキテクチャからチューニングまでHBaseを使う上で幅広い領域をカバーしており、かつ日本語書籍ということで、まず最初の1冊として読むのに最適だと思います。一方クラスタ運用については、Cloudera上での構築を前提としているため、オンプレ環境で構築している場合には多少やり方が違います。その場合には別途オライリーの出版している解説本なり、オンラインドキュメントなどを参考にされることをオススメします。
日進月歩で新しくなっていくHadoopエコシステムではありますが、HBase 0.98をベースに何ができて何ができないかをコンパクトに日本語でまとめている良書です。最初の方の用語が一部未定義のまま後から説明されることもしばしばありますが、HBase自体がとっつきにくいので仕方ないところはあるかな、と思います。定番の馬本はかなり分厚いので、まずはこちらから概念を学ぶのが良いのではないでしょうか。
コンピュータの歴史とともに文字コードの規格の変遷がよくわかる。このため、なぜ、現在のような複数のコード体系があり、どのような構造になっているかも理解できる。javaなどの言語での処理についても記載があり簡単な処理のソースも記載されている。ただし本当に局部的な数ステップの部分だけの記載であるため、もう少しまとまった機能を有したルーチンの記載および説明があるとプログラマのためになると思う。
この値段と分量でよくまとめたなぁというのが最初の感想です。(読んだのは初版第２刷(2010/4/15です)コンピュータで日本語を扱う場合の文字コードについて、その初期からJIS X 0213:2004までをプログラマ向けに解説したものです。(EBCIDICなどascii系以外のものは除く)どのパートも流れがあり、過不足なく説明されていて、これまでに参照したこの手の本の中では一番納得感があり、しかも最新のコードに言及したアップ・トゥ・ディトなものだと思います。(最新のコードに言及したものには
文字コード超研究
の新版
文字コード「超」研究　改訂第2版
がありますが、私は未見です)技術に偏重した読みにくさというのはあまりなく、たとえば筆者が撮影した写真(街の名前が写っている)(p.113)などあり、ほのぼのしたいい味もでています。ただ、JIS X 0213のエンコーディングについては、筆者はきわめて楽観的なイメージを持っているように思えますが、私の場合は、かなり悲観的で、その部分は違和感があります。例えば「今後はShift_JISというときにもっぱらShift_JIS-2004を用いるという手もあります。(p.343)」というような表記がありますが、現状cp932とそのUnicodeマッピングが蔓延し、ほとんどのOSの内部コードがUnicodeをベースにしている状態で、そのUnicodeの問題点回避と、全てを2-byteに納められるという利点だけで、適用されるシーンを想像するのが難しいです。(組み込み、とか、DBサーバで文字種をそろえつつ総データ量を減らす場合とかですかね?)今後のIVSの対応も含めて、良くも悪くもUnicodeが先頭を引っ張る形で進んでいくのではないかと思っています。上記や、下記で言及する部分を含めても、この本は大変良くできています。いまもそうですし、今後も版を重ねていってもらえれば「文字コード関連? これ読んどけ」的に人にすすめやすい定番本となるでしょう。次の版の時には以下の部分直してもらえるとありがたいです。(ちと気づいたとこだけ。。。)p.112 MySQL 5.1の記述。→昨年末(2010年末) GAを迎えたMySQL 5.5では4-byte UTF8が扱えるutf8mb4というキャラクタセットが追加されましたので、扱えるようになっています。　多くのデータベースではUTF8(もしくはUNICODE)という名前で3-byteしか扱えないUTF8を利用してきましたが、PostgreSQLのように元々あるUTF8という名前で4-byteが扱えるようにしたり(もともとあるといってもUNICODE->UTF8が追加されたタイミング PostgreSQL 8.1あたり?) と、Firebird/MySQLのように新たな名称を用意する(Firebird: UNICODE_FSS(3-byte), UTF8(4-byte), MySQL: utf8(3-byte), utf8mb4(4-byte)という対応をしてきました。目次のEBCIDIC　p.16にEBCIDICの項目が見当たりません。なにかのtypo?
分厚くて読むのはそれなりに骨が折れますが時間をかけた価値はありました。混乱しがちな文字コードの話をIT初心者にも分かるように解説しています。
文字コードを理解するために、調べればなんとかなると、色々なソースをあたりがちになる内容が一冊にまとまって、体系だった理解ができる。
ちょっと業務で必要になったときに、該当する文字コードのあたりをめくって参考にしたりします。面白い内容ではないかもしれませんが、リファレンス的に便利です。
文字コードの歴史がよくまとまっています。とても読みやすいです。この本を読めば、なぜ現在のような文字コード体系が生まれたのかと言うことがよく理解できます。またJavaなどの各種実装の内部エンコーディングなどにも触れているため、現在のアプリケーションレベルのエンジニアにも役に立つ内容になっています。
文字コードについて基本的なところから説明してあり、初心者にも理解しやすいです。　本書を読めば、日本語環境では、なぜ「バックスラッシュ」が「円マーク（￥）」になってしまうことがあるのか、なぜ、いわゆる「半角」の「ｱ」と「全角」の「ア」が存在するのか、というような疑問を解決することができます。　前半の4章までは、代表的な符号化文字集合と文字符号化方式について歴史を交えて書かれています。Shift_JIS、EUC-JP、ISO-2022-JP、Unicode の符号化方式である UTF-8/UTF16/UTF-32 などについて詳細に説明されます。　後半は、Webアプリケーションの開発者や Java や Ruby のプログラマにとっては非常に役に立つ内容です。　書名は「プログラマのための　文字コード技術入門」となっていますが、前半はプログラマでなくても楽しく読むことができる内容で、文字コードに関心のあるすべての人にお勧めできます。
概要から始まり、歴史と代表的な符号化方式の紹介、インターネットやプログラミングとの関連性、最後によくある落とし穴の紹介と、多くのトピックがコンパクトに纏められている良書。一読しておくと、文字コードでハマった時の助けになる。文字コード問題は忘れたころにやってくるものなので、ぜひ読んでおくべき。
まずは文字コードの歴史から、文字コードがなぜ複雑になっているかの説明があったために、非常にわかりやすいと思いました。
文字コードの問題は今後の電子書籍系の中で、日本語である限り避けては通れない重要なポイントです。特に過去に発行された作品をデジタル化する場合の処理については、ＪＩＳの水準の問題や、異体字、外字の問題があります。そうした問題への基本的な知識として本著の前半を読むと、何が問題となり、その原因が何だったのかが明確になるでしょう。後半は技術的な話になるので専門的に学んでいる人以外は、かなり難しいと思われますが、余力があれば読むに越したことはないかと。
使いやすそう。アマゾンで注文するのは初めてだったけれど、とてもきれいで見やすくて良かった。
大学の講義で利用するために購入しました。モデルなどのデータベースの基本的な概念から、データベース設計やトランザクション管理まで書かれていて、これ一冊で広くカバーできる。実際のSQL文なども記述されていて、さらに図を多用してくれているので直感的理解がしやすく、文字だけでは理解しづらいことも比較的簡単に理解することができた。
結構いい本だと思います。中古なのに新しい本見たいです。
注文してからすぐに届き、状態も悪くなく、とても助かりました。
Postgresqlの多くの参考書がチョー初心者向け（したがって全然実務には役に立たない）か、エンジニア向けのどっちかなのに対して、この本には普通に使いたい人がほしいことが簡潔に書かれている。このレベルの本がもっと多く出てほしい。
ガベージコレクションを実装する人向けに、古今東西の手法やマルチスレッド下での注意点、パフォーマンス上の注意点などを論文とサンプル擬似コードを列挙しながら書いた本です。  とにかく長い。 すごい。 読んだり実装したりで無限に時間が潰せるので無限に時間がある人にとくにオススメです。
子供が気に入って使っています。難しい問題が解ける事が嬉しいみたいです。
すべての基礎のなる計算。１日１ページずつ。地道な積み重ね。
MySQLの基礎的な理解を深めることができました。
タイトル通り、基礎から丁寧に説明されていて、初級者向けには良い本だと思います。
前書
基礎からのMySQL [基礎からのシリーズ] (プログラマの種シリーズ)
の改訂版ですが、本のイメージはほとんど一緒で、読了後(MySQL部分)私の評価も前著に対するものとほぼ同じです。動作環境と対象プログラムがアップデートされましたが、本の内容はそれほど大きく変わったわけではありません。そのため、前書を持っている人が「改訂版が出た」といって買うような本ではなく、前書と同じ目的を持った人が最新の環境で同じことができる、と考えればいいと思います。特にMySQL 5.5ならではという部分はわずかしかありません。ともあれ、まったくの初心者の人がステップバイステップで確認できる、得られるという内容からすると値段以上の価値があります。(逆に一見して「くどい」と感じるようでしたら、中級以降の本を探すことをおすすめします)とにかく手を動かしてMySQL/PHPの基本を身につけたい人にはお勧めの良書です。
HTMLとCSSの触りだけ知っている程度のプログラミング初心者です。【購入前】仕事でPHPやデータベースの勉強をしなければならなくなり、近所の書店でPHPの入門書を買って1カ月ほど勉強をしてました。しかしながら、その買った入門書がとにかく分かりづらい！専門用語を専門用語で説明してくるので混乱し頭が考えるのをやめてしまいました。しかし、プログラミング初心者の私は「みんなこうやって苦労しながら勉強してるんだろうな…」と思いながらネットで調べつつ勉強してました。そんな折に、とあるPHPの入門サイトでこの本を「PHPの入門書」として絶賛してるのを見て、2007年版の本書の高評価なレビューを見て、最新版のこちらの購入を決意しました。【購入後】大判で500ページもあり分厚く、持つとズッシリと重い。”入門書は薄くてすぐに読み終われるようなものがいい”とよくいわれるので失敗したかと思いました。が、内容はものすごくわかりやすい！ひとつひとつ丁寧に丁寧に説明がなされていて、初心者がつまづきそうなポイントがしっかりフォローされています。他の入門書では「こんなことはわかってるよね？」と省略してきそうなことまでやさしく書いてあります。各章で練習問題があり、それを解きつつ進めていけば「覚えよう！」とリキまなくても無理なくスッとPHPとMySQLの知識が身に着くと思います。おおげさかもしれませんが、もっと早く出会っていればよかったと後悔したのはこの本が初めてかもしれません。【購入した方へ】この本を買った方で、文字コードを「Shift-jis」ではなく、「UTF-8」で進めている方も多いと思います。その場合、MySQLモニタ上の日本語表示が文字化けしてしまうので、これを解消する為に「mysql>SET NAMES cp932;」と入れてください。文字化けしなくなります。初心者ならばミスも連発すると思います。そのたびにパソコンが「ピー！」と鳴りうるさいので、ログイン時に、「mysql -uroot 」の後に、「-b -p(パスワード)」とすると音が出なくなりお勧めです。◆誤植？◆公式サイトに正誤表が無いので、発見した「誤植？」と思われるポイントを書いておきます。・P.262内の「pr2」→「pr1」・P.131の一番下、「SELECT * FROM tb WHERE LIKE 'A101';」→「SELECT * FROM tb WHERE bang LIKE 'A101';」
Kindle版を購入しました。内容は初心者向けで良いと思いますが、Kindle版では他の書籍のように検索、栞が使えません(虫眼鏡、栞マークがグレーアウト状態)。このような機能不足は他の書籍にも見受けられますが、折角の電子書籍の良さは半減ですね。
初心者で、データベース（MySQL）を使いこなしてみたいと思って購入しました。本は５００ページを超えてますが、着実に理解が深まってくるいい本だって思って、今もこの本で勉強中です＾＾
内容も知りたいことが書いてあり、大変役に立ちました。大変満足しています。
1ヶ月くらいかけてやり抜きました。おかげさまでMysqlについての知識はばっちりです。一度こういう本でしっかり学べば、ネットのような断片的な知識で補強しながら自分で新しいものを生み出せる力がつきます。Mysqlで何ができて何ができないのか、しっかり理解できる本になっています。動的ホームページの作成に挑みたい人は、まずこの本をやってみて下さい。
mysql初心者というか、ほとんどわからない状態で本書を通読。読み終わる頃にはmysqlでできる事、phpとの連携が理解できます。基本的にwindows環境で話しが進んでいきますが、mac環境でも問題ないです。自分はmac os環境だったのでインストール後の設定に多少戸惑いましたがネットなどで調べれば解決できます。
MySQLを初めて使う人には、とても解りやすいと思います。ただ知識としてHTML/CSSを知っている事は必要です。そしてこの本ではPHPの基本的な使い方も書いてあります。本の特徴として本当に解りやすく書いてますので、MySQLを勉強したい人にはこの本しかない！ってぐらいいいです。
コマンドリファレンスとしての使い方としてはよいです。デバッグのやり方については全く触れていないです。
この本は、あのコマンドの引数って何だっけ？とかこのコマンドってどんな文法だっけ？というような場合に手元にあれば参照できる程度です。はっきり言ってオンラインヘルプを見た方が圧倒的に早い場合もあって利用する機会がほとんどありません。これからはじめる人や、デバッガの仕組みを知りたい人にはがっかりする内容かと思います。オンラインヘルプを活用してない人で、手元に印刷物として持ちたい人には丁度いいかも。
GDBは奥が深い。セルフデバッグをするか、リモートデバッグをするか。JTAGを使うかどうか。特に、リモートの場合で、クロスコンパイルの場合は、アセンブラの理解も必要になる。ps.オープンソースのソフトウェアの解説であれば、ソースコードの説明が欲しい。また、GDBの試験プログラムのソースコードもつけて欲しい。コマンドのリファレンスとして使うものなのだろうか。
そろそろ逃げずにまじめにgdbとかいじらんといかんか．とか思って書店であさってたらこんな書籍が出てました．基本的にはオライリーのうっすい系リファレンス的書籍です．デバッガーってなにするもの? OSとアプリケーションってどうできてる? とかそういうことがわかってる以外に入門書的に買うのは辛いかも?ただし「昔はUNIX/Linuxで開発とかやってたんだけどもう忘れちゃったよー」みたいな人にはちょうどいいんじゃないかと思います．
内容は古いがまだまだ現場で使える知識がたくさん詰まっていました。DBAとして配属された新人には基礎的なデータベースの管理を網羅的に学べるよい教材になる。
いざって時に役立ちます。oracle周りを保守する人は必見です。
いくらオラクルがバージョンＵＰしても、現場は依然古いバージョンが多いので全然問題ないです。古本で安く買えて大満足です。
現場で作業する際に、ちょっとしたコマンドが出てこない事がよくあったのですが、この本のおかげで解決しました。毎回ネットで調べるよりは、この本があった方が作業効率が良いです。8iから11gまでの幅広いバージョンがカバーされていて現場に行く際は必ず持って行きます。また、マテリアライズドビューの作成方法等は載っている本が少ないのですがこの本がかなり参考になりました。
基礎から地道に学んでいけるとベストですが、どうしてもＯＪＴで「習うより慣れろ」な現場の場合、この本が道しるべとして役に立つと思います。ＯＴＮで公開されているリファレンスを参照することも大切ですが、「こういうことをやりたい」ということが一発でわかってからリファレンスに当たると効率的かつ理解も深まりました。もっと早く買えばよかった、と思った一冊でした。
割とDBもSQLも使っていて、パフォーマンスチューニングやMongoDB周りのことが学べるかなと思って購入しました。内容は、どちらかというとDBについて広く浅く抑えたい初〜中級者向けです。MySQLについては、パフォーマンスチューニング周りについても多少触れていますが、それほど多くはないです。実務でDBを触り始めて少し経った人が、基本をおさらいしながら補足知識を吸収する用途には適していると思います。
表紙にあるとおり「基礎知識」「養成講座」「実践入門」がメインです（高速化などのプラスアルファ要素はありますが）リレーショナルDBは概念さえわかればなんとなく触れてしまうものですがきちんと基礎を確かめておきたいと思われた時にはたいへん役立つと思います。（私は役立ちました）ただタイトル通りの内容なので深く狭く学びたいという方向けではないです。
基本的な部分をおさえてあるので、それぞれの特徴を比較したり、入門書的な使い方には十分な内容だと感じました。ただ、詳細を知りたい人には物足りない内容だと思います。
I have recommended the book to many people and love discussing it with others.I would highly recommend every one read this book, no matter your age, or station in lifeI found this approach to be deeply soothing and engaging, in a way that touched me deep in my core.
勉強になる
説明どおりでした。
最初に簡単な決定木やニューロに関する話があり分かりやすいです。競馬の予想は決定木を使ってオッズとか馬場状態とかレース距離などの情報で一番人気の馬を買って儲かるか、を調べてます。が回収率が1.0を超える結果はほとんど得られてません。それよりも後半の日経平均先物を使って、過去６０日の乖離率をニューロで天井、底を学習させた結果は非常に面白いです。グラフや図をふんだんに利用してる（利用しすぎかも）ので非常に「なぜこの方法を採用しているのか」に説得力があります。あと、後日談ですが、著者の月本氏自身が2000年頃に実際にHPを開いてこの手法の検証を行っていました。そこでの勝率は８割近かったです（ただ売買回数は１年に１０回もない、くらいの少なかったですが）。残念ながら氏はこのHPを閉鎖してしまいましたが。
実用的で、自分の目的に合ったものだった。ただ、アクセスのバージョンが違うので少し、分からなくなったりする。
初心者の自分がこの本を手にした時は、こんなに薄くて大丈夫なのかと不安でしたが、読んでいくうちに大変貴重な本を手にしたことに気づきました。この薄い本を読むだけでAccessのデータベースがスイスイ作成できてしまうのです。Exelとの連携も図入りで大変分かりやすいです。この本に出会えてほんとに良かったと思っています。今では職場でもAccess名人です！
内容も充実していてとっても参考になりました。ぜひお勧めの一冊です。
ＳＱＬＰＬＵＳばかりで、なかなかありませんでした。実際の業務の参考にしていきます。
初心者の方から中級者の方までPL/SQLの教科書はこれ一冊で十分だと思います。ORACLEパッケージの使い方はマニュアルに頼らざるを得ないので、本書にて言語仕様を身につければ後はバリバリプログラムを作ってください。画面とかオブジェクト仕様とか言わなければ言語仕様というのは特に４GLならば相当コンパクトであることを再認識させられた。
PL/SQLの書籍自体がそう多くない中、この書籍は一押しできます。内容も基本的文法からバルクバインド・パフォーマンスを考慮した様々な技法等が網羅されており、実務で使うような技術の大半はこの一冊で事足りると思います。ただし、SQLの基本的知識は必須です。レベルとしては、OracleMasterのPL/SQL Developer Silverくらいでしょうか。本当に高度なテクニックを用いる方は、OTNのマニュアルかOracleMaster PL/SQL Developer Goldの黒本あたりが参考になるかと思います。
読んだのは２回目ですが、今どきと比較すると少々古いのは否めなくなったようですね。
様々な認証技術についてまとめられた専門書であり、忍耐強く学べば力が付くでしょう。
Webを使っていると必ず「認証」なる単語がでてきます。セキュリティには認証がつき物ですが、結局のところ「山」「川」といった合言葉なんですね。本書は認証とはから始まり、最新の公開鍵についてまで詳しく解説してあります。本文の内容も最高です。また、付録にある参考文献も研究者や情報関係の学生には大変貴重でしょう。さらに、なんといっても母国語で読めることがいい。認証に関する教科書としては最新でかつ最高の本ではないでしょうか。お勧めの一冊です。
読んで思ったことは全体の概要は理解できるのですが、もっと深く学習しようと思ったときにほかの書籍や検索することが必要だと思います。とっかかりにはいいと思います。
ASP.NETスタートから現在までの進化の過程を分かり易く解説しています。新しいテクノロジーをこれから使用する人には良い本です。
HTML5について、学びたかったので、わかりやすく書いてありました。
イメージ通りの内容でした。以前、絵で見てわかるoracleのしくみを読んでいたのでその詳細版といった感じでした。学習に実務に役立ちそうです。
Oracle初級者〜中級者が対象です。アーキテクチャに関する本はいくつか購入しましたが、最終的に手元に残ったのは本書だけです。多くの入門書は広く浅く扱っているため、個々の関連性やアーキテクチャの全体像がはっきりとつかめませんでした。本書はそういった難点を解消してくれます。章の始めにアーキテクチャ全体から見て、どの構成要素を扱うのかを説明してくれます。これがうれしかったです。構成要素の説明も細かい部分まで丁寧に説明してくれているので、不明点が一気に解消されました。各分野がバランスよく扱われているのもすごくよかったです。最初はわからない内容も、繰り返し読むことで点と点が結びついていくと思いますので、初学者には少しハードルが高いかもしれませんが、最初の１冊目にいかがでしょうか。
第一印象は「絵で見てわかるOracleの仕組み」をもっと詳しくしたような内容の本という感じです。はじめは、ファイルやメモリやプロセスなどOracle全体の構成の説明をして、さらに索引、SQL、トランザクション、バックアップ・リカバリなどについて述べていきます。具体例をつかった隔離性の説明はとても丁寧でよかったです。本文中で、ところどころ、SQL*Plusで実際にOracleのデータ（動的パフォーマンスビューなど）を確認する場面があり、「こうやってOracleの様子を調べるんだー」というのがわかってためになりました。すでにOracleを良く知っているひとには、なんてことないのかもしれませんが、まだまだ勉強中というひとにはおもしろく読める本だと思います。
言語基礎はプログラミングシリーズやMSDNで学ぶとして、プロがVB.NETで業務システム開発するには1番か２番くらいに実用的な書籍だと思います。本書をキッカケに詳細はMSDNなどで調べる使い方が良いでしょう。
DBのデータ構造と、いわゆるプログラムのデータ構造は異なるため、それを吸収するプログラムが必要である。今日ではORマッパーとしてライブラリが出ているが、そもそもORマッピングとか何か、と小さいプログラムでそれの実装例がある。他はSQLプログラミングの基礎的な事項を網羅していたり、Datagridview の使い方があったり、何も知らない素人にとっては大変ためになる。もちろんストアドプロシージャ、トランザクションも抑えている。ただコレだけでは解らないことは当然あって、データベースのデータ構造を、どうプログラムのデータ構造に落とし込むか、というのはむつかしいと感じる。少ないデータなら適当なSQLを書けばいいのだろうが、それでもプログラムが汚くなってイヤになる。
Access2000のマクロをはじめて勉強する人にとっては豊富なサンプルがあるので一通り通して読んでいけば、実力はつくと思います。気になった点としては、順々に進めていくにあたってサンプル例題の順番が気になりました。急に難しくなったりします。また、サンプルに入る前の各コントロールの扱いなどの部分を例を含めてもっと詳しく解説してあるほうがすんなりとサンプルを理解できると思いました。解説の仕方などはとても丁寧に書かれているので読みやすいです。
AccessのVBAを学習する為に購入しましたが、基本的にあまり参考になりませんでした。Excelのマクロより、数段使えないAccessのマクロに頁の大半を割き、最後のほうにおまけ程度のコーディング例が載ってるだけなので、体系的にAccessのVBAを勉強したい人にはほとんど役に立ちません。
～SAPの管理システムを知ることによって、パッケージの特徴そのものも把握できます。実務において用件を詰める時に、導入するシステムのことを知らなくてはならない。当たり前のことだがとても重要なこと。システム管理のことを知っているコンサルタント、知らないコンサルタント。この市場価値の格差はいかがなものでしょうか。～～内容についてはタイトルのそのまま。システム管理についてのリファレンスです。～
出版当時は画期的で、意味のある本だったと思います。とにかくSAPの情報自体が少ない時代だったし…。ただ、今はあえて高いお金を出して、買わなくても良いです。むしろ、Webで公開されているSAPの公式ヘルプを丁寧に読んだ方がいいかも。公式ヘルプも、この本と同じくらい読みやすいです。
元BASISコンサルタントですが、当本の内容は、SAP BASISコンサルタントとして最低限理解すべき内容を網羅しています。アカデミーの全テキストを机においておくよりは、この本が１冊あれば十分かと思います。SAPは日々進化していますが、コアについては変わっていませんので、ナレッジが色あせる事は無いと思います。
ありそうでなかったSAP R/3の詳細解説本。SAPに関して持つ疑問やお役立ちテクニックなど、一冊で網羅しているので、システムを包括的に理解できる。オフィスに一冊常備しておくと便利。
S4になっても基本的には変わってなさそうなのでとりあえず購入
まだ読み始めで少し内容が難しいけど今後の為になりそうです。
タイトル通り、設計の概念から手法まで、広く浅く、だけども具体的に書かれた本。Struts等のフレームワークの利点や、「なぜ設計が必要なのか」についてもしっかりと書かれている。特にJavaの設計・開発を行うエンジニアで、Javaやオブジェクト指向の理解を終えた程度の新人から入社数年目程度のエンジニアにはおすすめ。
システム開発における設計という仕事で今自分に足りないものを確認したくて、購入通読実際に読んでみると、要求定義以降の実装までの設計の手順を詳しく記載されている。外部設計については開発環境に依らずに記載されているが、内部設計は特定のパターンでの設計になってしまっているのが残念だ。ただ概念については自分の勉強不足を痛感される内容が多々記載されていた。ＤＩにおけるＦａｃｔｏｒｙやレイヤーアーキテクチャや開発標準での必要な項目など学ぶことが多かったです。また、外部設計についてもユースケース、画面設計のステップで必要なものを定義してくれている。具体的な手順が記載されているので、そのまま手引書として利用できそうな気がする。設計を何となくしている人、正しい手順を確認したい人、最適な設計の手順を模索中な人にはぜひとも通読すべき書籍になっている。システム開発において「設計」を行う時には参照できる場所に置いておきいつでも見れる状態にしたい実用的な書籍だ
これまでベンチャー系の企業でフルスタックエンジニア的なキャリアを送ってきた私は、設計書をきちんと用意したことがあまり無い。エンタープライズ系のシステムを開発するに当たって、設計書の分かりやすい書き方・残すべき情報の"お作法"を知りたいと思い本書を手に取った。その目的と本書の記載内容は少しずれていた。考え方や注意点の記載はあるものの、具体例があまり無いのだ。なので"お作法"は分からない。"お作法"は会社組織によって異なるため、敢えて記載されていないのかもしれない。そういうわけで私の目的からはずれていたが、本書にはシステム設計をするに当たって注意すべき点が多々記載されており、若手エンジニアには勉強になると思う。
著者も本書で言及しているが、一口に設計といっても奥深く、本書のみで到底理解できるものではない。設計フェーズで「何をやらなければいけないか」(方法論)と、「どう設計するのか」(手法)は全く別物。本書は外部設計は前者、内部設計は後者に力点をおいているため、全体のコンセプトがぶれてしまっている。また、著者が「良くない設計」として挙げている要件から設計に至る成果物のトレーサビリティの確保をどう実現するかといった重要な点が本書からは殆ど読み取れない。マイナス面ばかり書いてしまったが、「設計」というテーマに正面から取り組んだ貴重な本として評価できる。本書をガイダンスとして、各テーマについてはそれぞれ専門書で掘り下げるという位置づけならば、読む価値は十分にあると思う。
開発現場で何年もやってきて、実践的な業務知識がある人にはタイトルの通り、物足りない内容のはず。私にとっては新たな観点もあり、ためになることも多かった。2017現在に読むと内容としては古臭さを感じる箇所も目立ったが、日本におけるWF開発での普遍的な設計を語ってくれているため、初めて設計に携わるという人にとっては必ず役に立つはず。ただし文章表現が遠まわしでくどく、結局のところ何を言いたいんだと感じる箇所が多かった。
基盤屋が、「開発のことも知らなくては」と思い購入ピンと来ない部分もあったけど、設計の大変さが複雑さが分かって良かった開発側の作業が、なんとなくイメージできるようになったただ、５年前の本なのでちょっと古くさいかも（２０１３年現在）
書名の通り、「はじめての設計をやり抜く」ためのポイントを説明した本。システム開発の流れから始まって、その中で設計が占める位置、設計として行うべき作業とそのポイントまでをかなり丁寧に説明している。将来、ソフトウェアアーキテクトを目指す人にとっては、入門書的な位置付けになるので、早い段階で読んでおくことををお勧めする。ただし、基盤（インフラ）の設計に関しては、それほど詳しい説明がないので、他の本に情報を求めると良いと思う。
脆弱性が問題となったStrutsですが、フレームワークのお手本として、改めて勉強するために購入しました。必要な情報がコンパクトにまとまっており、無駄がなく、大変読みやすいです。
本書は、機能別・目的別に調べることができるリファレンスです。Strutsタグの部分は、表示、表示制御、入力フォーム、リスト・表、に分かれています。この部分は有用で、開発中も役に立ちました。実践的な内容なのが嬉しいですね。ただ、目的別に書かれているため、Strutsタグのすべての属性に触れられていないという難点があります。開発を行うときに、手元に置くリファレンスとしては、物足りない感じはします。Strutsタグの属性について詳しく書かれた書籍と併用すれば最強だと思います。
strutsやるなら必需品です。逆引りファレンスとして大変便利。
IDEF1Xの解説が知りたかったので、古本で購入。実際にモデルを作る際のポイントなどについての詰めが甘い感じがしました。
IDEFは、ICAM DEFinitionとのこと。ICAMは、Integrated computer aided manufacturing program。CALS、EC(electronic commerce)の標準という位置づけがあるらしい。IDEFには、IDEF0、IDEF1、IDEF1Xが有名。IDEF0は情報システムのビジネスプロセスをトップダウンにIDEF1は情報をモデル化IDEF1XはリレーショナルDBの論理設計。図はER図を用いており、UMLとの違いがよくわからない。
IDEF1Xをのみ掘り下げた和書というのは、案外多くないので、その意味では必携。まだDM設計経験の浅い者なら、この本だけでもDB設計について学べることも多いので、決して悪くはない。
長年ITに携わってきた著者によるデータベースモデルの本構成は、IDEFについて述べ、IDEF1Xがデータモデルの記法であることが書いてあります。その上で、IEなどの他のデータモデルも併用して、データモデルとは何かを述べています。3章にてIDEF1Xの記法について概略しています。IDEF1X自体を知りたい人はこの3章までと、必要に応じて残りの章を読み進めていくことが可能になっています。4章以下はデータモデリング作業のそれぞれのフェーズにおいてIDEF1Xがどのように役立つかを記述しています。最後にIDEF1Xの動向、IDEF1Xを使うことができるERwinというツールの紹介そして著者が考える1996年時点での今後の展開（予想）が書いてあります。残念ながらNOSQLなどの台頭で外しているようですが。。まず、読者レベルの設定がされていないため、データモデルを行った経験が前提の章もあり、エンティティとは何かなど全くの初心者の項もあり、あまり読みやすい本とは言えません。また、目的がIDEF1X形式を述べたいのか、IDEF1Xを用いたモデル分析を述べたいのかのどっちつかずです。データモデルの初心者にはこの本の精読をお勧めしますが、かなり冗長ですので、IDEF1X自体を知りたい上級者には、もっと正規化された本の方が時間の節約になると思います。IDEF1Xを解説した日本語の本はこれぐらいしか無いので希少性はあります。また1996年と古い本ですがモデリングに古さはあまり関係しない点も良いところです。そのような目的にはお勧めだと考えます。
タイトルではSQL一般に見えて、その実前書きをみるとMySQLで、以下のような記述がありますが、「なお、幾つかの処理はMySQL特有の機能を使用しているため、場合によっては、お使いのRDBMSで動作させるには変更が必要なSQL文があるかもしれません。しかしそのまま動作しない場合でも、SQL文を組み立てるときの着眼点などはどんなRDBMSを利用していても参考になるはずです。」ほかのRDBMSへの考慮があまりされているとは思えない。。。たとえば、025 「データの出力行数を制限したい」026 「LIMIT句とOFFSET旬の注意」では、LIMIT句と、それに対応しているMySQLとPostgreSQLの差にしか言及していないけど、ほかのRDBMSでの実現方法(執筆時点で、SQL Serverのtopや、DB2のFETCH FIRST、Oracleでの実現方法など)に言及していないと、まったくMySQL, PostgreSQLにしか通用しないものです。そして、読み始めると 002で、sjisとcp932の区別もついてなく、MySQLについての記述も間違っている。。。ほかのレビューのように、スパッとはまるレベルならよいのかもしれませんので、とりあえず購入時には、店頭でぱらぱらめくるか、amazonやgoogleの中身をちょっと確認してからの購入をお勧めします。
しばらくSQLから遠ざかっていましたが、とつぜん質問されたSQLの文法がすぐに思い出せず、たまたま図書館で見つけたこの本を借りてきて調べたら一発でわかりました。いまからすぐに注文して常備しておきたいと思います。
DesignPattern of this software is actually topics.
もともとHadoopをやるつもりはなく、MapReduceに関する書物が欲しいなと思い購入致しました。Hadoopに関する知識がなくとも、MapReduceに関する抽象的な話しに多くを割いてくれているので、難なく読む事が出来ました。数式を用いた数学的なアプローチでMapReduceの機構を説明してくれる部分もあり、これ一冊あればMapReduceは完璧です。
書店のオライリーの棚の前に、新刊として平積みとなっていたのを購入しました（初版第1刷） この本は、英語書籍（Data Intensive Text Processing with MapReduce）の和訳であり、その原著のプレプリントはPDFで自由にダウンロードできるということは後で知りました。Hadoopの入門書では環境構築やシステムの詳細などに記述の大部分が割かれることが一般的で、具体的な局面にぶち当たった場合にどういう風にロジックを組めばいいのかというところまで踏み込んでくれないことが多いのですが、本書ではHadoopでいかにMapReduceを使ったロジックを組むかということに焦点をあて、疑似コードを通して理解を深めようというものです。特に3章「アルゴリズムの設計」がこの本のハイライトで、Reducerに負荷をかけ過ぎないようにする「ローカル集約」、共起パターンの集計などをスピードアップできる「stripes」、Reducerで処理する際に値がソートされていることを保証する「value-to-key conversion」など、シンプルでかつ実際的な「デザインパターン」を複数あげています。原題は「テキスト処理」となっているのですが、必ずしもテキスト処理に限る話でなく一般的な処理にも適用できるものであり、邦題として「MapReduceデザインパターン」とわざわざ変えたのは日本語版担当者のセンスの光るところです。ただ4章以降の具体例のうち6章のEMアルゴリズムは、訳者が内容を理解していないのか日本語訳が余りにもひどく、何度読んでも意味が通らなかったり、数式と言っていることが違う文章があったり、記号の誤植や用語の勘違い（joint distributionを「結合確率分散」としているなど）が散見されます（赤ペン片手に読んでましたが本が真っ赤に…） そもそも原著の方で1章で語るのに無理がある内容を押しこんでいるのが問題なのかも知れませんが、しかしそれにしてもあんまりです。この章で「統計的機械翻訳」が説明されているのは皮肉としか思えません。それでも現時点で類書がなく、問題のあることを知りつつ5章まで読んでも十分価値があり、とりあえず★3つとしておきます。足りない星は改訂版で何とかしてください＞担当者様
MapReduceの基本概念と適用事例に関する入門書．"Hadoop"ではなく"MapReduce"を学びたかった自分には良書だった．特定のソフトウェアに特化した技術書は内容が古くなりがちであるが，本書の大部分はMapReduceに関する解説なので，出版からある程度の時間が経過したあとも十分に読む価値があるだろう．
内容は古いがまだまだ現場で使える知識がたくさん詰まっていました。DBAとして配属された新人には基礎的なデータベースの管理を網羅的に学べるよい教材になる。
いざって時に役立ちます。oracle周りを保守する人は必見です。
いくらオラクルがバージョンＵＰしても、現場は依然古いバージョンが多いので全然問題ないです。古本で安く買えて大満足です。
現場で作業する際に、ちょっとしたコマンドが出てこない事がよくあったのですが、この本のおかげで解決しました。毎回ネットで調べるよりは、この本があった方が作業効率が良いです。8iから11gまでの幅広いバージョンがカバーされていて現場に行く際は必ず持って行きます。また、マテリアライズドビューの作成方法等は載っている本が少ないのですがこの本がかなり参考になりました。
基礎から地道に学んでいけるとベストですが、どうしてもＯＪＴで「習うより慣れろ」な現場の場合、この本が道しるべとして役に立つと思います。ＯＴＮで公開されているリファレンスを参照することも大切ですが、「こういうことをやりたい」ということが一発でわかってからリファレンスに当たると効率的かつ理解も深まりました。もっと早く買えばよかった、と思った一冊でした。
割とDBもSQLも使っていて、パフォーマンスチューニングやMongoDB周りのことが学べるかなと思って購入しました。内容は、どちらかというとDBについて広く浅く抑えたい初〜中級者向けです。MySQLについては、パフォーマンスチューニング周りについても多少触れていますが、それほど多くはないです。実務でDBを触り始めて少し経った人が、基本をおさらいしながら補足知識を吸収する用途には適していると思います。
表紙にあるとおり「基礎知識」「養成講座」「実践入門」がメインです（高速化などのプラスアルファ要素はありますが）リレーショナルDBは概念さえわかればなんとなく触れてしまうものですがきちんと基礎を確かめておきたいと思われた時にはたいへん役立つと思います。（私は役立ちました）ただタイトル通りの内容なので深く狭く学びたいという方向けではないです。
基本的な部分をおさえてあるので、それぞれの特徴を比較したり、入門書的な使い方には十分な内容だと感じました。ただ、詳細を知りたい人には物足りない内容だと思います。
I have recommended the book to many people and love discussing it with others.I would highly recommend every one read this book, no matter your age, or station in lifeI found this approach to be deeply soothing and engaging, in a way that touched me deep in my core.
勉強になる
説明どおりでした。
最初に簡単な決定木やニューロに関する話があり分かりやすいです。競馬の予想は決定木を使ってオッズとか馬場状態とかレース距離などの情報で一番人気の馬を買って儲かるか、を調べてます。が回収率が1.0を超える結果はほとんど得られてません。それよりも後半の日経平均先物を使って、過去６０日の乖離率をニューロで天井、底を学習させた結果は非常に面白いです。グラフや図をふんだんに利用してる（利用しすぎかも）ので非常に「なぜこの方法を採用しているのか」に説得力があります。あと、後日談ですが、著者の月本氏自身が2000年頃に実際にHPを開いてこの手法の検証を行っていました。そこでの勝率は８割近かったです（ただ売買回数は１年に１０回もない、くらいの少なかったですが）。残念ながら氏はこのHPを閉鎖してしまいましたが。
実用的で、自分の目的に合ったものだった。ただ、アクセスのバージョンが違うので少し、分からなくなったりする。
初心者の自分がこの本を手にした時は、こんなに薄くて大丈夫なのかと不安でしたが、読んでいくうちに大変貴重な本を手にしたことに気づきました。この薄い本を読むだけでAccessのデータベースがスイスイ作成できてしまうのです。Exelとの連携も図入りで大変分かりやすいです。この本に出会えてほんとに良かったと思っています。今では職場でもAccess名人です！
内容も充実していてとっても参考になりました。ぜひお勧めの一冊です。
ＳＱＬＰＬＵＳばかりで、なかなかありませんでした。実際の業務の参考にしていきます。
初心者の方から中級者の方までPL/SQLの教科書はこれ一冊で十分だと思います。ORACLEパッケージの使い方はマニュアルに頼らざるを得ないので、本書にて言語仕様を身につければ後はバリバリプログラムを作ってください。画面とかオブジェクト仕様とか言わなければ言語仕様というのは特に４GLならば相当コンパクトであることを再認識させられた。
PL/SQLの書籍自体がそう多くない中、この書籍は一押しできます。内容も基本的文法からバルクバインド・パフォーマンスを考慮した様々な技法等が網羅されており、実務で使うような技術の大半はこの一冊で事足りると思います。ただし、SQLの基本的知識は必須です。レベルとしては、OracleMasterのPL/SQL Developer Silverくらいでしょうか。本当に高度なテクニックを用いる方は、OTNのマニュアルかOracleMaster PL/SQL Developer Goldの黒本あたりが参考になるかと思います。
読んだのは２回目ですが、今どきと比較すると少々古いのは否めなくなったようですね。
様々な認証技術についてまとめられた専門書であり、忍耐強く学べば力が付くでしょう。
Webを使っていると必ず「認証」なる単語がでてきます。セキュリティには認証がつき物ですが、結局のところ「山」「川」といった合言葉なんですね。本書は認証とはから始まり、最新の公開鍵についてまで詳しく解説してあります。本文の内容も最高です。また、付録にある参考文献も研究者や情報関係の学生には大変貴重でしょう。さらに、なんといっても母国語で読めることがいい。認証に関する教科書としては最新でかつ最高の本ではないでしょうか。お勧めの一冊です。
読んで思ったことは全体の概要は理解できるのですが、もっと深く学習しようと思ったときにほかの書籍や検索することが必要だと思います。とっかかりにはいいと思います。
ASP.NETスタートから現在までの進化の過程を分かり易く解説しています。新しいテクノロジーをこれから使用する人には良い本です。
HTML5について、学びたかったので、わかりやすく書いてありました。
イメージ通りの内容でした。以前、絵で見てわかるoracleのしくみを読んでいたのでその詳細版といった感じでした。学習に実務に役立ちそうです。
Oracle初級者〜中級者が対象です。アーキテクチャに関する本はいくつか購入しましたが、最終的に手元に残ったのは本書だけです。多くの入門書は広く浅く扱っているため、個々の関連性やアーキテクチャの全体像がはっきりとつかめませんでした。本書はそういった難点を解消してくれます。章の始めにアーキテクチャ全体から見て、どの構成要素を扱うのかを説明してくれます。これがうれしかったです。構成要素の説明も細かい部分まで丁寧に説明してくれているので、不明点が一気に解消されました。各分野がバランスよく扱われているのもすごくよかったです。最初はわからない内容も、繰り返し読むことで点と点が結びついていくと思いますので、初学者には少しハードルが高いかもしれませんが、最初の１冊目にいかがでしょうか。
第一印象は「絵で見てわかるOracleの仕組み」をもっと詳しくしたような内容の本という感じです。はじめは、ファイルやメモリやプロセスなどOracle全体の構成の説明をして、さらに索引、SQL、トランザクション、バックアップ・リカバリなどについて述べていきます。具体例をつかった隔離性の説明はとても丁寧でよかったです。本文中で、ところどころ、SQL*Plusで実際にOracleのデータ（動的パフォーマンスビューなど）を確認する場面があり、「こうやってOracleの様子を調べるんだー」というのがわかってためになりました。すでにOracleを良く知っているひとには、なんてことないのかもしれませんが、まだまだ勉強中というひとにはおもしろく読める本だと思います。
言語基礎はプログラミングシリーズやMSDNで学ぶとして、プロがVB.NETで業務システム開発するには1番か２番くらいに実用的な書籍だと思います。本書をキッカケに詳細はMSDNなどで調べる使い方が良いでしょう。
DBのデータ構造と、いわゆるプログラムのデータ構造は異なるため、それを吸収するプログラムが必要である。今日ではORマッパーとしてライブラリが出ているが、そもそもORマッピングとか何か、と小さいプログラムでそれの実装例がある。他はSQLプログラミングの基礎的な事項を網羅していたり、Datagridview の使い方があったり、何も知らない素人にとっては大変ためになる。もちろんストアドプロシージャ、トランザクションも抑えている。ただコレだけでは解らないことは当然あって、データベースのデータ構造を、どうプログラムのデータ構造に落とし込むか、というのはむつかしいと感じる。少ないデータなら適当なSQLを書けばいいのだろうが、それでもプログラムが汚くなってイヤになる。
Access2000のマクロをはじめて勉強する人にとっては豊富なサンプルがあるので一通り通して読んでいけば、実力はつくと思います。気になった点としては、順々に進めていくにあたってサンプル例題の順番が気になりました。急に難しくなったりします。また、サンプルに入る前の各コントロールの扱いなどの部分を例を含めてもっと詳しく解説してあるほうがすんなりとサンプルを理解できると思いました。解説の仕方などはとても丁寧に書かれているので読みやすいです。
AccessのVBAを学習する為に購入しましたが、基本的にあまり参考になりませんでした。Excelのマクロより、数段使えないAccessのマクロに頁の大半を割き、最後のほうにおまけ程度のコーディング例が載ってるだけなので、体系的にAccessのVBAを勉強したい人にはほとんど役に立ちません。
～SAPの管理システムを知ることによって、パッケージの特徴そのものも把握できます。実務において用件を詰める時に、導入するシステムのことを知らなくてはならない。当たり前のことだがとても重要なこと。システム管理のことを知っているコンサルタント、知らないコンサルタント。この市場価値の格差はいかがなものでしょうか。～～内容についてはタイトルのそのまま。システム管理についてのリファレンスです。～
出版当時は画期的で、意味のある本だったと思います。とにかくSAPの情報自体が少ない時代だったし…。ただ、今はあえて高いお金を出して、買わなくても良いです。むしろ、Webで公開されているSAPの公式ヘルプを丁寧に読んだ方がいいかも。公式ヘルプも、この本と同じくらい読みやすいです。
元BASISコンサルタントですが、当本の内容は、SAP BASISコンサルタントとして最低限理解すべき内容を網羅しています。アカデミーの全テキストを机においておくよりは、この本が１冊あれば十分かと思います。SAPは日々進化していますが、コアについては変わっていませんので、ナレッジが色あせる事は無いと思います。
ありそうでなかったSAP R/3の詳細解説本。SAPに関して持つ疑問やお役立ちテクニックなど、一冊で網羅しているので、システムを包括的に理解できる。オフィスに一冊常備しておくと便利。
S4になっても基本的には変わってなさそうなのでとりあえず購入
まだ読み始めで少し内容が難しいけど今後の為になりそうです。
タイトル通り、設計の概念から手法まで、広く浅く、だけども具体的に書かれた本。Struts等のフレームワークの利点や、「なぜ設計が必要なのか」についてもしっかりと書かれている。特にJavaの設計・開発を行うエンジニアで、Javaやオブジェクト指向の理解を終えた程度の新人から入社数年目程度のエンジニアにはおすすめ。
システム開発における設計という仕事で今自分に足りないものを確認したくて、購入通読実際に読んでみると、要求定義以降の実装までの設計の手順を詳しく記載されている。外部設計については開発環境に依らずに記載されているが、内部設計は特定のパターンでの設計になってしまっているのが残念だ。ただ概念については自分の勉強不足を痛感される内容が多々記載されていた。ＤＩにおけるＦａｃｔｏｒｙやレイヤーアーキテクチャや開発標準での必要な項目など学ぶことが多かったです。また、外部設計についてもユースケース、画面設計のステップで必要なものを定義してくれている。具体的な手順が記載されているので、そのまま手引書として利用できそうな気がする。設計を何となくしている人、正しい手順を確認したい人、最適な設計の手順を模索中な人にはぜひとも通読すべき書籍になっている。システム開発において「設計」を行う時には参照できる場所に置いておきいつでも見れる状態にしたい実用的な書籍だ
これまでベンチャー系の企業でフルスタックエンジニア的なキャリアを送ってきた私は、設計書をきちんと用意したことがあまり無い。エンタープライズ系のシステムを開発するに当たって、設計書の分かりやすい書き方・残すべき情報の"お作法"を知りたいと思い本書を手に取った。その目的と本書の記載内容は少しずれていた。考え方や注意点の記載はあるものの、具体例があまり無いのだ。なので"お作法"は分からない。"お作法"は会社組織によって異なるため、敢えて記載されていないのかもしれない。そういうわけで私の目的からはずれていたが、本書にはシステム設計をするに当たって注意すべき点が多々記載されており、若手エンジニアには勉強になると思う。
著者も本書で言及しているが、一口に設計といっても奥深く、本書のみで到底理解できるものではない。設計フェーズで「何をやらなければいけないか」(方法論)と、「どう設計するのか」(手法)は全く別物。本書は外部設計は前者、内部設計は後者に力点をおいているため、全体のコンセプトがぶれてしまっている。また、著者が「良くない設計」として挙げている要件から設計に至る成果物のトレーサビリティの確保をどう実現するかといった重要な点が本書からは殆ど読み取れない。マイナス面ばかり書いてしまったが、「設計」というテーマに正面から取り組んだ貴重な本として評価できる。本書をガイダンスとして、各テーマについてはそれぞれ専門書で掘り下げるという位置づけならば、読む価値は十分にあると思う。
開発現場で何年もやってきて、実践的な業務知識がある人にはタイトルの通り、物足りない内容のはず。私にとっては新たな観点もあり、ためになることも多かった。2017現在に読むと内容としては古臭さを感じる箇所も目立ったが、日本におけるWF開発での普遍的な設計を語ってくれているため、初めて設計に携わるという人にとっては必ず役に立つはず。ただし文章表現が遠まわしでくどく、結局のところ何を言いたいんだと感じる箇所が多かった。
基盤屋が、「開発のことも知らなくては」と思い購入ピンと来ない部分もあったけど、設計の大変さが複雑さが分かって良かった開発側の作業が、なんとなくイメージできるようになったただ、５年前の本なのでちょっと古くさいかも（２０１３年現在）
書名の通り、「はじめての設計をやり抜く」ためのポイントを説明した本。システム開発の流れから始まって、その中で設計が占める位置、設計として行うべき作業とそのポイントまでをかなり丁寧に説明している。将来、ソフトウェアアーキテクトを目指す人にとっては、入門書的な位置付けになるので、早い段階で読んでおくことををお勧めする。ただし、基盤（インフラ）の設計に関しては、それほど詳しい説明がないので、他の本に情報を求めると良いと思う。
表紙、題名、テーマすべてカタイ感じのする本である。ソフトウェアの訳書にありがちな「カタサ」である。しかし、この本はそんな私の安易な印象を良い意味で裏切る。文体は非常に読みやすく、翻訳されたソフトウェア書にありがちな妙に堅苦しい日本語もない。内容としても、データベースの設計-論理設計・物理設計-をわかりやすく説明している。もちろん、説明されている内容自体が難しいので、読むのにはそれなりの労力を要するであろう。しかし、読み物としても工夫されているため、おもしろい。読後に、満足感を感じる1冊であり、読み物としても非常に良い。
出版年は古いですが、Oracle EBSについて、全体の構成や基本的な仕組みを押さえることができます。
これ以降、オラクルＥＢＳのまとまった解説本は、公式には、赤本（これは青本）と呼ばれるものしか存在しません。市販品として判り易く、具体的な記述は非常に貴重です。現在のＥＢＳのバージョンは、１１ｉから殆ど１２系になっていますが、オラクルの公式ＨＰで公開されている膨大な資料群（ＯＴＮ)では、かなり専門的というか、初心者はあまりのボリュームに怖気づいてしまう傾向があります。既に、プレミアで相当な高価になっていますが、手元にあると無いとでは安心感が違います。プロのツールとしては、今（2016年）でも有効な1冊と思います。開発概要は、こちらが対になっています。やや古い感じもありますが有効です。
Oracle E‐Business Suite入門 テクニカル編
Oracle EBS 11iの運用管理用の本です。EBSのアーキテクチャ、インストール方法、ディレクトリ構成、環境変数、起動・停止などの基本情報から、チューニング、監査、バックアップ、リカバリ、製品のアップグレード、パッチの適用方法などの実践で役立つ情報までが載っています。開発時の環境構築担当者や運用担当者は、手元に置いて一読した方が安心ではないかと思います。
文字列解析の基礎から最近のテクニックまでを網羅し、簡潔に解説している良書と思います。筆者一人の書き下ろした本なので話題の重複もなく、また、翻訳本にありがちな理解に苦しむ言い回しもありません。ページ数は133ページと少量にも関わらず、大事な点はしっかりとおさえている ... つまり、データマイニングの現場をよく知る人が簡潔丁寧に解説した本で、大いに役に立ってくれそうです。必要の都度参考にするというのではなく、最初からじっくりと読むのに向いています。いずれにせよ、少々高い値段の価値は充分にあるんじゃないでしょうか・
2012年の本。著者は機械学習などをベースとした会社の共同創業者である。Burrows Wheeler変換、簡潔データ構造、ウェーブレット木などをベースとして文字列解析について解説するという内容。　曰く・・・　ＬＺ法：繰り返し出現した文字列を過去に出現した文字列のコピーとして表現することで圧縮する。コピーを、過去に出現した場所との相対距離、長さで表すのがＬＺ７７法であり、コピー候補となるフレーズを辞書登録し、コピーを辞書中の番号で表現するのがＬＺ７８法。　など。概説記載が薄く読みにくかった。
とてもわかりやすくて良いのですが、4-9で実行時エラーが出ます。実行時エラー 2147217887　リレーションシップが必要サンプルでも完成版でも出てしまいます。
SQLがまったくはじめての人向けの本。実践向けではないです。内容は悪くないです。ただし内容が薄い割に価格が高いです。少し掴んだら直ぐに２冊目に言った方が良いかと思います。OracleかSQLServerなら『現場で使えるSQL』がお薦めです。
データベースの本ということですが、気を引き締めて読まないと眠気を引き起こしてしまう本とは違い、読みやすいのでリラックスしながらでも読めてしまいます。例、メモ、コラムのようなものも豊富で飽きさせません。最後にこれは主観だけなのかもしれませんが、レイアウト、デザインがなんだかオシャレに思えました。そういうところも、読みやすさに一役買っているのかもしれません。
自分がこの本を買ったのは2000年で、リレーショナルデータベースの概念やSQLを当時この本で独学しました。レッスン形式で展開していきますが、くどさやまどろっこしさは感じず、内容の順番が秀逸でとても理解しやすかったです。レイアウトもシンプルでよみやすいです。特定のDBシステムに依存せずに書かれているので（DBシステムによる違いも補足されている）、基礎を学ぶのにオススメです。この本を使えば十分に独学可能です。この本で基礎を学んだあと、自分が利用するDBシステムの専門書に進むのがよいです。
「あわせて買いたい」を参考に『入門SQL―10日でマスターするデータベース実習教室』も購入しましたが、内容がほぼ同じものでした。「10日」のほうが作り直し版なので、どちらかといえば「10日」のほうがよいでしょう。完全に生まれ変わったと書いてある割にはそのまま流用しています。それぞれはよいですが、あわせて買う必要はありません。
この本の内容は特定のベンダのRDBMSに偏っていません。普通のRDBMSに共通の内容がとてもやさしく説明されているので入門書に最適だと思いました。他の入門書を読んでいないので説得力がありませんが、簡単な練習問題も付いているので、これから独学でデータベースの勉強を始める人にはおすすめだと思います。 この本はちょっと有名なシリーズ「Teach Yourself ○○ in 21 Days 」シリーズを編集したものだと書いてありました。この入門シリーズのJAVA版もかなり評判が良いので、この入門シリーズには良書が多いのではないでしょうか。
SQLすら知らなかった時に本書を毎日１章、通勤途中に読み、２週間後にはDBシステムの設計を行う事が出来ました。　SQLの仕様、本質を知る上で、非常に有効な書籍です。　毎年、新人さんに本書を読むようにお奨めしております。
とてもわかりやすいです。他の入門書を読んでいて、あまりにもわかりづらいので閉口していたのですが、この本を読んだら目から鱗が落ちるように全てがわかりました。同じものを説明してもこんなにも違うものかと驚くくらいにわかりやすかったです。　また、翻訳本であるにもかかわらず、文章に翻訳臭がほとんどなく、日本語を扱うときの技術的な問題なども注釈として入っているので、訳者の方がいい仕事をしていると感じました。　ただ、これは他のSQL本にも共通して言えることですが、独習するなら手元にSQLが動く処理系がないとちょっとつらいかもしれません。私はPostgreSQLをノートPCに入れて、動作させながら勉強したので楽でした。　もし勉強するなら、そのような方法を採ることをお勧めします。
注文から受け取りまで大変迅速に進み、届いた品も良品で大満足です。早速ＡＣＣＥＳＳの使い方で不明だった点を読んでデータベースを構築中です。ありがとうございました。
初心者にとって、手引書はどうしても必要であり、系統的に解説していただいているので、参考にさせていただいています。システムにつながるVBAの内容等は次のステップになると思いますが、まずは、系統的に教えて頂けるので、有難いです。次の段階のでは、自分でシステムを構築するためには、具体的な方法が必要と思いますが、まずは、総合的な理解は必須であると思いますので、本書はその意味では、重要であると思います。
今からですが役に立てたいと思います。できるシリーズはわかりやすいと思います。
本著を図書館で閲覧後、仕事用に購入しました。バージョンがアクセス2010を使用しているので、内容で異なる場面が出てきますが、概ねこれの発展形なので問題はありませんでした。これからアクセスを勉強される方には悪くない著書だと言えると思います。
インプレスさんの本をいつもわかりやすい。Access 2000で挫折した僕が”できる”ようになりました(笑)ほんと、よくできた本です。手順どおりに進めていくとわかりづらい箇所が必ずでてきます。そんな時、ちゃんとヒントに詳しい説明がある！初心者が躓きそうな箇所を見事に把握している。安心して最後まで読み進められる一冊です！
中古の本でしたが、とても奇麗でした。内容もシェルスクリプト基本は変わるものではないので問題ありませんでした。
リファレンスの名の通り、コマンド別に解説されてます。この種の技術書は訳本が多く、日本語にストレスを感じることもあるのですが、日本人が著者の本書はスラスラ読めるのも良い点です。モノクロ印刷ながら、罫線・網掛け・フォントなどを工夫することによって、とても見やすく読みやすく、著者や編集者のセンスを感じます。内容は全くの初心者向けではなく、ある程度UNIX系OSやC言語を経験した人が対象です。コマンドの用例が豊富なので、実際に実行させながら読み進めることによって、理解も深まります。世の中にはLinux/FreeBSD/Solaris以外のOSに搭載されたシェルもありますし、またバージョンによっても仕様が異なったりで、必ず用例通り動くとは限りませんが、逆にそれが学習にもなると思います。3千円を切る価格で、コスパに優れた書籍です。
シェルの使い方の基礎というのは、大体どの入門書でもそれなりに丁寧に教えているので、誰でもある程度の使い方は分るようになるのですが、この本はそういった人がさらに一歩シェルを理解するのに良い本です。個人的にはなんと言っても、シェルにも根幹となる厳密な文法があるということを初めて知ったのは大きかったです。いや、もちろんシェルといえども機械ですので規則があって成り立っていることは知っていましたが、それとは違ってこの本では「文法用語」で正確な理解を示しているところに価値があります。例えば「パイプライン」や「リスト」などの言葉を使った説明を聞いたことのない人には一読の価値があるでしょう。パイプライン？　パイプのことだろ？　と思っている人はこの本の説明を読んでください。多分、単純に 「|」でつなぐアレだろとしか思ってないでしょうが、実は文法的な「パイプライン」とはもう少し違う意味があるのです。本当の初歩から紐解いていき、読み終わると、「あぁ今までなんとなく分かったつもりだったアレはこういうことだったのか」と、今までの疑問がだいぶ晴れました。移植性も考えた内容となっている点も良いです。読後も折りにふれてリファレンスとして使えますし（そのようなタイトルですから当たり前ですが…）、その点でも重宝してます。惜しむらくは、スクリプトのデバッグテクニックが載せられていないことでしょうか。その点に関しては
UNIXシェルスクリプトコマンドブック 第3版 (コマンドブックシリーズ)
を読めば補えるでしょう。もっともそれがないからといって本書の価値が減ずると言うほどのマイナスではないかなと思いました。
業務で使用する必要があったが、私自身Java や C系言語しかまともに書いたことがなく、ネットで頑張って調べてコーディングしても、思ったように動かなかった経験があったことや、これまでのプログラムと違った作法が必要そうだと思ったため、最低限の基礎知識を抑えるために購入。この本はタイトル通り、シェル文法のリファレンスであるが、各項目の説明は簡潔であり、本全体の構成も分かりやすかった。シェルの文法には似たような記法がたくさんあるが、その辺の使い分けなどについても、記載しているのは好感が持てた。また、コマンドのコメント、図表、太字などを生かして、読者に理解しやすいよう気を遣っている一冊だと思った。ある程度プログラミングに慣れている方がシェルで短期間でロジックを書けるようになりたいのであれば、この一冊で問題はないと思う。そして、何か物足りなくなったなら、他の書籍を購入するって感じかなと思った。
リファレンスとして使う分にはよく出来ていると感じた。一つのコマンドに関するシンタックスを網羅している、索引が網羅的であるという点で優れている。1からシェルスクリプトを学ぶにはわかりにくい構成になっている。ある項目を説明するプログラム例に後のページで説明される内容がどんどん出てくるので、すらすら読み進めるのは難しいと感じた。各項目の詳細な説明に入る前に基本的なコマンド等の説明があればより初学者にも使いやすくなると思う。
bashの他に、FreeBSDのsh、Solarisのshについての詳細なマニュアルです。以下、良い点を挙げます。　・移植性に細心の注意が払われている　・クォートのネスティングパズルについて記述がある　・的を射た目次/小見出しで参照しやすい（もちろん索引もあります）職場ではLinuxやSolarisの他、自宅ではBSD系を弄るので、本当に助かってます。
Linuxの勉強しておりシェルスクリプトにも興味を持ったので購入しました。本書の最大の特徴としては「Linux」「FreeBSD」「Solaris」に対応しており、それぞれに使用可能なコマンドが記載されている点です。これらの情報を自力で探そうとすると時間がかかってしまいますので、シェルスクリプトを多用する人や複数のOSでシェルスクリプトを書いている人は間違いなく買いでしょう。詳しい文法説明もあるので迷ったときに本書が手元にあると時間が節約できると思います。
カバーするトピックの量と、説明の詳細度とのバランスが良い。読み物にもリファレンスにもなる。基本の一冊として手元に置きたい。ただ、自分で書くならperlやrubyを使うと思うので、専ら他人のスクリプトを読むとき用かな。
Excelの機能でどのように使うのかと考えていた事が、明確に分かりました。時々思い出して、また読んでみたいです。
新卒でなぜかデータベース本体を開発するプロジェクトに加わってしまった私ですが、そのころはまだSQLというものが、今ほど一般的でなく、教科書探しに苦労しました。そんなときに出会ったこの本は現在、セルコと人気を二分する(?) C.J.Dateのこの本でした。DB2の本から書き始めたこの本はDB2よりの付録があるものの、本体は真摯な態度でSQL86, SQL89を解説・批判したものです。(その批判(付録F 注釈付きのSQL批判)の多くは、現在のSQLで改善されています)この当時にはこれしかなかったものの、SQLについて少しずつ学ぶのに大変適していました。原著はA Guide to the SQL Standardで、 1st(1987)
A Guide to the SQL Standard
, 2nd(1989)
A Guide to the SQL Standard
, 3rd(1993)
A Guide to the SQL Standard
と版を重ねて、最新は4th(1997)
A Guide to the SQL Standard
となります。 3rdから共著にHugh Darwenが加わりました。本翻訳はこの2版の和訳です。和訳は以前アジソン・ウェスレイトッパンから、初版が発行されていました。邦訳の最新はこの２版ではなく４版になりますが、その際にページ数も倍増して表紙も大幅に変わったので、同じ本と気づく人は少ないでしょう。SQL89までで十分な人や、SQLのエッセンスをざっくり知りたい人には２版もいいと思いますが、通常4版
標準SQLガイド (アスキーアジソンウェスレイシリーズ―Ascii Addison Wesley programming series)
の購入をおすすめします。
SQL(プログラミングの言語です）の勉強でも始めるか、と前から気にしていたこの本を探しに行くと...書店のタナにない！ 聞けば出版社が出版業務から手を引くということで、店頭の在庫を回収してしまったとか。SQLに関しては古典といってもよい本で、本気で勉強しようとしたら必ず押さえるべき本。一日も早く復刊してください。
やることをシンプルに解説してくれている。書物の形式としては、最後が尻切れトンボな印象を受けた。③も期待している。
分かりやすいですね〜ファイルメーカー Web パブリッシングの本を探していたのでぴったりです巡り会えてよかったと思います
基本がわかっていない僕には参考書として十分です。たすかります。
これからPHPを使ったWebアプリケーションを作ろうとおもっている人には、ファイルメーカーを持っている人、持っていない人にかかわらず、最初に手にすべき本だと思う。もちろん、ファイルメーカー購入の参考にするために買うのもいいが、内容の半分がPHPプログラミングについて書かれているので、PHP初心者にはとても分かりやすい内容となっている。PHPプログラミングで何ができるかを学ぶ本としては、とても役に立つ内容である。
レファレンスとして読もうかと思い購入しましたが、始めは、必要な情報がどこにあるのか捜せませんでした。しばらくして初めから順に読んでみたところ、Oracleのバックアップに関する理解がかなり深まったと感じました。SQL文、実行結果が多いので、実際にバックアップするときには役に立ちそうです。読んで損はない1冊だと思います。
ちこっと勉強になりました。すごくいい本ですわー。まったくいい。
読みやすいですが、リファレンスほんなので、こういうものかなぁとは思うのですが、リファレンスではあるのですが説明が濃かったりするので、そこそこ使いやすいと思います。普通に1冊読み上げても良いなぁと思います。
普段はPostgreSQLを使っているのですが、顧客指定でMySQLを使う事になり参考資料を捜していました。そしたら、PostgreSQLでお世話になっている著者のMySQL本があるじゃないですか!!もうね、MySQLとPostgreSQLは鈴木氏の著者名で買っていいんじゃないでしょうか？
アクセス解析用にMySQL+PHPでプログラムを作るのに、参考用として購入しました。当初、SQLコマンドのリファレンス本のようなものが欲しかったので、MySQLの内部構造や設定方法などは自分にはオーバースペックかな、と思っていました。しかし、アクセス解析のプログラムを動かしはじめてしばらくすると、サーバーが高負荷の状態が続いてしまいました。その後、この本の前半部を読み返して、MySQLのシステムが動きやすくなるようテーブルやクエリーに変更を加えたところ、システム負荷を低減させることができました（クエリキャッシュとか知らなかったです）。私のデータベースの作りが未熟だった、ということですが、この本で色々と勉強させてもらいました。
MySQL のユーザ（SQL について MySQL での固有機能を知りたいなど），MySQL の管理者（インストール，漢字コード等を含む各種の設定など）の両方を満足させる，良心的な本．決して安くは無いが Google 等で調べるよりも効率が良い．最新の情報が一通りまとまっている．＜この本の良いところ＞・MySQL 固有の機能をうまく説明している・ソフトウエアとしてのリレーショナル管理システムの説明がある（ブラックボックス化していない）・SQL は重要な機能を選別（ページを無駄使いしない）しているように感じます．この本は、確かに，MySQL の全機能を網羅した良書．２章で、ストレージエンジン、テーブルの構造など、MySQL の良い解説があり、これだけでも金を出す価値があると感じます．
『MySQL全機能リファレンス』のバージョン5.1対応版。バージョンごとの細かな違いがこれでもかというくらい書かれているのでどんなバージョンにも対応できる。『全機能』は大げさだが大抵のことは書いてあるのでMySQLで作業するときに手元にあると非常に助かる本である。それにオンラインマニュアルは知りたい部分ほど意味不明なことが多いが、本書はわりと分かりやすく解説されている。伝聞によれば著者はMySQLのソースコードを解析しながら文章を書いているらしいので簡潔ながらこなれているのだろう。図と実例が豊富なのでMySQLの膨大な機能を俯瞰できるのもありがたい。パラパラめくってMySQLの細かなtipsを知る楽しみもある。123ページは全体が誤植と思われるので改定で修正してほしい。
技術評論社「
MySQL全機能リファレンス
」の鈴木さんが、前著を新バージョンに対応(4.x->5.1)する形で出版したのが本書です。マニュアルをなぞっただけではない、本当にメカニズムを調査・把握した上での著作で、大変参考になります。前著では単なる読者だった私ですが、ひょんなことからMySQL、そして著者の鈴木さんと知り合い、本書ではSQL, 関数の振る舞い、そしてストアドルーチン関連で協力させていただきました。内容は大幅に増えましたが、うまく調整してコンパクトな装丁はそのまま、中身の濃いものとなっております。是非皆様のお手元においてやってください。
知るべき内容プライマリーキーをどのように設定すべきかがわかります
簡潔に分かりやすく丁寧にインデックスについて記載されています。SQL Server Management Studioをインストールして、実際に手で動かして確認できます。画面キャプチャが張ってあり実行箇所が赤枠で囲ってある、図で分かりやすく説明しているところが良かったです。SQLの経験がある人ならば、3時間くらいでサクサク読めます。著者のWebサイトに全く同じ内容のページがあるため、この本を買わなくてもブラウザで読めます。（営業妨害になるかもしれないので、著者のページのURLは記載しません）初心者向けの為、高度な内容については記載されていないと思います。＜気になったところ＞・「#S2_02_データの作成」で5万件のデータを1行1行INSERT文で作成していますが、whileループで短く作成した方が良いと思いました。（もしかすると初心者向けの為、あえてそうしているのかもしれません）・誤字脱字は2箇所見つけましたが、気にならない程度です。
網羅的でわかり易いです。誤字が多いことを念頭に置いて読む必要がありますが、値段相応かと。（誤）リープページ→（正）リーフページ（誤）か習い→（正）かなり
この書籍は入門者への一冊としてオススメできる。他の書籍と比べて具体的な題材で解説を進めており、途中のコラムも大きくページを割くボリュームでは無いが大切なことが書かれてあってためになる。画像も多く、初心者がつまづきそうな所をちゃんと解説している。途中高度な機能を紹介するだけの箇所もあるが、それは紙面を使いすぎてしまうし、ググれば出てくる情報なので、これくらいのさじ加減で良いと思う。Chapter5ではStarter Solution※の使い方を解説し、そのファイルと連動させる仕組みを作る内容となっている。こういうパターンは確かにありえるので、初心者にはありがたい。（※FileMaker Pro 14を買うと付いてくるテンプレート）内容もレイアウトも解りやすい良い本だと思う。
トリガーの説明が全く無いのは何故でしょうか？オラクルの大家の著ですので、何か意図があるのか判りませんが他の部分は完璧に書かれているのに、ここが欠けていて無いのは「独習シリーズ」＝「基本書」としているので残念です。ある程度理解した後は、ONTのマニュアルが読めますが、それまでは、仕方が無いので
PL/SQL入門 改訂版 (Oracle現場主義)
も併用しました。（←こちらも大変よく書かれています）トリガーは実務でもよく使用しますし、PL/SQLプログラミングにおいても、欠かすことの出来ない事項ですので、改訂版では、是非加えて欲しいです。基本書（←入門書ではない）として「これ1冊で基本事項は全て網羅されている」という網羅性は重要な要件です。上記を欠いている点を除き、内容・説明等は申し分ありません。
SQLについてはOracle MASTER Bronzeで勉強した程度の知識で、本書をたった今読了致しました。他の方もおっしゃっている通り、トリガーについての説明がないことを除いては、良書だったと思います。但し私にとっては、後半部分の記述がやや難しく感じました。2周目にこれから取り組みますが、1周目では目を通すだけだった「練習問題」「章末問題」のプログラムを写経しながら学んでゆこうと思います。
紹介されていたとうりでしたそれ以上でもそれ以下でもありません。
PL/ SQL で飯を食ってないから不用他人のサンプルが一番参考になるこの書籍あってもどうにもならんかったしなー
「内容紹介」で書いてる通りで、ＰＬ／ＳＱＬ初心者の独習本としては、よく書けてて、すばらしい。簡単すぎず、難しすぎず、説明が判り易く、それでいながら一歩踏み込んで詳しい。サンプルコードが本文説明用、練習問題（全てコードの回答も在り）ともに豊富。ＰＬ／ＳＱＬ入門書は余り多く出回ってないが、私には、この本が一番良いと思った。只、「トリガー」についての説明が、（説明も無く）無いのが残念。私は、Ｏｒａｃｌｅマスタ「ＰＬ／ＳＱＬ」認定取得の勉強にも役立った。【追伸】(2012/9/28)当本にﾚﾋﾞｭｰ書いて居るﾚﾋﾞｭｰｱ『あまぞん太郎』さんへの意見です！！！当Bookﾚﾋﾞｭｰは、他のサイト的な？、ﾌﾞﾛｸﾞ的？にｺﾒﾝﾄするｺｰﾅじゃあないと思うのですが･･･。(私の勝手な解釈？)ﾚﾋﾞｭｰするからには、内容の在るモノをすべきでは？(他の人に少しでも参考に成る様な)でないと皆に迷惑します！！！。まさか、ｱﾏｿﾞﾝで購入したモノは、ﾚﾋﾞｭｰを書かなければならないと、思ってる訳ではないでしょうが･･･。何も、辛口のﾚﾋﾞｭｰ(★一つ)を書くのがダメと云ってるのではありません。参考に、私の以下の辛口のﾚﾋﾞｭｰを見て下されば有難いです。(笑)⇒⇒『細野真宏の数学嫌いでも「数学的思考力」が飛躍的に身に付く本! 』又は　　　『この世で一番おもしろいミクロ経済学』で、　　　ﾚﾋﾞｭｰｱ名は｢公一 "aki" ｣又は｢公一｣です。　　｢最新のレビューから｣をｸﾘｯｸすると最初の方に出て来ます。以上
独習シリーズは、入門書を読み終えた後に、読む本と思っておりました。プロとしてのOracle PL/SQL入門を呼んでいたのですが、私のような初心者には、入門書と呼べるものではありませんでした。しかし、本書は違います。PL/SQLの全体像をわかりやすく、かつ実践的なスキルがつくよう書いてあります。非常に良書です。個人的には、テーブル型、レコード型が苦手だったのですが、本書で理解できました。所々、難しいデータ型の説明が省略されておりますが、入門書ですので、本書を読破した後、上記の本を読み、ステップアップすると良いと思われます。
#感想歌 #短歌 形式　リスクからマネージメントとエンジニアITセキュリティソリューション secureはse(free from)cure(care)というもので「心配からの自由」なんです。（名和小太郎）
今や何かわからないことがあればまずネットで調べることが多く、書籍のニーズが減りつつありますが、この本は巻末のインデックスから辞典のようにも使えますし、目次で「やりたいこと」に沿った内容を明快に書いてあり、開発時に手元に置いておくと便利な本です。私は専門職ではないので、MS-ACCESSのクロス集計のSQL表現がSQLserverでは使えないと知り、ネットのtipsでもよくわからず、いくつかの参考書を見比べて最もわかりやすい解説であったことが購入の決め手になりました。いささか単価が高いことで星１個減らしましたが、著作の労力を考えたら妥当かもしれません。
対応が早くてよかったです！また、お願いするときはよろしくです。
SQLserver2012の本はいくつか読みましたが、こちらの本が1番丁寧に解説されていると思います。間違えがちなところは注意書きがしっかり書かれているので、SQLserver2012を触る人は一読しておいて損はないです
復習がてら読んでみました。基本事項をすでに知っているからということもあるのかもしれませんが、非常にすっきりと、しかしきちんとポイントを押さえる形でまとまっていると感じました。初めてSQL Server で開発を行う方にはおすすめの一冊だと思います。複数のテーブルを結合してクエリを実行する部分は、SQL分を見れば意味はわかるのですが、そのSQL分を書くに至る思考過程が文章として記載されていれば、初めての人にはより読みやすいものになるのかなと思いました。初めてではない人には当たり前で冗長なものかもしれませんが。
splを使うので復習のために買いました。中級者向きです。
わかりやすく、とりつき易い手順でよかった。だいぶ参考になった。
初めてZ式の本を購入しました。見やすいです。超初心者から上級者まで自分のレベルに合った本があるのでいいと思います。ただ電話帳ぐらいの大きさと太さがあるので、ポケットサイズなんかがあると通勤途上で読めるし、会社の机に置いても邪魔にならないかなぁ〜と思いました。
詳しく載っております、ページ数も660ページ近くあり、大満足です。
内容も充実しており例題も読みやすいです手元に置いて使用したい1冊です
いままでデータベース専用のソフト(ＰａｒａｄｏｘやＡｃｓｅｓｓ)などを利用していて、なかなかサーバー用のものには手を付けることがなかったが、今回新たにVisual C#でのデータベース構築に迫られてこれを購入しました。Visual C# Expressで実際に利用できるものと思い込み買っては来たものの、本にのっているサンプルプログラムをコンパイルしてもデーターベースにアクセスできません。よくよく表紙を見るとExpress対応ではないとわかり最初はがっかり。しかし、ネットでいろいろ調べてみるうちにExpressでも利用できることがわかって(あくまでローカルデータベースだけでリモート接続はできない)、MicroSoft SQLServer Express　,　Visual Web Developper Express(これはSQLServer接続用に使う１回のみ使う)をインストールして設定をいじっていたら、どうにか使うことができました。本に載っているサンプルプログラムを使って毎日楽しくプログラミングづくりに励んでいます。
最新の solaris11 の機能が網羅的にまとめられていてとてもわかりやすい.コマンドの実例も入っているので、virtual box に最新 solaris を install して試して見ることができました。linux よりも安定して、機能充実している OS. がんばれ solaris !!
作者名が英語表記と日本語表記がおなじなのでダブりです。訂正ください。
非常に良い
ACCESSの本格敵にビジネスのツールとしての使い方がわかりとても便利です。
応用編です。基礎は他の本でおさえておいたほうが無難です。私は会社で使っているのが古いソフトだったので、細かい所が違っていて苦労しました（泣）。メモ書きでもいいから書いておいて欲しかったので☆１個減で。　内容は実践的でわかりやすく、これを参考にして無事データベースができました♪
やりたいことを探す時にはとても便利です。もう少しSQLについて載っているとうれしいですね。
アクセスを逆引きできる本として最高にわかりやすい本でした。とても便利に活用しています。
600頁あります。見たいところだけ見ればいいのだが、復習すると思って最初から学習していくと相当為になる。サンプルダウンロードの拡張子は「.mdb」だが全データを「Access 2007-2016ファイル形式 」に変換した。ともすれば「VBA」の方に目が行きがちだが、やはりクエリというのはAccessの基本で最終的には「SQLマスター」するべきですかね。字がかなり小さいので見づらい嫌いはあるが、なかなか見ごたえがあるテキストで結構面白い。
図解でわかりやすく解説してある。ひとつひとつの機能は解説によりよく判るが、Accessの場合はテーブルを中心として、クエリ、フォーム、レポートなどが連携している。初めての人がどこまで理解できるのか？図が小さいのも気になった。
何気なく読んだのですが、データベース設計上のポイントが書かれ参考になりました。正規化簡便法というのは、佐藤正美さんのT字型をベースに考えられたメソドロジーのようですが、如何でしょう。　他にレビューの方がいないのは、あまり日の目を浴びていないのでしょうか？
期待通り
SQL SeverのDB管理者向け書籍と思って購入しましたが、正直理論的な解説もなく、単なるGUIベースの使い方が記してあるだけの書籍で正価２８００円で買うに値しない本でした。この程度の内容ならネットを検索したほうが早いです。中古価格が他の解説書と比較して安いのは、内容の薄さを物語っています。
レビュー遅れて申し訳ありません。コンピューターウイルスとは　どういったものか？といったビギナー向けにとても親切に書かれています。とても読みやすい本だと感じました
セキュリティポリシーの重要性や優位性をアピールする本が多い中、ポリシーを策定したものの、失敗した企業は意外と多い。本書は失敗した原因を探り、策定プロセスを見直し、成功に導くテクニックが紹介されている。既にポリシーを策定した組織にとっても、ポリシーの見直しにも役立てることができるだろう。ただし、ISMS認証取得を保証する情報セキュリティポリシーではない点に注意する必要がある。外部のコンサルタントに任せっきりにせずに、事前に一読しておくと良いだろう。
情報セキュリティアドミニストレータ試験の事前学習として読んで見た。今の世は、セキュリテイポリシー策定の花盛り。企業も役所も、情報漏洩や不正アクセスからの脅威に脅えている。ところで、折角金と時間をかけて、セキュリテイポリシーを決めても、運用段階で運用する側への教育や啓発を怠るといつしか形骸化し、有って無いような状態になってしまう。本書の著者は、セキュリテイポリシー策定のコンサルタント会社である。色々とコンサルした実績と企業や民間から得たアンケート結果により、どうしたら情報セキュリテイマネジメントを有効にできるかの”ツボ”を教えてくれているようだ。
アプリケーションのパフォーマンス向上に悩んでいる私にちょうどいいぐらいでした。Mysql(特にDB)の初心者に絶対に向かないと思いますが、従来より効率がよいSQL文を書きたい、管理しているMysqlサーバにもっといいパフォーマンスを出したいといった方にいいかもしれません。
MySQLを中、大規模アプリケーション開発で利用する方は必ず読むべき。チューニングについてが体系的に解説されている。MySQLに付属でついてるmy.cnfではチューニングが全くされておらず、かなりメモリの少ないホスト用になっている。この設定をどうやって運用するホストに最適化するかの知識を得られる。
チューニングに必要な各種の知識を説明してある本です。チューニングの手順やテクニック、チューニングの事例などは、ありません。ＭｙＳＱＬの動作原理、特にエンジンの動き、選択指針については、詳しく書いてあります。ＳＱＬのチューニングにも力が入ってます。ＭｙＳＱＬのＳＱＬ解釈やオプティマイザの動き、ＳＱＬのコツなどです。あと、設定ファイルの設定内容、ハードウエアの選択、レプリケーションの話題などです。ＭｙＳＱＬの仕組みがよくわかりました。ＭｙＳＱＬの知識は、ほとんどありませんが、楽しく読めました。欲を言えば、メモリの使い方、ＣＰＵなどの話題もあれば・・・と思いました。
今までオライリーの本って買った事なかったんだけど、良いね。　無駄が無い。　SQLでデータいじる方法は大体知っている。　今更小賢しい事も要らん。！　MySQLとはっ！ってのを無駄無く教えてくれる良書です。　あー、こういう本を探してたんよ。　シーラカンス本も持ってるけどPostgreSQLのこういうがあったらそれも買うね。　最近何度か探しても2年前やよくて1年前の本ばかり、そしてこの本を手にとって見たら先月発刊したばかりで内容も正式リリースしたての4.1.xにも少し触れているし、3～を前提にしていても3と4での差異はちゃんと明記されている。　お約束のセットアップからはじまり、ストレージエンジン（テーブルタイプ）の詳細解説、indexのタイプ(内部的事も)、クエリー、チューニング、レプリケーション、バックアップ……。これ一冊でもうほとんどのことがわかる。軽く触れられている事もどうすればより知ることが出来るかもガイドされていてほんと良い本に出合えたと思う。
アクセスの基本的な操作はほぼ問題なくできますが、データをリンクインポートしてクエリで加工という仕事になり、この本を購入。Access2000となっていますが、Access2003,2007、2010，2013でも問題ありません。必要なことはInternetで調べることができる時代ですが、この本があれば調べる時間が短縮でき、また、間違いやすい点などもきちんと書かれているので、時間がある時にペラペラめくってみるだけでも勉強になります。内容が濃い本でした。
技術者視点で書かれている感じがしました。そういえばどうやって書けばいいのだっけ？という時に読みます。
俺、困ったときのリファレンスとして買った。しかし必要になるのは仕事中。会社からググった方が早い。しかし、体系的な知識を得るには読んで損は無い。そろそろ経験値が溜まってきたので馬小屋でレベルアップしないと。これからスマホやタブレット用にコンパクトDBの需要が増えていくが、基礎を押さえるのをそうで無い者では天地の違いがでる。俺、使えない人になりたくない。
さすがに公式解説書なこともあり、即使える実例サンプルも豊富な解説書です。個人的にはオンラインの自習書のように、なぜなぜ形式での解説な少ないように感じたので☆４とさせていただきます。（どうしても和訳書ということもあり）初心者にはハードルが高い内容だと思います。チューングを一通り経験し、壁にぶち当たったことのある中～上級者におすすめの1冊です。
2012年の本。DeNAの複数のエンジニアによる執筆。　曰く・・・　スマートフォンのゲームスタイルは、左手にスマホをもって左手親指で可能な限り操作するスタイルＡと、左手にスマホを持って右手の人差し指で操作するスタイルＢがある。ソーシャルゲームの操作シーンは常に両手が使える場面ではないので、片手で遊べるゲームは遊びやすく、再訪率を高めやすい。　ゲームエンジンは、プラットフォームにゲーム専用の抽象レイヤーを追加する。DeNAの提供するngCoreは、JavaScriptを使ってスマートフォン向けのソーシャルゲームを作ることを目的としたゲームエンジン。　ソーシャルゲームは、一般のＷｅｂサービスと比べると収益性が高いため、安定稼働時間を増やして機会損失を防ぐことが大切。　ＤＢの大半の用途では、アクティブなデータサイズの方がメモリサイズよりも大きいため、ディスクＩ／Ｏが頻発する。ユーザサイドのＣＰＵ使用率はさほど大きくはならず、ディスク性能が支配要因となる。　小規模な環境におけるデータベース設計は、すべてのテーブルとそのデータが同一データベース内にあるのが一般的。負荷が増大すると、参照用のSlaveをレプリケーションにより作成する。Slaveが複数台になると、リクエストを分散させるロジックが必要になる。もっとサービスが大きくなると、いくつかのテーブルを物理的に別のＤＢサーバに追い出す（垂直分割）。それでもテーブルを１台のMasterに収められなくなると、テーブルの中のデータを分割して異なるＤＢに格納する（水平分割）。水平分割によりデータそのものが分割される手法をShardingという。　サービス利用をやめたユーザを分析し、やめる原因となる利用特徴ごとにクラスタリングによりグループ化し、複数の原因を発見する。各グループのやめてしまう要因に対策を打つことでサービスを洗練化する。　などなど。
取り組みやすく、問題の難しさもちょうど良いのですが、範囲が全範囲網羅されているわけではないので、取りこぼしがあります。
夏休みに、親子で取り組む、と張り切って購入いたしました。他の教科も、欲張り購入してしまった為に、進みません。これから、取りかかります。自宅で、コツコツ出来る人は、おすすめだと思います。
塾の補助用に買いましたなかなか同じような問題がなくて使い道がありませんでした
中学受験を考えるご家庭、また学校の勉強だけでは物足りないお子さんにおすすめします。
主にPHPを用いてMySQLを操作したいが、やり方が全く分からない初学者の方向けです。私もそうでしたが、初学者はまず環境構築で挫折する方も多いと思います。本書では、ApacheやPHP、MySQLのインストール方法など導入部分に100ページほど割いてあり丁寧です（しかし、本書の方法に従うより、XAMPP・MAMPをインストールする方が簡単かもです）。また、コマンドプロンプト・ターミナルからMySQLにアクセスする方法も丁寧に説明されています。肝心の内容ですが、各項目の説明に割いてあるページが多めで、良く言えば丁寧、悪く言えば冗長かもしれません。また、PHPからMySQLを操作するソースコードに非推奨・削除されている表現があります。例）mysql_connect...これから学ぶ方は、適宜PDOに置き換えつつ学ぶことになるでしょう（Webで検索すれば沢山情報が出てきますので安心を）。
かなり砕けた表現で作者のユーモアを感じ取りながら楽しく読み進めることができます。がしかし。少々古いこともあってvistaには非対応。対応しているのはXPと著者の好きなMac。私はこの本でプログラムに入門したわけだが最初のapache,phpのインストールにつまずき頑張ってどんなにググっても成功しなかった。三日三晩調べ続けたがプログラム系は全くの初心者なので専門語句に詳しくなっただけで結局解決法がわからず発狂しかけました。とてもわかりやすくいい本である事に間違いはないが、vistaユーザー泣かせの内容なのでご注意を。ちなみに私は他の書籍でphpを入門し勉強することにしました。
古書で購入しました。10年前の書籍なのにとても記述がわかりやすく、これと
いきなりはじめるPHP‾ワクワク・ドキドキの入門教室‾
で自分がPHPでやりたかったことをほとんど習得できました。これ以上やさしくできないといわんばかりのタイトルが本書の内容を的確に示しています。厚く感じますが実際やってみるとあっという間です。
「入門以前」とはよく言ったもので、書いてある通りに進める限りは問題ないのだが、書いてある通りにやらない場合の記述はほとんどなし。さらには練習目的なのか、意図的に意味不明の迂回作業もさせられる。懇切丁寧とおせっかいさが同居する、Microsoftのような書籍。インストール時の環境変数の設定から練習用データベースの作り上げに至るまで、ディレクトリを変えたり、途中を読み飛ばしたりすると絶対にうまく行かないのでご注意。
基本的なPCの操作と簡単なプログラムの知識(VBAなど)がある人にとってはとてもわかりやすい本です。また、プログラムはあえて最新版などを利用せずに、必ず添付CDを利用して学習することなどが明記されており親切だと思います。LinuxにmySQLをインストールして、Windows上にあるMS系のソフトから接続したかったのですが、適切な本が見つからなくて、この本を参考にしました。(ODBCドライバの説明は１ページくらいなので参考にはなりませんでしたが。)mySQLのコマンドでの操作やPHPについては結構親切な説明で役に立つと思います。Linuxとの接続についてはネット上の情報が一番参考になると思います。最初に買ってみる価値はあります。
タイトル通り「入門以前」まで手取り足取り手順を指示してくれる、初学者に優しい一冊。拡張子の意味やエディタ選びまで説明されている点から、ターゲットはアマチュア層だと思われる。くだけた文体とも相まって、身構えずに読み進められるだろう。MySQL+PHP+Apacheという、昨今のWebシステムではスタンダードと言える組み合わせを採用した点から、この後のスキルアップにつなげ易いようにという著者の配慮が窺える。Apache+ PHPの環境構築はダウンロードも含め、本来入門者には面倒なのだが、本書はCD-ROMが付属され、いたって簡便な手順で進められる。WindowsだけでなくMacへのインストールまで書いている点は特筆しておきたい。これは単なるデザイナーに止まりたくないWebクリエイター層の存在まで、きちんと見越してのことだろう。反面、業務では最も多いであろうUNIX/Linux環境での解説はないが、自宅環境でのラーニングを想定した本書の性格からすれば当然だろう。MySQLに関しては、基本的にコマンドラインからの操作を習得するよう編集されている。GUIツールも出回っているが、基本をきっちり覚えさせようという方針だろう。本書に書かれていることは、タイトル通り「入門以前」の内容に止まる。本格的なDBシステムを手がけるには、本書の後にRDBの基礎やPHPとの連携について、さらに学ぶ必要がある。とは言え、初学者にとってWebに氾濫する情報をどう取捨選択すれば良いかの判断は難しいだろうし、本書のようなニーズは十分あると感じる。アマチュアだけでなく、上に書いたようにWebデザイナーからの脱却を目指す層や、新人PGにもオススメしておきたい。
静的なhtmlから動的なサイトを作りたいと購入した本書。理論やタグやスクリプトで説明するのではなく、兎に角作れとばかりに本書に従って作っていくと、あら不思議。理解は進み、実際のデータベースが作れてしまう感動を味わえます。判らない、動かないならページを前にめくって検証するので理解を深めることができる。まさに体験型の良書です。
かなしいかな、apachhe,php,mysqlで一番難しいのはプログラムでも連携でもない。installなのだ。環境設定でこけてしまい本のとおりにならずに結局なげてしまった。金かえしてほしい。残念な本だ。
私の友人がこちらの本を持っており友人より先に、私はこの本を参考に進めてみました。別にMySQL系の本が数冊有ったのですが、この本が一番親切丁寧で、理解しやすい事も有り個人で別途購入致しました。内容的には、MySQLとPHP自体を全て網羅している訳では無いですが、初心者向けの内容ですし、すごくとつきやすいです。別に、"基礎SQL"と"PHP"用のテキストを持っています。DBの概念的な部分を理解するには、丁度良い内容だと思いますよ。
LAMP（Linux,Apache,MySQL,PHP）ならぬWAMP（つまりOSがWindwos）を使って非常にわかりやすく説明されています。Macも可。Windows用とMac用で章が別れているので、自分でMacやWin用に読み替える必要はありません。ちなみに私はWindowsユーザーです。本書内ではApacheはver.1.3.29、MySQLはver.4.02、PHP4を使ってインストールから説明がなされていますが、これらの内、バージョンの異なるものを使いたい場合は、本書に書かれているインストール・設定方法とは若干異なるので注意が必要です。PC初心者の方は、書いてあるとおりに演習を行うことをおすすめします。なお、OSはWindowsはXP（あるいは2000）が必要です。Me,98,95ではダメかもしれません...本書は約400ページで2.4cmとボリュームがありますが、1ページに無理やり詰め込むようなことがされていないので、読みながら演習するだけならば8時間かからないくらいです。流れるようにMySQLおよびブラウザを使ったデータベースの構築方法がわかります。「習うより慣れろ」派の初心者に向けです。
"スパム"に焦点を絞って書かれた書籍は少ない。Web上で資料を探せば、ある程度は見つかると思うが、それはかなりの時間を必要とするだろう。スパムに対する知識の必要性を感じ、かつ時間を節約したい場合には、この本が最適であると思う。内容は、メールプロトコルの基本的な仕組みから始まり、その知識をふまえた上で、スパマーとアンチスパマーの両者の観点から、現在のスパム状況を述べたものである。また、メールだけでなく、トラックバックスパムや検索エンジンスパムも扱っている。値段は少し高めだが、それだけの価値のある本であると考える。ちなみに、☆１つ減点した理由は、ハードカバーであること。電車内で読む場合など、持ち歩きに不便であるため。
初心者には難しい内容でした。バージョンもちょっと古くて、自分には向いていませんでした
手前味噌
主に8.5を使っているが、細かいところまで解説されているので重宝している
欲しい情報にすぐにたどり着くにはそのような参考書がたくさん出ているのでそちらを参考にした方がいいのかなとパラパラめくって最初はなにげにそう思いました。「この本は一般的な単なる参考本じゃないな」と。逆にタイトル通りMissingManualという「マニュアルにあるべきなのに残念ながら書かれてない内容」っていうのに凄く引かれて読み進むと「なるほど」、「そうだったのか」といったどこか頭の隅に持っていた漠然とした疑問にも一筋の光明をくれたり発見とドキドキ感を発見。（日本でこういう感性を持って書いた物を観た事がそれまでになかったし、頁数は図解でやたらかせいで！？多く内容が薄〜い本とか(^^;; にはよくがっかりさせられたので）さすがは本場アメリカの著者の書籍だと感心したものです。いろんなコラムが多数あるのですがそこを読むだけでも嬉しい知識のエッセンスが詰まっていて会社の同僚に思わず「面白いよ、読んでみて」「こういう事だったのね」とかって付箋はりつけたりしてみんなでまわして読んだりしてました。楽しく知識のつまみ食いもできるし絶対に読んで損はないかなと。何より楽しいです。：）自分で買った本なので会社から引き上げようとすると「置いとけ」という事だったので１冊会社用にも結局買いました。濃い内容に比べて翻訳本にしては良心的な価格にも好感あり。
FileMaker Pro 8 一目瞭然―Windows/Macintosh両用とFileMaker Pro大全のどちらにしようか迷った挙句、FileMaker Pro大全にしました。FileMaker Pro 8 一目瞭然―Windows/Macintosh両用は初心者向け。使い方がほんとうに一目で分かります。FileMaker Pro大全はというと、Advancedのことにおいても書かれていました。なかなかAdvaced版について書かれている書籍も少なく、私のように中途半端に知識があるものにとっては、手元に置いておきたいと思わせた書籍です。参考書というより読み物といった感覚を受けますが、、、さらに分厚いんですけどね・・。FileMakerをより詳しく知るには便利と思います。
FileMakerを使いはじめて半年ほど。「動的値一覧」の作成方法がわからず書店でFileMaker関連の書籍を片っ端から立ち読みしました。本書は分厚くて重く、初心者にはtoo muchな内容のような気がしたのですが、動的値一覧について開設されている書籍が他になく（少なくともその時の私には探せず）半ばやけくそで購入しました。文章は慣れないと読みにくいですが、我慢して読みましょう。今はあまり必要ないなと思うページも我慢して一通り読みましょう。一度読んでしまえば、困った時に必ず助けてくれるパートナーになってくれます。ただ単純な技術書というより、tips、転ばぬ先の杖的なアドバイス、哲学的な解説？含めて無駄なページが殆どないのがスゴいところです。ちなみにiPhoneで英語版ですが最新バージョンも読めます。原書を読んでみて、この訳が実は素晴らしかったということがわかりました。お手軽な値段で手に入りますので、英語が苦手ではない方はそちらもあわせて読むとより理解が深まりお勧めです。
原文がわるいのか翻訳がわるいのか、欲しい情報にたどりつくまでの道のりの遠い文体です。長編小説の好きな方には良いかもしれませんが、仕事で目の前の問題を解決しなければならない状況にある人にとってはとてもおつきあいしきれない文章です。現場の技術屋さんにはおすすめできません。逆に初心者の方や、時間のある方にはもしかしたらよいのかもしれません。
ファイルメーカーの入門書はいくつかあるけれど、結局いろいろやりたいことが判ってくるうちに、入門書だけで解決できないということに行き着きます。だったら最初から、これ1冊買っておけば良かった…と思いました。
内容は広範にわたっているし、その1つ1つがこれでもかというくらい詳細に解説されていると感じました。たとえばスクリプトのフィールド設定と計算の挿入の違いとか、入力値の自動化とかの個々の機能などが、です。これを通しで読むのは、初心者で年齢もいってるぼくにはまだちょっと大変だけど、必要に応じて必要な場所だけを読むというつもりになれば大丈夫かな、と。755ページもあって、大きめの本で、それで3,990円っていうのはずいぶん安いのでは？そういう意味では満足していますが、あとは頑張って本書にあることが自分の頭に入るよう、ぼく自身がレベルアップできればと思います。
割と網羅されていて、初めて2016に触れるならあると便利だと思います。管理者向けのコマンドレットが少な目で、入門～中級ぐらいの内容になっています。操作に迷わないよう画面キャプチャがたくさんで親切だと感じます。技術書というよりも案内、指南といった分類でしょうか。※私の望む内容(主にpowershellでの管理)ではなかったため☆は4です。○確かに誤記はいくつかあって、指摘して正誤表出してもらいました。http://www.shuwasystem.co.jp/products/7980html/4928.html
内容が古く、誤字だらけ。旧バージョンの本に対して、画面の差し替えだけしたのでしょう。旧バージョンのレビューにも、同じようなレビューでした。さらにおどろいたのは、現段階でも正誤表がリリースされていないことです。これ、買わないで下さい。
色々と記載されて、良かったです。
2011年1月に①『
VisualBasic.NET至高の技データベース+印刷/帳票編 (単行本)
』の「中古本」を購入しました。当時は、「VB4.0」による「開発経験」が「約半年」、（「VB5.0」、「VB6.0」は少しいじったことがある程度で、）その後、「COBOL」による「開発経験」が約5年あり、その後、約6年「ブランク」があった後、「VB.NET」で「開発」することになり、「VB4.0」と「VB.NET」の「違い」に苦しみながら、「10冊近く購入した本」のうちの1冊です。2010年8月に購入した②『
VisualBasic.NET逆引き大全500の極意 (単行本)
』が良かったので、同じ「秀和システム」さんの「本」なら「大丈夫」だろうということで、「多数の本」の「出費」は痛かったですが、購入することに「躊躇」はありませんでした。2010年7月に購入した③『
VB.NET基礎学習Bible―270例題で学ぶプログラミングの散歩道 (単行本)
』と④『
だれも書かなかったVisualBasicプログラミング入門 (単行本)
』の2冊が「VB.NET」の「バイブル」になりましたが、①「この本」は、「リファレンス」として、「補助的」に使用しました。『データベース＋印刷/帳票編』となっていますが、ほとんど「印刷」と「CrystalReports」のことを「参照」しました。「このシリーズ以外」の「分厚い本」や「ヘルプ」や「ネット」から「目的の情報」を見つけ出すのは、かなり「手間」がかかり、うんざりしますが、「この本」は「検索性」に「優れている」ので、①「この本」で、直接解決しなくても、ここから「ヒント」を「掴み」、「ヘルプ」や「ネット」を「検索」すると、「解決」することが多々ありました。「レビュー投稿」現在は、「PG」の「仕事」から離れており、①「この本」はかさばるので、泣く泣く「処分」しましたが、「VB.NET」の「システム」は、まだ「稼働」しているので、「処分しなければ良かったかな」と「後悔」するくらいの「内容」です。
.NETで複雑になったADOを、豊富なサンプルプログラムでわかりやすく解説したすばらしい本です。確かに、日経BPの「プログラミングADO.NET」の方がはるかに詳細に解説されていますが、ある程度力がないとこれは読みこなせないでしょう。なんというか、この本は目的意識を持って読むとすばらしい本だと思います。その点、この「至高の技 」は、最初から読み進めてもいいし、調べるのに使うのにも良いという、初心者でも使いこなせる良書です。「VB.NET大全500」の足りない部分を大幅に補ったイメージでしょうか。ADO.NETのサンプル集はないのかなぁとずっと思っていたので、「よく出してくれた！」という感じですね。買って損する事はありません。
Visual Studio 2005が新規にリリースされました。そこで、｢第４章Webとデータベース連携の技｣の内容が、この本の出版後にリリースされたVisual Studio 2005のVisual Web Developer動作環境と比較して、やや古くなってしまったのが残念です。例えば、DataGridコントロール＋DataSetコントロールでWeb表示データを作成するプログラム部分がGridViewコントロールに移行すると、プログラム部分を書かなくてもWeb表示が可能になるような記事です。Visual Web Developerの改定部分を盛り込んだ改定版を期待します。Windowsフォームと３層構造のO-Rマッピングの内容は実践の場で使えるものばかりで、今後役に立つことと思います。
サンプルがびっしり詰まっています。説明が少なくある程度分かってないと理解できない分からないことが出てくればこの本の説明では不十分なことがあるので別本やネットで調べないといけない感じです。ただ、理解できなくてもコピペーで使えます
恐らく初心者の方はその情報量に圧倒される事でしょう。比較的簡単なものから、こんな事もできたのかと驚かされるようなテクニックまでギッシリ詰まっていますが、いずれもある程度の基本を覚えた人でないと要点を掴むのに手間取ると思います。内容については予想以上に幅広く、ネットワークやセキュリティーについても触れられていましたが、本のタイトルにも挙げられてる帳票に関する内容は、CrystalReportsに関するものに限られており、量的にも少なくて非常に残念でした。
最近の OBJECT Pascal を学ぶため購入。嘗て Borland Delphi7 迄は、入門書、文法書、分厚い開発者ガイド等がパッケージに付属していました。On Line Help で対象項目を探すのは、面倒くさい事がある。内容は初心者向きでは無いですが、必要な事は記載されていると思います。以上嘗て
本書はDelphi(Object Pascal)の初心者向けの入門書でもリファレンスマニュアルでもありません。Delphiで小道具程度しか作ったことが無い私にとっては、特に後半は手強い内容でした。サンプルデモのソースコードが公開されているのは助かります。
DocWiki をあてもなく彷徨うよりは、この本を購入して集中的に学習した方が効率的でしょう。少々お高いですが、値段分の価値はあるかと思います。
Delphi 5 came with a 1 1/2" thick Developer's Guide.  Later versions came only with a help file.  This book is what should come with each version of Delphi - a easily readable definition of the language.  There are a few shortcomings, however.  One, it is full of grammatical errors - very poor editing.  Second, it does not clearly specify what versions of Object Pascal it applies to.  But there are very few other options available.  Why is there no manual from Embarcadero Technologies?
Although I got a free electronic version from Embarcadero, I still purchased a bound copy. This is a great and up-to-date introduction to Delphi/Object Pascal that can still teach a few things even to the more experienced users. If you Master this book's contents, followed by Chris Rolliston's Delphi XE2 Foundations (an incredibly well conceived book), you will be well on your way to maximize your productivity with Delphi. Further complementary reading could be Nick Hodge's Coding in Delphi and More Coding in Delphi books.
These days, we see only a few books published on Object Pascal (Delphi), though it remains my favorite language tool. This volume brings together old material from Marco's earlier books on Delphi, and adds good coverage of more recent features in the language. The lack of downloadable source code is increasingly a disappointment, and detracts from the value of the book, which clearly was written to use the source code as a complement. Topics discussed are of less value when in some cases, the context of usage is missing.
Wir haben mit unserer Delphi-Lizenz eine digitale Version dieses Buches vorliegen. Da ich vom Autor und dem Inhalt überzeugt bin, wollte ich mir als "haptischer Hase" eine Druckversion besorgen. Der Inhalt ist immer noch seine 5 Sterne wert!Das gelieferte Druckexemplar jedoch ist eindeutig Abzocke! Es ist mir unbegreiflich wie der Autor zu so einem Druckerzeugnis seine Zustimmung geben konnte. Es handelt sich hierbei um ein billig erstelltes Taschenbuch (aus billigem Papier) mit zweifarbigem Inhalt (ja, Schwarz und Weiß). Jedem mit digitaler Version sei anzuraten, das Buch einfach selbst auszudrucken. Das ist auf jeden Fall günstiger und kann die Qualität nur steigern!
I've been using Delphi for quite a while.  Read a couple of chapters, so far.  Great book.I'll post a detailed review after I read the whole thing.
I originally read this book as a free e-book with Delphi XE7, but I purchased a print copy because it is an essential reference. When they say this is THE BOOK on the subject, it is literally true as there are no other current references. If you are learning Delphi, this book is the textbook on the subject.
This author is the best!
accessVBAそのものについては少し不満あり、でも全体的に良く書かれていた。
オフィス2007の現時点では、今の状況を反映したものではないが、Access VBAの基本的な考え方を理解するのには最適な本だと思う。VBAの立場からの説明に偏らず、Accessの立場（データベースの利用）からVBAを説明したもので、Accessの構造を説明した本がない現状では、貴重な本であると思います。
ACCESSの入門書は、操作画面のとおりにやってみたら掲載の写真のとおりに出来たけど、だから一体何なの。と、なりがちだが、データベースの基本的な考え方から説明がされていて、比較的、わかりやすい入門書だと思う、じゃあなんで星２つなのかというと、もう少し硬い内容のもの、大量のコードの実例を想像していた私のニーズに合わなかったのでした。悪い本というわけではありません。
Excel VBAの 名解説書を多数執筆している大村あつし氏がAccess VBAの解説本を出版と知り早速購入した。他のAccessVBA入門書と比べて「カリキュラム」が整理されていて大変学習しやすい構成となっている。また「本書では、データベースの設計理論について、たっぷりと、しかし、非常にわかりやすく解説しています。これが本書の最大の特徴」（「はじめに」より引用）である。これからAccessに取り組もうという読者にとっては最適な独習書である。しかし、520ページほどの本書の前半112ページがAccessそのものの解説に当てられており、肝心のVBAについては、基本中の基本しか解説されていない。ほんの少しAccessVBAをかじった僕としては、この点が不満である。実際にアプリケーションを作っていくためのプログラミング・テクニックについて解説した「続編」の早期の出版を期待する。
「独習」のタイトルに恥じない良い本だと思います。手元にPCがあり、ACCESSがインストールされていて、「さあこれからACCESS、VBAを勉強するぞ！」という人には絶対役立ちますよ。他のACCESS解説本読んでもなんだかピンとこなかった部分が、この本を読んで理解できました。
SQLについてのテクニックが書いてあり非常に勉強になった。まさに応用編のテクニカル版。本当はkindle版が欲しかったんだけど本よりも高くなってたんで諦めました。もう新品はないようで中古を買ってます。
いろんなテクニッックが書かれていてとてもためになります。ただし、結構難しく、じっくりと読んでいきたいです。
よくあるマニュアル本と異なり、カラーの図表は存在しません。画面写真も白黒で地味な本です。しかしリレーショナルデータベースを基本から勉強したい人にはお勧めできます。リレーショナルデータベースということでフォームやレポートよりもクエリー・テーブルに関する話題が中心となります。この本で学んでおくと、他のリレーショナルデータベースへの移行も比較的容易だと思います。ただコンピュータに関してまったくの初心者にはつらいかな。excelをかじったことがある人なら大丈夫だと思いますが。
最近の技術本にありがちな表層的な解説ではなく、背景にある考え方にも多くのページをさいてあり、勉強になりました。システムトラブルが起きてから対処するよりも、トラブルを起こさない設計をすることのほうが重要であり、そのような設計をするためには背景にある考え方をどれだけ知っているかが武器になります。エンジニアという生き物は経験やノウハウを自分の中に閉じ込める傾向があり、ましてや会社の外にはなかなか出てこないものですが、この本は日本オラクルのコンサルタントがノウハウの一部を出してくれたという点で貴重な一冊です。今後もこのような本を出してくれる期待を込めて星5つ。
データベースの基本からアクセスの操作に至るまで丁寧に解説されています、ソフトのバージョンの古さはあるものの大変わかり易く未だに愛用しています。ただ基本的なクエリの種類について、テキスト文の説明だけでなく図式を入れてもう少し詳しく載せておいて欲しかったかな。という気はします。その他は、さすが技術評論社さんのテキストわかり易いです。
Accessは、他のMS-Office製品と比べても際立って特殊な製品だと思います。というのも、「データベース設計」などから始まって、アプリケーション開発(といっても、Accessの場合は自前のフォームやレポート・VBAで完結させる場合が多いが)の能力が必要になる――早い話が、SQL ServerやMySQL・Oracleなど、RDBMS寄りの知識が強く要求される製品なのです。まぁ、それらに比べると色々「緩い」・独自色が極めて強い側面はありますが、少なくとも他のOffice製品と同様に触っていると、確実に「大怪我」をする製品なのは確実でしょう。(これは余談ですが、「テーブルのセル結合をやりたい」という困ったことを言ってる人がいました。Excelを使ってください。)総じて、Accessを利用するにはRDBMSの理論的な知識がどうしても避けられない傾向にあります。いわゆる「ハウツー」本や一般的なAccessの入門書はこの点に触れていないことが多々ありますが、これらの書籍は総じて「役立たず」です。むしろ、Accessの入門には「Accessの入門書」ではなく、「データベースの入門書」が必要なのです。「データベースの基本的な概念を学んでから、Access独特の操作を学ぶ」方が効率がいい。例えば次のような書籍。これも良い書籍です。https://www.amazon.co.jp/dp/4774139939/この点、この書籍は比較的「ゆるい」感じの表紙にも拘らず、その点はかなりしっかりしています。Accessの基本操作、データベースの設計、正規化の概念、クエリの作成(それもSQLについてまで相当詳しく――むしろSQLでクエリを作成する前提ではないかと思われるほど、しかもDDLにまで触れている！)、リレーションシップの活用などなど、それらが体系だってしっかり叩きこまれています。Accessではこれらについてしっかり理解していないと、とんでもないデータベース、それこそExcelのスプレッドシートの延長でしかないようなズタボロなデータベースを組んでしまうことが多々ありますが(そのようなものは沢山見てきました)、この書籍ではその心配も少ないでしょう。2007年までの対応と比較的古い書籍ですが、いまだに利用価値が非常に高い、良書です。
アクセスの基本から順番に分かりやすく成っているので役に立っています。
とても安く購入できて良かったです。また利用したいです（＾◇＾）
ACCESSというか、データベースは概念を学ぶことが必須です。データベースについては手続き的なことを紹介している本はいっぱいありますが、概念を解説してる本は少ないですし、説明しているとしても中途半端です。　本書は、概念を理解することを中心に手続きを追って紹介しているという稀に見る良書です。それでも、データベースの、特にACCESSの概念を理解するのは困難です。　この本は2〜3回読めばその辺が理解できてくると思います。それでもACCESSを使うかどうかは、本人次第です。なぜかというとACCESSは複雑すぎて脆弱だからです。それでも、データベースの概念を勉強するにはこの本がいいと思います。
本書はタイトルの通り、accessの細かい使用方法を解説するのではなく、データベースの基本概念を学ぶことに重点をおいている。初心者にはデータベースの概念が分かりにくく、最初の設計の段階で途方にくれてしまうが、本書はそのあたりをうまく解説してくれている。accessは難度の高いソフトなので一冊でマスターできることはないと思うが、本書は最初の一冊としては最適だと思う。おすすめ。
私自身はOracle 7.xでのプログラミングを始めたときに初版(
プログラマのためのSQL
)を購入して、類書のなかで一番役立った本です。各RDBMSに共通な普遍的なTipsということになると(当時は)この本しかありませんでした。原著はJoe Celko's SQL for Smarties: Advanced SQL Programmingで、 初版:
Joe Celko's SQL for Smarties: Advanced SQL Programming
(1995), 2nd(2004), 3rd:
Joe Celko's SQL for Smarties, Third Edition: Advanced SQL Programming (The Morgan Kaufmann Series in Data Management Systems)
(2005), 4th:
Joe Celko's SQL for Smarties, Fourth Edition: Advanced SQL Programming (The Morgan Kaufmann Series in Data Management Systems)
(2010)と版を重ねています。本翻訳は第二版の和訳となります。とにかく(自称?)初心者向けの本がはびこるなか(スクリーンショットだらけの本とか、よく理解できないままわかった範囲だけで適当にでっちあげ、など)、そこから少し踏み込んだ内容になると参考にできる本が皆無だった時代に大変おせわになりました。さすがに内容的には少し古くなりましたが、一歩踏み込んだSQL世界を俯瞰するには、まだ使える一冊です。より最近の話題については、本書の原著第3版以降を。また日本語でより噛み砕いた形で気軽に学ぶには、セルコの申し子(?) であるミックさんの本(
達人に学ぶ SQL徹底指南書 (CodeZine BOOKS)
)を購入するのがよいかと思います。[2013/05/31 追記]なんとミックさんによる翻訳で最新版である四版の日本語訳がでました。
プログラマのためのSQL 第4版
今後はそちらのご購入をお勧めします。
初心者を脱出して神秘のSQLを紡ぎだすために避けては通れない本。（神秘的にわかりにくいプログラミングをしてはいけませんが）特定ベンダーに依存せず標準SQLの範囲で問題を解きつつ、ベンダー実装に関しても触れています。関係代数の定義までは行いませんが、SQLの解説に関してはかなり理論的です。SQLの仕様、実行順、実装の細部まで視野に入れた解説は非常に参考になります。数学的解説を除く関係モデルのすべてがここにあります。ただし原書はすでに４版となっておりSQL標準のカバー範囲はSQL99の前までです。
とても良い本でしたが、より新しい
プログラマのためのSQL 第4版
が出ています。
原題は↓です。「Joe Celko's SQL for Smarties: Advanced SQL Programming」初心者向けのSQLでもないし、現場でそのままつかうためのSQLでもなく、オラクルマスター向けのSQLでもなく、SmartyのためのSQLです。SQLを全て知り尽くしていると思っている人のためのSQLって感じでしょうか？Smartyってあまりいい意味では使われないと思いますが。。。。。。かといって難易度の高いSQLの解説というわけではなく、切り口が、Smarty仕様になっています。実際の開発でSQLを書くときに参考にする、というよりは、SQLという言語を学び、そのなかでSQLプログラミングのちょっとしたコツやテクニックを身につける本だと思ってください。通常のSQL本と異なり、会社の机の上に上にあるだけで箔が付きますよ。
サンプルデータはいかにも「サンプル」っぽいネーミングで「え？」って感じですが、学習面では図解やポイントの解説があり理解を助けてくれます。楽しみながら学習できる一冊です。
SQLに再チャレンジしたくて、購入しました。書籍自体にSQLを書き込んで勉強できるようになっていて、面白かったです。ステップとしては、構文穴埋め　→　並べ替え　→　間違い探し　→　コマンドを入力して実行本書に手書きでSQLを書くことで構文を頭に入れ、最後にSQLを実行して再確認するような形でした。アナログなようですが、自分の手で何度も構文や例題を書くことで、徹底的に頭に基本を叩き込んでいくという感じでしょうか。以前買った本で勉強していたときは、なんとなく分かった気になって先に進んで、結局挫折しました･･･。この本は、簡単な仕事にどんどんオプションを付けて、最後に大きな仕事へとステップアップしていくようなストーリーになっていたので、理解しやすかったです。再挑戦したい人や初心者の人には、かなり分かりやすい教科書になると思います。
会社でunixの基礎を教わった後に、自分なりのスクリプトを書くために参考にした本です。今読むと、内容が系統立てていなかったりしますが、書いていないことはないと思います。awkは最近は使われないのかぁとも思いますが、ちょことした整形にはやはり便利
とても良い。気に入ってます。もし機会があれば、再度購入を検討してみたい。
SEDは、機械翻訳ソフトPAT　Transerの開発者である佐良木さんの指導の元、機械翻訳ソフトの開発研究プロジェクトで利用させていただいた。AWKは、規格などを翻訳する際に、単語帳を作るのに、AWKのスクリプトを利用させていただいている。どちらも、実用的に使える道具なので、感謝しています。最初は、本書を含めて、数冊購入して勉強しました。１から記述したこと（スクラッチからの開発）はありません。例を参考に、機能拡張または機能削除で対応しています。
この本は、ゲノムネットの構築に関係された方の書籍なので、よく分かります。この手の本では、良い方だと思います。
SQL Server の管理の基本を押さえた内容となっています。2014の新機能がいくつか取り込まれており、利用頻度の高い機能を理解するにはこれ1冊で十分かと思います。また、手を動かして理解するために、手順書的のように画面キャプチャが多数使用されている点も、わかりやすさの点では非常によいのではないでしょうか。書籍タイトルがやや堅い感じがしますが、レベル的には「一目でわかる」シリーズに近いかと思います。上記のようなレベル感なので、やや高度なことがしたい、より深い知識を身につけたい方には向かない内容だと思いますので、購入する前に書店などで現物を確認した方がよいかもしれません。
「本書は、難解なコマンドは一切使用しないで…」という前書きの通り、基本的に DBA 初心者向けのような感じです。ただそれにしては、Standard 以上にしかない機能、および Enterprise にしかない機能が混ざっており、無償の Express 版で試すのはかなり厳しいです。できれば Express を前提とした初心者向けと、Standard/Enterprise 機能に注力した中級者以上向けに分冊してもらえるとよいのでしょうが、営業的な観点からそうもいかないでしょうね。あと、装丁というか、紙の質が悪いこともちょっと気になりました。本当は星３つとしたいところですが、2014 対応が他にほとんどないことから、がんばって早めに出していただいたということで、希少価値を含めて星４つです。
何も考えずに書いてあるとおりに進める分には（誤字脱字以外）特に問題なく、わかりやすいかと思います。しかし、いくつか改善してほしい点があります。・初心者はEnterpriseではなくフリーのExpressで勉強する方も多いかと思うので、できればExpressのインストール方法も書いてほしい・実際に別のネットワークにあるクライアントからアクセスしようととするとできない。ある程度ネットワークに詳しい人ならわかるかもしれないが、どうしても出来ないので諦めようとしたら、後ろのページになってから注意事項として教えてくれる。ネットワークに詳しくない人も購入するので躓きやすいところは最初から教えてほしい。わからない箇所は飛ばして最後まで一通りやると理解が早いかもしれません。
ActiveDirectoryはこの一冊ですべてわかる事を期待して購入しました。非常にわかりやすく書かれていますが、応用例があるとさらに良いと思います。
